{
	"id": "4beb5564691f0ad829ab05dd707631a6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MNT_Mumbai.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; //The base ERC-20 contract. \r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\"; //To add a max supply of 5B tokens.\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";//To fetch the live MATIC/USD rate\r\n\r\ncontract MNT is ERC20Capped\r\n{\r\n    AggregatorV3Interface internal dataFeed;\r\n\r\n    address public contractOwner;\r\n    uint256 ourCap=5000000000; //5,000,000,000 Tokens\r\n    uint256 public capPerAccount=5000;\r\n\r\n\r\n    // Event to log token purchases with timestamp and current balance of the purchaser\r\n    event TokensPurchased(address indexed buyer, uint256 tokensMinted, uint256 weiPaid, uint256 timestamp, uint256 balance);\r\n\r\n    // Event to log minting fees withdrawal with timestamp\r\n    event MintingFeesWithdrawn(uint256 amount, uint256 timestamp);\r\n\r\n    // Event to log changes in the capPerAccount variable with previous and new values and timestamp\r\n    event CapPerAccountUpdated(uint256 previousCap, uint256 newCap, uint256 timestamp);\r\n\r\n\r\n    constructor() ERC20(\"Monet\",\"MNT\")  ERC20Capped(ourCap*(10**uint256(decimals())))\r\n    {\r\n        contractOwner=msg.sender;\r\n        dataFeed = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada);//The address of MATIC/usd feed contract (Mumbai Version) from chainlink\r\n        _mint(contractOwner,2500000000*(10**uint256(decimals())));\r\n    }\r\n\r\n    modifier onlyOwner()\r\n    {\r\n        require(msg.sender == contractOwner, \"Error-MNT_MUMBAI.sol-Ownable\");\r\n        _;\r\n    }\r\n\r\n    function buyTokensFromContract() external payable\r\n    {\r\n        //This buy function is coded in a way that whatever amount the user sends to this function,\r\n        // they will get an equivalent amount of Monet Tokens in return.\r\n\r\n        require(msg.value != 0,\"Error-MNT_MUMBAI.sol-Valueless_Transaction\");\r\n        // Mint tokens using _mint from ERC20.sol\r\n        uint256 tokensToMint=msg.value*(10**uint256(decimals()))/zTokenPriceInWei() ;\r\n\r\n        require(balanceOf(msg.sender) + tokensToMint <= capPerAccount * (10**uint256(decimals())), \"Error-MNT_MUMBAI.sol-Exceeds_Max_Balance\");\r\n\r\n        _mint(msg.sender,tokensToMint);\r\n        emit TokensPurchased(msg.sender, tokensToMint, msg.value, block.timestamp, balanceOf(msg.sender));\r\n    }\r\n\r\n    function updateCapPerAccount(uint newCap) public onlyOwner\r\n    {\r\n        uint256 previousCap = capPerAccount;\r\n        capPerAccount=newCap;\r\n        emit CapPerAccountUpdated(previousCap, newCap, block.timestamp);\r\n    }\r\n\r\n    function OneMATICInCents() public view returns (int)\r\n    {\r\n        (,int answer,,,) = dataFeed.latestRoundData(); //We care only about the exchange rate, so we ignore other parameters\r\n        \r\n        //The price we get as an output is the exchange rate, with 8 decimal places.\r\n        //Example of that:\r\n        //      Let's consider the price of MATIC to be $0.88.\r\n        //      The output we will get from calling the dataFeed function could be: 88014327\r\n        //      The output means that the exact price of MATIC right now is: $0.88014327\r\n        //      As I don't really want an answer this accurate, I can take only the answer in Cents (the smallest unit of USD)\r\n        //      To get the answer in Cents, I can divide the output I get by 10**6 (The output has 8 decimals, but I care only about the first two decimals)\r\n        return answer/1000000;\r\n        //      So the value I am returning is the price of one MATIC in Cents. In our example, the return value will be 88.\r\n        //      This means that: 1 MATIC = 88 US Cents\r\n    }\r\n\r\n    function zTokenPriceInWei() public view returns (uint256)\r\n    {\r\n        //As we set our token price to be equal to $0.02 initially, all this function do is returning the equivalent of $0.02 in MATIC at the moment of calling the function.\r\n        return uint256(2*(10**18))/uint256(OneMATICInCents());\r\n    }\r\n\r\n    function WithdrawMintingFees() external onlyOwner\r\n    {\r\n        uint256 fees = address(this).balance;\r\n        // Transfer minting fees to the owner\r\n        payable(contractOwner).transfer(fees);\r\n        emit MintingFeesWithdrawn(fees, block.timestamp);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Current contract address (Mumbai testnet): 0x7cede569617D98127aB1D008ce7a39F4F5E4DC52"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Total supply cap has been exceeded.\n     */\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev The supplied cap is not a valid cap.\n     */\n    error ERC20InvalidCap(uint256 cap);\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        if (cap_ == 0) {\n            revert ERC20InvalidCap(0);\n        }\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_update}.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n\n        if (from == address(0)) {\n            uint256 maxSupply = cap();\n            uint256 supply = totalSupply();\n            if (supply > maxSupply) {\n                revert ERC20ExceededCap(supply, maxSupply);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 213,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 217,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ERC20Capped": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"details": "Sets the value of the `cap`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084698c9feace630ff29919baad9df0721944eb2ecaf942ef807935bbbe41b5a\",\"dweb:/ipfs/Qmet4EQYqPLSKo7UPBNGaVw5NPATNkiLsqSCnCgg5kAPg4\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 213,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 217,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MNT_Mumbai.sol": {
				"MNT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "CapPerAccountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "MintingFeesWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensMinted",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiPaid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "OneMATICInCents",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WithdrawMintingFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokensFromContract",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "capPerAccount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCap",
									"type": "uint256"
								}
							],
							"name": "updateCapPerAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "zTokenPriceInWei",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MNT_Mumbai.sol\":380:4289  contract MNT is ERC20Capped... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/MNT_Mumbai.sol\":514:524  5000000000 */\n  0x012a05f200\n    /* \"contracts/MNT_Mumbai.sol\":499:524  uint256 ourCap=5000000000 */\n  0x07\n  sstore\n    /* \"contracts/MNT_Mumbai.sol\":583:587  5000 */\n  0x1388\n    /* \"contracts/MNT_Mumbai.sol\":554:587  uint256 public capPerAccount=5000 */\n  0x08\n  sstore\n    /* \"contracts/MNT_Mumbai.sol\":1140:1497  constructor() ERC20(\"Monet\",\"MNT\")  ERC20Capped(ourCap*(10**uint256(decimals())))... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/MNT_Mumbai.sol\":1208:1218  decimals() */\n  tag_3\n    /* \"contracts/MNT_Mumbai.sol\":1208:1216  decimals */\n  shl(0x20, tag_4)\n    /* \"contracts/MNT_Mumbai.sol\":1208:1218  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_3:\n    /* \"contracts/MNT_Mumbai.sol\":1200:1219  uint256(decimals()) */\n  0xff\n  and\n    /* \"contracts/MNT_Mumbai.sol\":1196:1198  10 */\n  0x0a\n    /* \"contracts/MNT_Mumbai.sol\":1196:1219  10**uint256(decimals()) */\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/MNT_Mumbai.sol\":1188:1194  ourCap */\n  sload(0x07)\n    /* \"contracts/MNT_Mumbai.sol\":1188:1220  ourCap*(10**uint256(decimals())) */\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4d6f6e6574000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d4e540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":764:765  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:760  cap_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:765  cap_ == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\n  tag_16\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":804:805  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":788:806  ERC20InvalidCap(0) */\n  mload(0x40)\n  0x392e1e2700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":833:837  cap_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":826:837  _cap = cap_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":716:844  constructor(uint256 cap_) {... */\n  pop\n    /* \"contracts/MNT_Mumbai.sol\":1252:1262  msg.sender */\n  caller\n    /* \"contracts/MNT_Mumbai.sol\":1238:1251  contractOwner */\n  0x06\n  0x00\n    /* \"contracts/MNT_Mumbai.sol\":1238:1262  contractOwner=msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MNT_Mumbai.sol\":1306:1348  0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada */\n  0xd0d5e3db44de05e9f294bb0a3beeaf030de24ada\n    /* \"contracts/MNT_Mumbai.sol\":1273:1281  dataFeed */\n  0x05\n  0x00\n    /* \"contracts/MNT_Mumbai.sol\":1273:1349  dataFeed = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MNT_Mumbai.sol\":1432:1489  _mint(contractOwner,2500000000*(10**uint256(decimals()))) */\n  tag_20\n    /* \"contracts/MNT_Mumbai.sol\":1438:1451  contractOwner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MNT_Mumbai.sol\":1476:1486  decimals() */\n  tag_21\n    /* \"contracts/MNT_Mumbai.sol\":1476:1484  decimals */\n  shl(0x20, tag_4)\n    /* \"contracts/MNT_Mumbai.sol\":1476:1486  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/MNT_Mumbai.sol\":1468:1487  uint256(decimals()) */\n  0xff\n  and\n    /* \"contracts/MNT_Mumbai.sol\":1464:1466  10 */\n  0x0a\n    /* \"contracts/MNT_Mumbai.sol\":1464:1487  10**uint256(decimals()) */\n  tag_22\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_22:\n    /* \"contracts/MNT_Mumbai.sol\":1452:1462  2500000000 */\n  0x9502f900\n    /* \"contracts/MNT_Mumbai.sol\":1452:1488  2500000000*(10**uint256(decimals())) */\n  tag_23\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_23:\n    /* \"contracts/MNT_Mumbai.sol\":1432:1437  _mint */\n  shl(0x20, tag_24)\n    /* \"contracts/MNT_Mumbai.sol\":1432:1489  _mint(contractOwner,2500000000*(10**uint256(decimals()))) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/MNT_Mumbai.sol\":380:4289  contract MNT is ERC20Capped... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_4:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_31\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n  tag_34\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1167:1171  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1173:1175  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1177:1182  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1166  super._update */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1214:1215  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1202  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1249  uint256 maxSupply */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1255  cap */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1257  uint256 maxSupply = cap() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1285  uint256 supply */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1299  totalSupply */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1301  uint256 supply = totalSupply() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1328:1337  maxSupply */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1325  supply */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1337  supply > maxSupply */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1381:1387  supply */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1389:1398  maxSupply */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1364:1399  ERC20ExceededCap(supply, maxSupply) */\n  mload(0x40)\n  0x9e79f85400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap3\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1218:1424  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_48)\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_53)\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n  mload(0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n  sload(0x02)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_58:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x11\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:295   */\ntag_59:\n    /* \"#utility.yul\":235:243   */\n  0x00\n    /* \"#utility.yul\":282:287   */\n  dup2\n    /* \"#utility.yul\":279:280   */\n  0x01\n    /* \"#utility.yul\":275:288   */\n  shr\n    /* \"#utility.yul\":254:288   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":301:1149   */\ntag_60:\n    /* \"#utility.yul\":362:367   */\n  0x00\n    /* \"#utility.yul\":369:373   */\n  dup1\n    /* \"#utility.yul\":393:399   */\n  dup3\n    /* \"#utility.yul\":384:399   */\n  swap2\n  pop\n    /* \"#utility.yul\":417:422   */\n  dup4\n    /* \"#utility.yul\":408:422   */\n  swap1\n  pop\n    /* \"#utility.yul\":431:1143   */\ntag_93:\n    /* \"#utility.yul\":452:453   */\n  0x01\n    /* \"#utility.yul\":442:450   */\n  dup6\n    /* \"#utility.yul\":439:454   */\n  gt\n    /* \"#utility.yul\":431:1143   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":547:551   */\n  dup1\n    /* \"#utility.yul\":542:545   */\n  dup7\n    /* \"#utility.yul\":538:552   */\n  div\n    /* \"#utility.yul\":532:536   */\n  dup2\n    /* \"#utility.yul\":529:553   */\n  gt\n    /* \"#utility.yul\":526:576   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":556:574   */\n  tag_97\n  tag_58\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":526:576   */\ntag_96:\n    /* \"#utility.yul\":606:607   */\n  0x01\n    /* \"#utility.yul\":596:604   */\n  dup6\n    /* \"#utility.yul\":592:608   */\n  and\n    /* \"#utility.yul\":589:1040   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1021:1025   */\n  dup1\n    /* \"#utility.yul\":1014:1019   */\n  dup3\n    /* \"#utility.yul\":1010:1026   */\n  mul\n    /* \"#utility.yul\":1001:1026   */\n  swap2\n  pop\n    /* \"#utility.yul\":589:1040   */\ntag_98:\n    /* \"#utility.yul\":1071:1075   */\n  dup1\n    /* \"#utility.yul\":1065:1069   */\n  dup2\n    /* \"#utility.yul\":1061:1076   */\n  mul\n    /* \"#utility.yul\":1053:1076   */\n  swap1\n  pop\n    /* \"#utility.yul\":1101:1133   */\n  tag_99\n    /* \"#utility.yul\":1124:1132   */\n  dup6\n    /* \"#utility.yul\":1101:1133   */\n  tag_59\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1089:1133   */\n  swap5\n  pop\n    /* \"#utility.yul\":431:1143   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":301:1149   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1155:2228   */\ntag_61:\n    /* \"#utility.yul\":1209:1214   */\n  0x00\n    /* \"#utility.yul\":1400:1408   */\n  dup3\n    /* \"#utility.yul\":1390:1430   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":1421:1422   */\n  0x01\n    /* \"#utility.yul\":1412:1422   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1428   */\n  jump(tag_100)\n    /* \"#utility.yul\":1390:1430   */\ntag_101:\n    /* \"#utility.yul\":1449:1453   */\n  dup2\n    /* \"#utility.yul\":1439:1475   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1457:1467   */\n  swap1\n  pop\n    /* \"#utility.yul\":1468:1473   */\n  jump(tag_100)\n    /* \"#utility.yul\":1439:1475   */\ntag_102:\n    /* \"#utility.yul\":1535:1539   */\n  dup2\n    /* \"#utility.yul\":1583:1584   */\n  0x01\n    /* \"#utility.yul\":1578:1605   */\n  dup2\n  eq\n  tag_104\n  jumpi\n    /* \"#utility.yul\":1619:1620   */\n  0x02\n    /* \"#utility.yul\":1614:1805   */\n  dup2\n  eq\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1528:1805   */\n  jump(tag_103)\n    /* \"#utility.yul\":1578:1605   */\ntag_104:\n    /* \"#utility.yul\":1596:1597   */\n  0x01\n    /* \"#utility.yul\":1587:1597   */\n  swap2\n  pop\n    /* \"#utility.yul\":1598:1603   */\n  pop\n  jump(tag_100)\n    /* \"#utility.yul\":1614:1805   */\ntag_105:\n    /* \"#utility.yul\":1659:1662   */\n  0xff\n    /* \"#utility.yul\":1649:1657   */\n  dup5\n    /* \"#utility.yul\":1646:1663   */\n  gt\n    /* \"#utility.yul\":1643:1686   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":1666:1684   */\n  tag_107\n  tag_58\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1643:1686   */\ntag_106:\n    /* \"#utility.yul\":1715:1723   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  0x02\n    /* \"#utility.yul\":1708:1724   */\n  exp\n    /* \"#utility.yul\":1699:1724   */\n  swap2\n  pop\n    /* \"#utility.yul\":1750:1753   */\n  dup5\n    /* \"#utility.yul\":1743:1748   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  gt\n    /* \"#utility.yul\":1737:1777   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":1757:1775   */\n  tag_109\n  tag_58\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1737:1777   */\ntag_108:\n    /* \"#utility.yul\":1790:1795   */\n  pop\n  jump(tag_100)\n    /* \"#utility.yul\":1528:1805   */\ntag_103:\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1904:1912   */\n  dup4\n    /* \"#utility.yul\":1901:1917   */\n  lt\n    /* \"#utility.yul\":1895:1898   */\n  0x0133\n    /* \"#utility.yul\":1889:1893   */\n  dup4\n    /* \"#utility.yul\":1886:1899   */\n  lt\n    /* \"#utility.yul\":1882:1918   */\n  and\n    /* \"#utility.yul\":1864:1866   */\n  0x4e\n    /* \"#utility.yul\":1854:1862   */\n  dup5\n    /* \"#utility.yul\":1851:1867   */\n  lt\n    /* \"#utility.yul\":1846:1848   */\n  0x0b\n    /* \"#utility.yul\":1840:1844   */\n  dup5\n    /* \"#utility.yul\":1837:1849   */\n  lt\n    /* \"#utility.yul\":1833:1868   */\n  and\n    /* \"#utility.yul\":1817:1928   */\n  or\n    /* \"#utility.yul\":1814:2060   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":1970:1978   */\n  dup3\n    /* \"#utility.yul\":1964:1968   */\n  dup3\n    /* \"#utility.yul\":1960:1979   */\n  exp\n    /* \"#utility.yul\":1951:1979   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2008   */\n  dup4\n    /* \"#utility.yul\":1998:2003   */\n  dup2\n    /* \"#utility.yul\":1995:2009   */\n  gt\n    /* \"#utility.yul\":1992:2032   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":2012:2030   */\n  tag_112\n  tag_58\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1992:2032   */\ntag_111:\n    /* \"#utility.yul\":2045:2050   */\n  jump(tag_100)\n    /* \"#utility.yul\":1814:2060   */\ntag_110:\n    /* \"#utility.yul\":2085:2127   */\n  tag_113\n    /* \"#utility.yul\":2123:2126   */\n  dup5\n    /* \"#utility.yul\":2113:2121   */\n  dup5\n    /* \"#utility.yul\":2107:2111   */\n  dup5\n    /* \"#utility.yul\":2104:2105   */\n  0x01\n    /* \"#utility.yul\":2085:2127   */\n  tag_60\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2070:2127   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2163   */\n  dup2\n    /* \"#utility.yul\":2154:2157   */\n  dup5\n    /* \"#utility.yul\":2150:2164   */\n  div\n    /* \"#utility.yul\":2143:2148   */\n  dup2\n    /* \"#utility.yul\":2140:2165   */\n  gt\n    /* \"#utility.yul\":2137:2188   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":2168:2186   */\n  tag_115\n  tag_58\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2137:2188   */\ntag_114:\n    /* \"#utility.yul\":2217:2221   */\n  dup2\n    /* \"#utility.yul\":2210:2215   */\n  dup2\n    /* \"#utility.yul\":2206:2222   */\n  mul\n    /* \"#utility.yul\":2197:2222   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:2228   */\ntag_100:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2234:2311   */\ntag_62:\n    /* \"#utility.yul\":2271:2278   */\n  0x00\n    /* \"#utility.yul\":2300:2305   */\n  dup2\n    /* \"#utility.yul\":2289:2305   */\n  swap1\n  pop\n    /* \"#utility.yul\":2234:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2602   */\ntag_6:\n    /* \"#utility.yul\":2377:2382   */\n  0x00\n    /* \"#utility.yul\":2401:2424   */\n  tag_118\n    /* \"#utility.yul\":2419:2423   */\n  dup3\n    /* \"#utility.yul\":2401:2424   */\n  tag_62\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2393:2424   */\n  swap2\n  pop\n    /* \"#utility.yul\":2445:2472   */\n  tag_119\n    /* \"#utility.yul\":2463:2471   */\n  dup4\n    /* \"#utility.yul\":2445:2472   */\n  tag_62\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2433:2472   */\n  swap3\n  pop\n    /* \"#utility.yul\":2491:2595   */\n  tag_120\n    /* \"#utility.yul\":2528:2594   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2518:2526   */\n  dup5\n    /* \"#utility.yul\":2512:2516   */\n  dup5\n    /* \"#utility.yul\":2491:2595   */\n  tag_61\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2482:2595   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2602   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2608:3018   */\ntag_8:\n    /* \"#utility.yul\":2648:2655   */\n  0x00\n    /* \"#utility.yul\":2671:2691   */\n  tag_122\n    /* \"#utility.yul\":2689:2690   */\n  dup3\n    /* \"#utility.yul\":2671:2691   */\n  tag_62\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":2666:2691   */\n  swap2\n  pop\n    /* \"#utility.yul\":2705:2725   */\n  tag_123\n    /* \"#utility.yul\":2723:2724   */\n  dup4\n    /* \"#utility.yul\":2705:2725   */\n  tag_62\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2700:2725   */\n  swap3\n  pop\n    /* \"#utility.yul\":2760:2761   */\n  dup3\n    /* \"#utility.yul\":2757:2758   */\n  dup3\n    /* \"#utility.yul\":2753:2762   */\n  mul\n    /* \"#utility.yul\":2782:2812   */\n  tag_124\n    /* \"#utility.yul\":2800:2811   */\n  dup2\n    /* \"#utility.yul\":2782:2812   */\n  tag_62\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2771:2812   */\n  swap2\n  pop\n    /* \"#utility.yul\":2961:2962   */\n  dup3\n    /* \"#utility.yul\":2952:2959   */\n  dup3\n    /* \"#utility.yul\":2948:2963   */\n  div\n    /* \"#utility.yul\":2945:2946   */\n  dup5\n    /* \"#utility.yul\":2942:2964   */\n  eq\n    /* \"#utility.yul\":2922:2923   */\n  dup4\n    /* \"#utility.yul\":2915:2924   */\n  iszero\n    /* \"#utility.yul\":2895:2978   */\n  or\n    /* \"#utility.yul\":2872:3011   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":2991:3009   */\n  tag_126\n  tag_58\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2872:3011   */\ntag_125:\n    /* \"#utility.yul\":2656:3018   */\n  pop\n    /* \"#utility.yul\":2608:3018   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3024:3123   */\ntag_63:\n    /* \"#utility.yul\":3076:3082   */\n  0x00\n    /* \"#utility.yul\":3110:3115   */\n  dup2\n    /* \"#utility.yul\":3104:3116   */\n  mload\n    /* \"#utility.yul\":3094:3116   */\n  swap1\n  pop\n    /* \"#utility.yul\":3024:3123   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3129:3309   */\ntag_64:\n    /* \"#utility.yul\":3177:3254   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3174:3175   */\n  0x00\n    /* \"#utility.yul\":3167:3255   */\n  mstore\n    /* \"#utility.yul\":3274:3278   */\n  0x41\n    /* \"#utility.yul\":3271:3272   */\n  0x04\n    /* \"#utility.yul\":3264:3279   */\n  mstore\n    /* \"#utility.yul\":3298:3302   */\n  0x24\n    /* \"#utility.yul\":3295:3296   */\n  0x00\n    /* \"#utility.yul\":3288:3303   */\n  revert\n    /* \"#utility.yul\":3315:3495   */\ntag_65:\n    /* \"#utility.yul\":3363:3440   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3360:3361   */\n  0x00\n    /* \"#utility.yul\":3353:3441   */\n  mstore\n    /* \"#utility.yul\":3460:3464   */\n  0x22\n    /* \"#utility.yul\":3457:3458   */\n  0x04\n    /* \"#utility.yul\":3450:3465   */\n  mstore\n    /* \"#utility.yul\":3484:3488   */\n  0x24\n    /* \"#utility.yul\":3481:3482   */\n  0x00\n    /* \"#utility.yul\":3474:3489   */\n  revert\n    /* \"#utility.yul\":3501:3821   */\ntag_66:\n    /* \"#utility.yul\":3545:3551   */\n  0x00\n    /* \"#utility.yul\":3582:3583   */\n  0x02\n    /* \"#utility.yul\":3576:3580   */\n  dup3\n    /* \"#utility.yul\":3572:3584   */\n  div\n    /* \"#utility.yul\":3562:3584   */\n  swap1\n  pop\n    /* \"#utility.yul\":3629:3630   */\n  0x01\n    /* \"#utility.yul\":3623:3627   */\n  dup3\n    /* \"#utility.yul\":3619:3631   */\n  and\n    /* \"#utility.yul\":3650:3668   */\n  dup1\n    /* \"#utility.yul\":3640:3721   */\n  tag_131\n  jumpi\n    /* \"#utility.yul\":3706:3710   */\n  0x7f\n    /* \"#utility.yul\":3698:3704   */\n  dup3\n    /* \"#utility.yul\":3694:3711   */\n  and\n    /* \"#utility.yul\":3684:3711   */\n  swap2\n  pop\n    /* \"#utility.yul\":3640:3721   */\ntag_131:\n    /* \"#utility.yul\":3768:3770   */\n  0x20\n    /* \"#utility.yul\":3760:3766   */\n  dup3\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3737:3755   */\n  dup2\n    /* \"#utility.yul\":3734:3772   */\n  sub\n    /* \"#utility.yul\":3731:3815   */\n  tag_132\n  jumpi\n    /* \"#utility.yul\":3787:3805   */\n  tag_133\n  tag_65\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3731:3815   */\ntag_132:\n    /* \"#utility.yul\":3552:3821   */\n  pop\n    /* \"#utility.yul\":3501:3821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3827:3968   */\ntag_67:\n    /* \"#utility.yul\":3876:3880   */\n  0x00\n    /* \"#utility.yul\":3899:3902   */\n  dup2\n    /* \"#utility.yul\":3891:3902   */\n  swap1\n  pop\n    /* \"#utility.yul\":3922:3925   */\n  dup2\n    /* \"#utility.yul\":3919:3920   */\n  0x00\n    /* \"#utility.yul\":3912:3926   */\n  mstore\n    /* \"#utility.yul\":3956:3960   */\n  0x20\n    /* \"#utility.yul\":3953:3954   */\n  0x00\n    /* \"#utility.yul\":3943:3961   */\n  keccak256\n    /* \"#utility.yul\":3935:3961   */\n  swap1\n  pop\n    /* \"#utility.yul\":3827:3968   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3974:4067   */\ntag_68:\n    /* \"#utility.yul\":4011:4017   */\n  0x00\n    /* \"#utility.yul\":4058:4060   */\n  0x20\n    /* \"#utility.yul\":4053:4055   */\n  0x1f\n    /* \"#utility.yul\":4046:4051   */\n  dup4\n    /* \"#utility.yul\":4042:4056   */\n  add\n    /* \"#utility.yul\":4038:4061   */\n  div\n    /* \"#utility.yul\":4028:4061   */\n  swap1\n  pop\n    /* \"#utility.yul\":3974:4067   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4073:4180   */\ntag_69:\n    /* \"#utility.yul\":4117:4125   */\n  0x00\n    /* \"#utility.yul\":4167:4172   */\n  dup3\n    /* \"#utility.yul\":4161:4165   */\n  dup3\n    /* \"#utility.yul\":4157:4173   */\n  shl\n    /* \"#utility.yul\":4136:4173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4073:4180   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4186:4579   */\ntag_70:\n    /* \"#utility.yul\":4255:4261   */\n  0x00\n    /* \"#utility.yul\":4305:4306   */\n  0x08\n    /* \"#utility.yul\":4293:4303   */\n  dup4\n    /* \"#utility.yul\":4289:4307   */\n  mul\n    /* \"#utility.yul\":4328:4425   */\n  tag_138\n    /* \"#utility.yul\":4358:4424   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4347:4356   */\n  dup3\n    /* \"#utility.yul\":4328:4425   */\n  tag_69\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4446:4485   */\n  tag_139\n    /* \"#utility.yul\":4476:4484   */\n  dup7\n    /* \"#utility.yul\":4465:4474   */\n  dup4\n    /* \"#utility.yul\":4446:4485   */\n  tag_69\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4434:4485   */\n  swap6\n  pop\n    /* \"#utility.yul\":4518:4522   */\n  dup1\n    /* \"#utility.yul\":4514:4523   */\n  not\n    /* \"#utility.yul\":4507:4512   */\n  dup5\n    /* \"#utility.yul\":4503:4524   */\n  and\n    /* \"#utility.yul\":4494:4524   */\n  swap4\n  pop\n    /* \"#utility.yul\":4567:4571   */\n  dup1\n    /* \"#utility.yul\":4557:4565   */\n  dup7\n    /* \"#utility.yul\":4553:4572   */\n  and\n    /* \"#utility.yul\":4546:4551   */\n  dup5\n    /* \"#utility.yul\":4543:4573   */\n  or\n    /* \"#utility.yul\":4533:4573   */\n  swap3\n  pop\n    /* \"#utility.yul\":4262:4579   */\n  pop\n  pop\n    /* \"#utility.yul\":4186:4579   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4585:4645   */\ntag_71:\n    /* \"#utility.yul\":4613:4616   */\n  0x00\n    /* \"#utility.yul\":4634:4639   */\n  dup2\n    /* \"#utility.yul\":4627:4639   */\n  swap1\n  pop\n    /* \"#utility.yul\":4585:4645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4651:4793   */\ntag_72:\n    /* \"#utility.yul\":4701:4710   */\n  0x00\n    /* \"#utility.yul\":4734:4787   */\n  tag_142\n    /* \"#utility.yul\":4752:4786   */\n  tag_143\n    /* \"#utility.yul\":4761:4785   */\n  tag_144\n    /* \"#utility.yul\":4779:4784   */\n  dup5\n    /* \"#utility.yul\":4761:4785   */\n  tag_62\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":4752:4786   */\n  tag_71\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4734:4787   */\n  tag_62\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4721:4787   */\n  swap1\n  pop\n    /* \"#utility.yul\":4651:4793   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4799:4874   */\ntag_73:\n    /* \"#utility.yul\":4842:4845   */\n  0x00\n    /* \"#utility.yul\":4863:4868   */\n  dup2\n    /* \"#utility.yul\":4856:4868   */\n  swap1\n  pop\n    /* \"#utility.yul\":4799:4874   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4880:5149   */\ntag_74:\n    /* \"#utility.yul\":4990:5029   */\n  tag_147\n    /* \"#utility.yul\":5021:5028   */\n  dup4\n    /* \"#utility.yul\":4990:5029   */\n  tag_72\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5051:5142   */\n  tag_148\n    /* \"#utility.yul\":5100:5141   */\n  tag_149\n    /* \"#utility.yul\":5124:5140   */\n  dup3\n    /* \"#utility.yul\":5100:5141   */\n  tag_73\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5092:5098   */\n  dup5\n    /* \"#utility.yul\":5085:5089   */\n  dup5\n    /* \"#utility.yul\":5079:5090   */\n  sload\n    /* \"#utility.yul\":5051:5142   */\n  tag_70\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5045:5049   */\n  dup3\n    /* \"#utility.yul\":5038:5143   */\n  sstore\n    /* \"#utility.yul\":4956:5149   */\n  pop\n    /* \"#utility.yul\":4880:5149   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5155:5228   */\ntag_75:\n    /* \"#utility.yul\":5200:5203   */\n  0x00\n    /* \"#utility.yul\":5155:5228   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5234:5423   */\ntag_76:\n    /* \"#utility.yul\":5311:5343   */\n  tag_152\n  tag_75\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5352:5417   */\n  tag_153\n    /* \"#utility.yul\":5410:5416   */\n  dup2\n    /* \"#utility.yul\":5402:5408   */\n  dup5\n    /* \"#utility.yul\":5396:5400   */\n  dup5\n    /* \"#utility.yul\":5352:5417   */\n  tag_74\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5287:5423   */\n  pop\n    /* \"#utility.yul\":5234:5423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5429:5615   */\ntag_77:\n    /* \"#utility.yul\":5489:5609   */\ntag_155:\n    /* \"#utility.yul\":5506:5509   */\n  dup2\n    /* \"#utility.yul\":5499:5504   */\n  dup2\n    /* \"#utility.yul\":5496:5510   */\n  lt\n    /* \"#utility.yul\":5489:5609   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":5560:5599   */\n  tag_158\n    /* \"#utility.yul\":5597:5598   */\n  0x00\n    /* \"#utility.yul\":5590:5595   */\n  dup3\n    /* \"#utility.yul\":5560:5599   */\n  tag_76\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5533:5534   */\n  0x01\n    /* \"#utility.yul\":5526:5531   */\n  dup2\n    /* \"#utility.yul\":5522:5535   */\n  add\n    /* \"#utility.yul\":5513:5535   */\n  swap1\n  pop\n    /* \"#utility.yul\":5489:5609   */\n  jump(tag_155)\ntag_157:\n    /* \"#utility.yul\":5429:5615   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5621:6164   */\ntag_78:\n    /* \"#utility.yul\":5722:5724   */\n  0x1f\n    /* \"#utility.yul\":5717:5720   */\n  dup3\n    /* \"#utility.yul\":5714:5725   */\n  gt\n    /* \"#utility.yul\":5711:6157   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":5756:5794   */\n  tag_161\n    /* \"#utility.yul\":5788:5793   */\n  dup2\n    /* \"#utility.yul\":5756:5794   */\n  tag_67\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5840:5869   */\n  tag_162\n    /* \"#utility.yul\":5858:5868   */\n  dup5\n    /* \"#utility.yul\":5840:5869   */\n  tag_68\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5830:5838   */\n  dup2\n    /* \"#utility.yul\":5826:5870   */\n  add\n    /* \"#utility.yul\":6023:6025   */\n  0x20\n    /* \"#utility.yul\":6011:6021   */\n  dup6\n    /* \"#utility.yul\":6008:6026   */\n  lt\n    /* \"#utility.yul\":6005:6054   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":6044:6052   */\n  dup2\n    /* \"#utility.yul\":6029:6052   */\n  swap1\n  pop\n    /* \"#utility.yul\":6005:6054   */\ntag_163:\n    /* \"#utility.yul\":6067:6147   */\n  tag_164\n    /* \"#utility.yul\":6123:6145   */\n  tag_165\n    /* \"#utility.yul\":6141:6144   */\n  dup6\n    /* \"#utility.yul\":6123:6145   */\n  tag_68\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6113:6121   */\n  dup4\n    /* \"#utility.yul\":6109:6146   */\n  add\n    /* \"#utility.yul\":6096:6107   */\n  dup3\n    /* \"#utility.yul\":6067:6147   */\n  tag_77\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5726:6157   */\n  pop\n  pop\n    /* \"#utility.yul\":5711:6157   */\ntag_160:\n    /* \"#utility.yul\":5621:6164   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6170:6287   */\ntag_79:\n    /* \"#utility.yul\":6224:6232   */\n  0x00\n    /* \"#utility.yul\":6274:6279   */\n  dup3\n    /* \"#utility.yul\":6268:6272   */\n  dup3\n    /* \"#utility.yul\":6264:6280   */\n  shr\n    /* \"#utility.yul\":6243:6280   */\n  swap1\n  pop\n    /* \"#utility.yul\":6170:6287   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6293:6462   */\ntag_80:\n    /* \"#utility.yul\":6337:6343   */\n  0x00\n    /* \"#utility.yul\":6370:6421   */\n  tag_168\n    /* \"#utility.yul\":6418:6419   */\n  0x00\n    /* \"#utility.yul\":6414:6420   */\n  not\n    /* \"#utility.yul\":6406:6411   */\n  dup5\n    /* \"#utility.yul\":6403:6404   */\n  0x08\n    /* \"#utility.yul\":6399:6412   */\n  mul\n    /* \"#utility.yul\":6370:6421   */\n  tag_79\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6366:6422   */\n  not\n    /* \"#utility.yul\":6451:6455   */\n  dup1\n    /* \"#utility.yul\":6445:6449   */\n  dup4\n    /* \"#utility.yul\":6441:6456   */\n  and\n    /* \"#utility.yul\":6431:6456   */\n  swap2\n  pop\n    /* \"#utility.yul\":6344:6462   */\n  pop\n    /* \"#utility.yul\":6293:6462   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6467:6762   */\ntag_81:\n    /* \"#utility.yul\":6543:6547   */\n  0x00\n    /* \"#utility.yul\":6689:6718   */\n  tag_170\n    /* \"#utility.yul\":6714:6717   */\n  dup4\n    /* \"#utility.yul\":6708:6712   */\n  dup4\n    /* \"#utility.yul\":6689:6718   */\n  tag_80\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6681:6718   */\n  swap2\n  pop\n    /* \"#utility.yul\":6751:6754   */\n  dup3\n    /* \"#utility.yul\":6748:6749   */\n  0x02\n    /* \"#utility.yul\":6744:6755   */\n  mul\n    /* \"#utility.yul\":6738:6742   */\n  dup3\n    /* \"#utility.yul\":6735:6756   */\n  or\n    /* \"#utility.yul\":6727:6756   */\n  swap1\n  pop\n    /* \"#utility.yul\":6467:6762   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6767:8162   */\ntag_13:\n    /* \"#utility.yul\":6884:6921   */\n  tag_172\n    /* \"#utility.yul\":6917:6920   */\n  dup3\n    /* \"#utility.yul\":6884:6921   */\n  tag_63\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6986:7004   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6978:6984   */\n  dup2\n    /* \"#utility.yul\":6975:7005   */\n  gt\n    /* \"#utility.yul\":6972:7028   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":7008:7026   */\n  tag_174\n  tag_64\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6972:7028   */\ntag_173:\n    /* \"#utility.yul\":7052:7090   */\n  tag_175\n    /* \"#utility.yul\":7084:7088   */\n  dup3\n    /* \"#utility.yul\":7078:7089   */\n  sload\n    /* \"#utility.yul\":7052:7090   */\n  tag_66\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7137:7204   */\n  tag_176\n    /* \"#utility.yul\":7197:7203   */\n  dup3\n    /* \"#utility.yul\":7189:7195   */\n  dup3\n    /* \"#utility.yul\":7183:7187   */\n  dup6\n    /* \"#utility.yul\":7137:7204   */\n  tag_78\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7231:7232   */\n  0x00\n    /* \"#utility.yul\":7255:7259   */\n  0x20\n    /* \"#utility.yul\":7242:7259   */\n  swap1\n  pop\n    /* \"#utility.yul\":7287:7289   */\n  0x1f\n    /* \"#utility.yul\":7279:7285   */\n  dup4\n    /* \"#utility.yul\":7276:7290   */\n  gt\n    /* \"#utility.yul\":7304:7305   */\n  0x01\n    /* \"#utility.yul\":7299:7917   */\n  dup2\n  eq\n  tag_178\n  jumpi\n    /* \"#utility.yul\":7961:7962   */\n  0x00\n    /* \"#utility.yul\":7978:7984   */\n  dup5\n    /* \"#utility.yul\":7975:8052   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8027:8036   */\n  dup3\n    /* \"#utility.yul\":8022:8025   */\n  dup8\n    /* \"#utility.yul\":8018:8037   */\n  add\n    /* \"#utility.yul\":8012:8038   */\n  mload\n    /* \"#utility.yul\":8003:8038   */\n  swap1\n  pop\n    /* \"#utility.yul\":7975:8052   */\ntag_179:\n    /* \"#utility.yul\":8078:8145   */\n  tag_180\n    /* \"#utility.yul\":8138:8144   */\n  dup6\n    /* \"#utility.yul\":8131:8136   */\n  dup3\n    /* \"#utility.yul\":8078:8145   */\n  tag_81\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8072:8076   */\n  dup7\n    /* \"#utility.yul\":8065:8146   */\n  sstore\n    /* \"#utility.yul\":7934:8156   */\n  pop\n    /* \"#utility.yul\":7269:8156   */\n  jump(tag_177)\n    /* \"#utility.yul\":7299:7917   */\ntag_178:\n    /* \"#utility.yul\":7351:7355   */\n  0x1f\n    /* \"#utility.yul\":7347:7356   */\n  not\n    /* \"#utility.yul\":7339:7345   */\n  dup5\n    /* \"#utility.yul\":7335:7357   */\n  and\n    /* \"#utility.yul\":7385:7422   */\n  tag_181\n    /* \"#utility.yul\":7417:7421   */\n  dup7\n    /* \"#utility.yul\":7385:7422   */\n  tag_67\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7444:7445   */\n  0x00\n    /* \"#utility.yul\":7458:7666   */\ntag_182:\n    /* \"#utility.yul\":7472:7479   */\n  dup3\n    /* \"#utility.yul\":7469:7470   */\n  dup2\n    /* \"#utility.yul\":7466:7480   */\n  lt\n    /* \"#utility.yul\":7458:7666   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":7551:7560   */\n  dup5\n    /* \"#utility.yul\":7546:7549   */\n  dup10\n    /* \"#utility.yul\":7542:7561   */\n  add\n    /* \"#utility.yul\":7536:7562   */\n  mload\n    /* \"#utility.yul\":7528:7534   */\n  dup3\n    /* \"#utility.yul\":7521:7563   */\n  sstore\n    /* \"#utility.yul\":7602:7603   */\n  0x01\n    /* \"#utility.yul\":7594:7600   */\n  dup3\n    /* \"#utility.yul\":7590:7604   */\n  add\n    /* \"#utility.yul\":7580:7604   */\n  swap2\n  pop\n    /* \"#utility.yul\":7649:7651   */\n  0x20\n    /* \"#utility.yul\":7638:7647   */\n  dup6\n    /* \"#utility.yul\":7634:7652   */\n  add\n    /* \"#utility.yul\":7621:7652   */\n  swap5\n  pop\n    /* \"#utility.yul\":7495:7499   */\n  0x20\n    /* \"#utility.yul\":7492:7493   */\n  dup2\n    /* \"#utility.yul\":7488:7500   */\n  add\n    /* \"#utility.yul\":7483:7500   */\n  swap1\n  pop\n    /* \"#utility.yul\":7458:7666   */\n  jump(tag_182)\ntag_184:\n    /* \"#utility.yul\":7694:7700   */\n  dup7\n    /* \"#utility.yul\":7685:7692   */\n  dup4\n    /* \"#utility.yul\":7682:7701   */\n  lt\n    /* \"#utility.yul\":7679:7858   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":7752:7761   */\n  dup5\n    /* \"#utility.yul\":7747:7750   */\n  dup10\n    /* \"#utility.yul\":7743:7762   */\n  add\n    /* \"#utility.yul\":7737:7763   */\n  mload\n    /* \"#utility.yul\":7795:7843   */\n  tag_186\n    /* \"#utility.yul\":7837:7841   */\n  0x1f\n    /* \"#utility.yul\":7829:7835   */\n  dup10\n    /* \"#utility.yul\":7825:7842   */\n  and\n    /* \"#utility.yul\":7814:7823   */\n  dup3\n    /* \"#utility.yul\":7795:7843   */\n  tag_80\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7787:7793   */\n  dup4\n    /* \"#utility.yul\":7780:7844   */\n  sstore\n    /* \"#utility.yul\":7702:7858   */\n  pop\n    /* \"#utility.yul\":7679:7858   */\ntag_185:\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7900:7901   */\n  0x02\n    /* \"#utility.yul\":7892:7898   */\n  dup9\n    /* \"#utility.yul\":7888:7902   */\n  mul\n    /* \"#utility.yul\":7884:7906   */\n  add\n    /* \"#utility.yul\":7878:7882   */\n  dup9\n    /* \"#utility.yul\":7871:7907   */\n  sstore\n    /* \"#utility.yul\":7306:7917   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7269:8156   */\ntag_177:\n  pop\n    /* \"#utility.yul\":6859:8162   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6767:8162   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8168:8253   */\ntag_82:\n    /* \"#utility.yul\":8213:8220   */\n  0x00\n    /* \"#utility.yul\":8242:8247   */\n  dup2\n    /* \"#utility.yul\":8231:8247   */\n  swap1\n  pop\n    /* \"#utility.yul\":8168:8253   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8259:8417   */\ntag_83:\n    /* \"#utility.yul\":8317:8326   */\n  0x00\n    /* \"#utility.yul\":8350:8411   */\n  tag_189\n    /* \"#utility.yul\":8368:8410   */\n  tag_190\n    /* \"#utility.yul\":8377:8409   */\n  tag_191\n    /* \"#utility.yul\":8403:8408   */\n  dup5\n    /* \"#utility.yul\":8377:8409   */\n  tag_82\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8368:8410   */\n  tag_71\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8350:8411   */\n  tag_62\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8337:8411   */\n  swap1\n  pop\n    /* \"#utility.yul\":8259:8417   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8423:8570   */\ntag_84:\n    /* \"#utility.yul\":8518:8563   */\n  tag_193\n    /* \"#utility.yul\":8557:8562   */\n  dup2\n    /* \"#utility.yul\":8518:8563   */\n  tag_83\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8513:8516   */\n  dup3\n    /* \"#utility.yul\":8506:8564   */\n  mstore\n    /* \"#utility.yul\":8423:8570   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8576:8814   */\ntag_18:\n    /* \"#utility.yul\":8677:8681   */\n  0x00\n    /* \"#utility.yul\":8715:8717   */\n  0x20\n    /* \"#utility.yul\":8704:8713   */\n  dup3\n    /* \"#utility.yul\":8700:8718   */\n  add\n    /* \"#utility.yul\":8692:8718   */\n  swap1\n  pop\n    /* \"#utility.yul\":8728:8807   */\n  tag_195\n    /* \"#utility.yul\":8804:8805   */\n  0x00\n    /* \"#utility.yul\":8793:8802   */\n  dup4\n    /* \"#utility.yul\":8789:8806   */\n  add\n    /* \"#utility.yul\":8780:8786   */\n  dup5\n    /* \"#utility.yul\":8728:8807   */\n  tag_84\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":8576:8814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8820:8946   */\ntag_85:\n    /* \"#utility.yul\":8857:8864   */\n  0x00\n    /* \"#utility.yul\":8897:8939   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8890:8895   */\n  dup3\n    /* \"#utility.yul\":8886:8940   */\n  and\n    /* \"#utility.yul\":8875:8940   */\n  swap1\n  pop\n    /* \"#utility.yul\":8820:8946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8952:9048   */\ntag_86:\n    /* \"#utility.yul\":8989:8996   */\n  0x00\n    /* \"#utility.yul\":9018:9042   */\n  tag_198\n    /* \"#utility.yul\":9036:9041   */\n  dup3\n    /* \"#utility.yul\":9018:9042   */\n  tag_85\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9007:9042   */\n  swap1\n  pop\n    /* \"#utility.yul\":8952:9048   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9054:9172   */\ntag_87:\n    /* \"#utility.yul\":9141:9165   */\n  tag_200\n    /* \"#utility.yul\":9159:9164   */\n  dup2\n    /* \"#utility.yul\":9141:9165   */\n  tag_86\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9136:9139   */\n  dup3\n    /* \"#utility.yul\":9129:9166   */\n  mstore\n    /* \"#utility.yul\":9054:9172   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9178:9400   */\ntag_30:\n    /* \"#utility.yul\":9271:9275   */\n  0x00\n    /* \"#utility.yul\":9309:9311   */\n  0x20\n    /* \"#utility.yul\":9298:9307   */\n  dup3\n    /* \"#utility.yul\":9294:9312   */\n  add\n    /* \"#utility.yul\":9286:9312   */\n  swap1\n  pop\n    /* \"#utility.yul\":9322:9393   */\n  tag_202\n    /* \"#utility.yul\":9390:9391   */\n  0x00\n    /* \"#utility.yul\":9379:9388   */\n  dup4\n    /* \"#utility.yul\":9375:9392   */\n  add\n    /* \"#utility.yul\":9366:9372   */\n  dup5\n    /* \"#utility.yul\":9322:9393   */\n  tag_87\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9178:9400   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9406:9524   */\ntag_88:\n    /* \"#utility.yul\":9493:9517   */\n  tag_204\n    /* \"#utility.yul\":9511:9516   */\n  dup2\n    /* \"#utility.yul\":9493:9517   */\n  tag_62\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9488:9491   */\n  dup3\n    /* \"#utility.yul\":9481:9518   */\n  mstore\n    /* \"#utility.yul\":9406:9524   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9530:9862   */\ntag_43:\n    /* \"#utility.yul\":9651:9655   */\n  0x00\n    /* \"#utility.yul\":9689:9691   */\n  0x40\n    /* \"#utility.yul\":9678:9687   */\n  dup3\n    /* \"#utility.yul\":9674:9692   */\n  add\n    /* \"#utility.yul\":9666:9692   */\n  swap1\n  pop\n    /* \"#utility.yul\":9702:9773   */\n  tag_206\n    /* \"#utility.yul\":9770:9771   */\n  0x00\n    /* \"#utility.yul\":9759:9768   */\n  dup4\n    /* \"#utility.yul\":9755:9772   */\n  add\n    /* \"#utility.yul\":9746:9752   */\n  dup6\n    /* \"#utility.yul\":9702:9773   */\n  tag_88\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9783:9855   */\n  tag_207\n    /* \"#utility.yul\":9851:9853   */\n  0x20\n    /* \"#utility.yul\":9840:9849   */\n  dup4\n    /* \"#utility.yul\":9836:9854   */\n  add\n    /* \"#utility.yul\":9827:9833   */\n  dup5\n    /* \"#utility.yul\":9783:9855   */\n  tag_88\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":9530:9862   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9868:10059   */\ntag_47:\n    /* \"#utility.yul\":9908:9911   */\n  0x00\n    /* \"#utility.yul\":9927:9947   */\n  tag_209\n    /* \"#utility.yul\":9945:9946   */\n  dup3\n    /* \"#utility.yul\":9927:9947   */\n  tag_62\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":9922:9947   */\n  swap2\n  pop\n    /* \"#utility.yul\":9961:9981   */\n  tag_210\n    /* \"#utility.yul\":9979:9980   */\n  dup4\n    /* \"#utility.yul\":9961:9981   */\n  tag_62\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9956:9981   */\n  swap3\n  pop\n    /* \"#utility.yul\":10004:10005   */\n  dup3\n    /* \"#utility.yul\":10001:10002   */\n  dup3\n    /* \"#utility.yul\":9997:10006   */\n  add\n    /* \"#utility.yul\":9990:10006   */\n  swap1\n  pop\n    /* \"#utility.yul\":10025:10028   */\n  dup1\n    /* \"#utility.yul\":10022:10023   */\n  dup3\n    /* \"#utility.yul\":10019:10029   */\n  gt\n    /* \"#utility.yul\":10016:10052   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":10032:10050   */\n  tag_212\n  tag_58\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10016:10052   */\ntag_211:\n    /* \"#utility.yul\":9868:10059   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10065:10507   */\ntag_51:\n    /* \"#utility.yul\":10214:10218   */\n  0x00\n    /* \"#utility.yul\":10252:10254   */\n  0x60\n    /* \"#utility.yul\":10241:10250   */\n  dup3\n    /* \"#utility.yul\":10237:10255   */\n  add\n    /* \"#utility.yul\":10229:10255   */\n  swap1\n  pop\n    /* \"#utility.yul\":10265:10336   */\n  tag_214\n    /* \"#utility.yul\":10333:10334   */\n  0x00\n    /* \"#utility.yul\":10322:10331   */\n  dup4\n    /* \"#utility.yul\":10318:10335   */\n  add\n    /* \"#utility.yul\":10309:10315   */\n  dup7\n    /* \"#utility.yul\":10265:10336   */\n  tag_87\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10346:10418   */\n  tag_215\n    /* \"#utility.yul\":10414:10416   */\n  0x20\n    /* \"#utility.yul\":10403:10412   */\n  dup4\n    /* \"#utility.yul\":10399:10417   */\n  add\n    /* \"#utility.yul\":10390:10396   */\n  dup6\n    /* \"#utility.yul\":10346:10418   */\n  tag_88\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10428:10500   */\n  tag_216\n    /* \"#utility.yul\":10496:10498   */\n  0x40\n    /* \"#utility.yul\":10485:10494   */\n  dup4\n    /* \"#utility.yul\":10481:10499   */\n  add\n    /* \"#utility.yul\":10472:10478   */\n  dup5\n    /* \"#utility.yul\":10428:10500   */\n  tag_88\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":10065:10507   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10513:10735   */\ntag_55:\n    /* \"#utility.yul\":10606:10610   */\n  0x00\n    /* \"#utility.yul\":10644:10646   */\n  0x20\n    /* \"#utility.yul\":10633:10642   */\n  dup3\n    /* \"#utility.yul\":10629:10647   */\n  add\n    /* \"#utility.yul\":10621:10647   */\n  swap1\n  pop\n    /* \"#utility.yul\":10657:10728   */\n  tag_218\n    /* \"#utility.yul\":10725:10726   */\n  0x00\n    /* \"#utility.yul\":10714:10723   */\n  dup4\n    /* \"#utility.yul\":10710:10727   */\n  add\n    /* \"#utility.yul\":10701:10707   */\n  dup5\n    /* \"#utility.yul\":10657:10728   */\n  tag_88\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":10513:10735   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MNT_Mumbai.sol\":380:4289  contract MNT is ERC20Capped... */\ntag_25:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3ef4406067f3f2b83779fd8c58e51154fe5e1675c0d17583dd1aac1409fbf9d7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/MNT_Mumbai.sol\":380:4289  contract MNT is ERC20Capped... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x655ab927\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc0e3daf5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xce606ee0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xea6ecb08\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x655ab927\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6a73bf53\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x23b872dd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2bc67da0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x06ed6908\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MNT_Mumbai.sol\":1638:2393  function buyTokensFromContract() external payable... */\n    tag_2:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MNT_Mumbai.sol\":554:587  uint256 public capPerAccount=5000 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MNT_Mumbai.sol\":4022:4286  function WithdrawMintingFees() external onlyOwner... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/MNT_Mumbai.sol\":2401:2624  function updateCapPerAccount(uint newCap) public onlyOwner... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MNT_Mumbai.sol\":3704:4014  function zTokenPriceInWei() public view returns (uint256)... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MNT_Mumbai.sol\":464:492  address public contractOwner */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MNT_Mumbai.sol\":2632:3696  function OneMATICInCents() public view returns (int)... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MNT_Mumbai.sol\":1638:2393  function buyTokensFromContract() external payable... */\n    tag_23:\n        /* \"contracts/MNT_Mumbai.sol\":1902:1903  0 */\n      0x00\n        /* \"contracts/MNT_Mumbai.sol\":1889:1898  msg.value */\n      callvalue\n        /* \"contracts/MNT_Mumbai.sol\":1889:1903  msg.value != 0 */\n      sub\n        /* \"contracts/MNT_Mumbai.sol\":1881:1949  require(msg.value != 0,\"Error-MNT_MUMBAI.sol-Valueless_Transaction\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/MNT_Mumbai.sol\":2011:2031  uint256 tokensToMint */\n      0x00\n        /* \"contracts/MNT_Mumbai.sol\":2068:2086  zTokenPriceInWei() */\n      tag_107\n        /* \"contracts/MNT_Mumbai.sol\":2068:2084  zTokenPriceInWei */\n      tag_85\n        /* \"contracts/MNT_Mumbai.sol\":2068:2086  zTokenPriceInWei() */\n      jump\t// in\n    tag_107:\n        /* \"contracts/MNT_Mumbai.sol\":2055:2065  decimals() */\n      tag_108\n        /* \"contracts/MNT_Mumbai.sol\":2055:2063  decimals */\n      tag_53\n        /* \"contracts/MNT_Mumbai.sol\":2055:2065  decimals() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/MNT_Mumbai.sol\":2047:2066  uint256(decimals()) */\n      0xff\n      and\n        /* \"contracts/MNT_Mumbai.sol\":2043:2045  10 */\n      0x0a\n        /* \"contracts/MNT_Mumbai.sol\":2043:2066  10**uint256(decimals()) */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/MNT_Mumbai.sol\":2032:2041  msg.value */\n      callvalue\n        /* \"contracts/MNT_Mumbai.sol\":2032:2067  msg.value*(10**uint256(decimals())) */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"contracts/MNT_Mumbai.sol\":2032:2086  msg.value*(10**uint256(decimals()))/zTokenPriceInWei() */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"contracts/MNT_Mumbai.sol\":2011:2086  uint256 tokensToMint=msg.value*(10**uint256(decimals()))/zTokenPriceInWei() */\n      swap1\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":2177:2187  decimals() */\n      tag_115\n        /* \"contracts/MNT_Mumbai.sol\":2177:2185  decimals */\n      tag_53\n        /* \"contracts/MNT_Mumbai.sol\":2177:2187  decimals() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/MNT_Mumbai.sol\":2169:2188  uint256(decimals()) */\n      0xff\n      and\n        /* \"contracts/MNT_Mumbai.sol\":2165:2167  10 */\n      0x0a\n        /* \"contracts/MNT_Mumbai.sol\":2165:2188  10**uint256(decimals()) */\n      tag_116\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_116:\n        /* \"contracts/MNT_Mumbai.sol\":2148:2161  capPerAccount */\n      sload(0x08)\n        /* \"contracts/MNT_Mumbai.sol\":2148:2189  capPerAccount * (10**uint256(decimals())) */\n      tag_117\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_117:\n        /* \"contracts/MNT_Mumbai.sol\":2132:2144  tokensToMint */\n      dup2\n        /* \"contracts/MNT_Mumbai.sol\":2108:2129  balanceOf(msg.sender) */\n      tag_118\n        /* \"contracts/MNT_Mumbai.sol\":2118:2128  msg.sender */\n      caller\n        /* \"contracts/MNT_Mumbai.sol\":2108:2117  balanceOf */\n      tag_72\n        /* \"contracts/MNT_Mumbai.sol\":2108:2129  balanceOf(msg.sender) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/MNT_Mumbai.sol\":2108:2144  balanceOf(msg.sender) + tokensToMint */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/MNT_Mumbai.sol\":2108:2189  balanceOf(msg.sender) + tokensToMint <= capPerAccount * (10**uint256(decimals())) */\n      gt\n      iszero\n        /* \"contracts/MNT_Mumbai.sol\":2100:2234  require(balanceOf(msg.sender) + tokensToMint <= capPerAccount * (10**uint256(decimals())), \"Error-MNT_MUMBAI.sol-Exceeds_Max_Balance\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/MNT_Mumbai.sol\":2247:2277  _mint(msg.sender,tokensToMint) */\n      tag_124\n        /* \"contracts/MNT_Mumbai.sol\":2253:2263  msg.sender */\n      caller\n        /* \"contracts/MNT_Mumbai.sol\":2264:2276  tokensToMint */\n      dup3\n        /* \"contracts/MNT_Mumbai.sol\":2247:2252  _mint */\n      tag_125\n        /* \"contracts/MNT_Mumbai.sol\":2247:2277  _mint(msg.sender,tokensToMint) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/MNT_Mumbai.sol\":2309:2319  msg.sender */\n      caller\n        /* \"contracts/MNT_Mumbai.sol\":2293:2385  TokensPurchased(msg.sender, tokensToMint, msg.value, block.timestamp, balanceOf(msg.sender)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x34987d73948b60cfba9beeb35760c345a3be430f3540605113911ead78a0830e\n        /* \"contracts/MNT_Mumbai.sol\":2321:2333  tokensToMint */\n      dup3\n        /* \"contracts/MNT_Mumbai.sol\":2335:2344  msg.value */\n      callvalue\n        /* \"contracts/MNT_Mumbai.sol\":2346:2361  block.timestamp */\n      timestamp\n        /* \"contracts/MNT_Mumbai.sol\":2363:2384  balanceOf(msg.sender) */\n      tag_126\n        /* \"contracts/MNT_Mumbai.sol\":2373:2383  msg.sender */\n      caller\n        /* \"contracts/MNT_Mumbai.sol\":2363:2372  balanceOf */\n      tag_72\n        /* \"contracts/MNT_Mumbai.sol\":2363:2384  balanceOf(msg.sender) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/MNT_Mumbai.sol\":2293:2385  TokensPurchased(msg.sender, tokensToMint, msg.value, block.timestamp, balanceOf(msg.sender)) */\n      mload(0x40)\n      tag_127\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MNT_Mumbai.sol\":1693:2393  {... */\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":1638:2393  function buyTokensFromContract() external payable... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_131\n      jump\t// in\n    tag_132:\n      dup1\n      iszero\n      tag_133\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_134\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_133)\n    tag_134:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_135:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_135\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MNT_Mumbai.sol\":554:587  uint256 public capPerAccount=5000 */\n    tag_49:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n      immutable(\"0x3ef4406067f3f2b83779fd8c58e51154fe5e1675c0d17583dd1aac1409fbf9d7\")\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MNT_Mumbai.sol\":4022:4286  function WithdrawMintingFees() external onlyOwner... */\n    tag_62:\n        /* \"contracts/MNT_Mumbai.sol\":1564:1577  contractOwner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MNT_Mumbai.sol\":1550:1577  msg.sender == contractOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MNT_Mumbai.sol\":1550:1560  msg.sender */\n      caller\n        /* \"contracts/MNT_Mumbai.sol\":1550:1577  msg.sender == contractOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MNT_Mumbai.sol\":1542:1610  require(msg.sender == contractOwner, \"Error-MNT_MUMBAI.sol-Ownable\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/MNT_Mumbai.sol\":4088:4100  uint256 fees */\n      0x00\n        /* \"contracts/MNT_Mumbai.sol\":4103:4124  address(this).balance */\n      selfbalance\n        /* \"contracts/MNT_Mumbai.sol\":4088:4124  uint256 fees = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":4190:4203  contractOwner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MNT_Mumbai.sol\":4182:4213  payable(contractOwner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MNT_Mumbai.sol\":4182:4219  payable(contractOwner).transfer(fees) */\n      0x08fc\n        /* \"contracts/MNT_Mumbai.sol\":4214:4218  fees */\n      dup3\n        /* \"contracts/MNT_Mumbai.sol\":4182:4219  payable(contractOwner).transfer(fees) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":4235:4278  MintingFeesWithdrawn(fees, block.timestamp) */\n      0xf39edbeb800007582021719f876f29eb42aa5171248e3df79a3bf120a4e91416\n        /* \"contracts/MNT_Mumbai.sol\":4256:4260  fees */\n      dup2\n        /* \"contracts/MNT_Mumbai.sol\":4262:4277  block.timestamp */\n      timestamp\n        /* \"contracts/MNT_Mumbai.sol\":4235:4278  MintingFeesWithdrawn(fees, block.timestamp) */\n      mload(0x40)\n      tag_157\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MNT_Mumbai.sol\":4077:4286  {... */\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":4022:4286  function WithdrawMintingFees() external onlyOwner... */\n      jump\t// out\n        /* \"contracts/MNT_Mumbai.sol\":2401:2624  function updateCapPerAccount(uint newCap) public onlyOwner... */\n    tag_67:\n        /* \"contracts/MNT_Mumbai.sol\":1564:1577  contractOwner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MNT_Mumbai.sol\":1550:1577  msg.sender == contractOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MNT_Mumbai.sol\":1550:1560  msg.sender */\n      caller\n        /* \"contracts/MNT_Mumbai.sol\":1550:1577  msg.sender == contractOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MNT_Mumbai.sol\":1542:1610  require(msg.sender == contractOwner, \"Error-MNT_MUMBAI.sol-Ownable\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_153\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/MNT_Mumbai.sol\":2476:2495  uint256 previousCap */\n      0x00\n        /* \"contracts/MNT_Mumbai.sol\":2498:2511  capPerAccount */\n      sload(0x08)\n        /* \"contracts/MNT_Mumbai.sol\":2476:2511  uint256 previousCap = capPerAccount */\n      swap1\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":2536:2542  newCap */\n      dup2\n        /* \"contracts/MNT_Mumbai.sol\":2522:2535  capPerAccount */\n      0x08\n        /* \"contracts/MNT_Mumbai.sol\":2522:2542  capPerAccount=newCap */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":2558:2616  CapPerAccountUpdated(previousCap, newCap, block.timestamp) */\n      0x4c2d858a88357e20c1b14c12b9674497934a744bb8118d4d3f2dce8ded4989be\n        /* \"contracts/MNT_Mumbai.sol\":2579:2590  previousCap */\n      dup2\n        /* \"contracts/MNT_Mumbai.sol\":2592:2598  newCap */\n      dup4\n        /* \"contracts/MNT_Mumbai.sol\":2600:2615  block.timestamp */\n      timestamp\n        /* \"contracts/MNT_Mumbai.sol\":2558:2616  CapPerAccountUpdated(previousCap, newCap, block.timestamp) */\n      mload(0x40)\n      tag_163\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MNT_Mumbai.sol\":2465:2624  {... */\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":2401:2624  function updateCapPerAccount(uint newCap) public onlyOwner... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_131\n      jump\t// in\n    tag_167:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_131\n      jump\t// in\n    tag_168:\n      dup1\n      iszero\n      tag_169\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_170\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_169)\n    tag_170:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_171:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_171\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MNT_Mumbai.sol\":3704:4014  function zTokenPriceInWei() public view returns (uint256)... */\n    tag_85:\n        /* \"contracts/MNT_Mumbai.sol\":3753:3760  uint256 */\n      0x00\n        /* \"contracts/MNT_Mumbai.sol\":3988:4005  OneMATICInCents() */\n      tag_176\n        /* \"contracts/MNT_Mumbai.sol\":3988:4003  OneMATICInCents */\n      tag_100\n        /* \"contracts/MNT_Mumbai.sol\":3988:4005  OneMATICInCents() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/MNT_Mumbai.sol\":3968:3978  2*(10**18) */\n      0x1bc16d674ec80000\n        /* \"contracts/MNT_Mumbai.sol\":3960:4006  uint256(2*(10**18))/uint256(OneMATICInCents()) */\n      tag_177\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_177:\n        /* \"contracts/MNT_Mumbai.sol\":3953:4006  return uint256(2*(10**18))/uint256(OneMATICInCents()) */\n      swap1\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":3704:4014  function zTokenPriceInWei() public view returns (uint256)... */\n      swap1\n      jump\t// out\n        /* \"contracts/MNT_Mumbai.sol\":464:492  address public contractOwner */\n    tag_89:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MNT_Mumbai.sol\":2632:3696  function OneMATICInCents() public view returns (int)... */\n    tag_100:\n        /* \"contracts/MNT_Mumbai.sol\":2680:2683  int */\n      0x00\n        /* \"contracts/MNT_Mumbai.sol\":2703:2713  int answer */\n      dup1\n        /* \"contracts/MNT_Mumbai.sol\":2720:2728  dataFeed */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MNT_Mumbai.sol\":2720:2744  dataFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/MNT_Mumbai.sol\":2720:2746  dataFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/MNT_Mumbai.sol\":2701:2746  (,int answer,,,) = dataFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":3499:3506  1000000 */\n      0x0f4240\n        /* \"contracts/MNT_Mumbai.sol\":3492:3498  answer */\n      dup2\n        /* \"contracts/MNT_Mumbai.sol\":3492:3506  answer/1000000 */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/MNT_Mumbai.sol\":3485:3506  return answer/1000000 */\n      swap2\n      pop\n      pop\n        /* \"contracts/MNT_Mumbai.sol\":2632:3696  function OneMATICInCents() public view returns (int)... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1167:1171  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1173:1175  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1177:1182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1166  super._update */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1214:1215  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1202  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1249  uint256 maxSupply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1255  cap */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1257  uint256 maxSupply = cap() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1285  uint256 supply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1299  totalSupply */\n      tag_38\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1301  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1328:1337  maxSupply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1325  supply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1337  supply > maxSupply */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1381:1387  supply */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1389:1398  maxSupply */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1364:1399  ERC20ExceededCap(supply, maxSupply) */\n      mload(0x40)\n      0x9e79f85400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1218:1424  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_222\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_225\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_225:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_226)\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_230)\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_232:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_233:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_234:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_277:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_277)\n    tag_279:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_235:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_236:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_282\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_232\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":818:889   */\n      tag_283\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_233\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_284\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_234\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":988:1017   */\n      tag_285\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_235\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_28:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_287\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_236\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_238:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_240:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_241:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_293\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_240\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_242:\n        /* \"#utility.yul\":1983:2007   */\n      tag_295\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_241\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_296:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_243:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_298\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_242\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_244:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_245:\n        /* \"#utility.yul\":2339:2363   */\n      tag_301\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_244\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_302:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_246:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_304\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_245\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_32:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_307\n      tag_238\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2632:2751   */\n    tag_306:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_308\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_243\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_309\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_246\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_247:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_248:\n        /* \"#utility.yul\":3196:3217   */\n      tag_312\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_247\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_35:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_314\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_248\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_249:\n        /* \"#utility.yul\":3533:3557   */\n      tag_316\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_244\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_40:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_318\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_249\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_44:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_321\n      tag_238\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3908:4027   */\n    tag_320:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_322\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_243\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_323\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_243\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_324\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_246\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_250:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_251:\n        /* \"#utility.yul\":4598:4620   */\n      tag_327\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_250\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_55:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_329\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_251\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_66:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_332\n      tag_238\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4929:5048   */\n    tag_331:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_333\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_246\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_71:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_336\n      tag_238\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5264:5383   */\n    tag_335:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_337\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_243\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_252:\n        /* \"#utility.yul\":5610:5634   */\n      tag_339\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_241\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_91:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_341\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_252\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_95:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_344\n      tag_238\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5968:6087   */\n    tag_343:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_345\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_243\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_346\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_243\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6431   */\n    tag_253:\n        /* \"#utility.yul\":6391:6398   */\n      0x00\n        /* \"#utility.yul\":6420:6425   */\n      dup2\n        /* \"#utility.yul\":6409:6425   */\n      swap1\n      pop\n        /* \"#utility.yul\":6355:6431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6437:6552   */\n    tag_254:\n        /* \"#utility.yul\":6522:6545   */\n      tag_349\n        /* \"#utility.yul\":6539:6544   */\n      dup2\n        /* \"#utility.yul\":6522:6545   */\n      tag_253\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":6517:6520   */\n      dup3\n        /* \"#utility.yul\":6510:6546   */\n      mstore\n        /* \"#utility.yul\":6437:6552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6558:6776   */\n    tag_102:\n        /* \"#utility.yul\":6649:6653   */\n      0x00\n        /* \"#utility.yul\":6687:6689   */\n      0x20\n        /* \"#utility.yul\":6676:6685   */\n      dup3\n        /* \"#utility.yul\":6672:6690   */\n      add\n        /* \"#utility.yul\":6664:6690   */\n      swap1\n      pop\n        /* \"#utility.yul\":6700:6769   */\n      tag_351\n        /* \"#utility.yul\":6766:6767   */\n      0x00\n        /* \"#utility.yul\":6755:6764   */\n      dup4\n        /* \"#utility.yul\":6751:6768   */\n      add\n        /* \"#utility.yul\":6742:6748   */\n      dup5\n        /* \"#utility.yul\":6700:6769   */\n      tag_254\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":6558:6776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6782:7011   */\n    tag_255:\n        /* \"#utility.yul\":6922:6956   */\n      0x4572726f722d4d4e545f4d554d4241492e736f6c2d56616c75656c6573735f54\n        /* \"#utility.yul\":6918:6919   */\n      0x00\n        /* \"#utility.yul\":6910:6916   */\n      dup3\n        /* \"#utility.yul\":6906:6920   */\n      add\n        /* \"#utility.yul\":6899:6957   */\n      mstore\n        /* \"#utility.yul\":6991:7003   */\n      0x72616e73616374696f6e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6986:6988   */\n      0x20\n        /* \"#utility.yul\":6978:6984   */\n      dup3\n        /* \"#utility.yul\":6974:6989   */\n      add\n        /* \"#utility.yul\":6967:7004   */\n      mstore\n        /* \"#utility.yul\":6782:7011   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7017:7383   */\n    tag_256:\n        /* \"#utility.yul\":7159:7162   */\n      0x00\n        /* \"#utility.yul\":7180:7247   */\n      tag_354\n        /* \"#utility.yul\":7244:7246   */\n      0x2a\n        /* \"#utility.yul\":7239:7242   */\n      dup4\n        /* \"#utility.yul\":7180:7247   */\n      tag_233\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7173:7247   */\n      swap2\n      pop\n        /* \"#utility.yul\":7256:7349   */\n      tag_355\n        /* \"#utility.yul\":7345:7348   */\n      dup3\n        /* \"#utility.yul\":7256:7349   */\n      tag_255\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7374:7376   */\n      0x40\n        /* \"#utility.yul\":7369:7372   */\n      dup3\n        /* \"#utility.yul\":7365:7377   */\n      add\n        /* \"#utility.yul\":7358:7377   */\n      swap1\n      pop\n        /* \"#utility.yul\":7017:7383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7389:7808   */\n    tag_106:\n        /* \"#utility.yul\":7555:7559   */\n      0x00\n        /* \"#utility.yul\":7593:7595   */\n      0x20\n        /* \"#utility.yul\":7582:7591   */\n      dup3\n        /* \"#utility.yul\":7578:7596   */\n      add\n        /* \"#utility.yul\":7570:7596   */\n      swap1\n      pop\n        /* \"#utility.yul\":7642:7651   */\n      dup2\n        /* \"#utility.yul\":7636:7640   */\n      dup2\n        /* \"#utility.yul\":7632:7652   */\n      sub\n        /* \"#utility.yul\":7628:7629   */\n      0x00\n        /* \"#utility.yul\":7617:7626   */\n      dup4\n        /* \"#utility.yul\":7613:7630   */\n      add\n        /* \"#utility.yul\":7606:7653   */\n      mstore\n        /* \"#utility.yul\":7670:7801   */\n      tag_357\n        /* \"#utility.yul\":7796:7800   */\n      dup2\n        /* \"#utility.yul\":7670:7801   */\n      tag_256\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7662:7801   */\n      swap1\n      pop\n        /* \"#utility.yul\":7389:7808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7814:7994   */\n    tag_257:\n        /* \"#utility.yul\":7862:7939   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7859:7860   */\n      0x00\n        /* \"#utility.yul\":7852:7940   */\n      mstore\n        /* \"#utility.yul\":7959:7963   */\n      0x11\n        /* \"#utility.yul\":7956:7957   */\n      0x04\n        /* \"#utility.yul\":7949:7964   */\n      mstore\n        /* \"#utility.yul\":7983:7987   */\n      0x24\n        /* \"#utility.yul\":7980:7981   */\n      0x00\n        /* \"#utility.yul\":7973:7988   */\n      revert\n        /* \"#utility.yul\":8000:8102   */\n    tag_258:\n        /* \"#utility.yul\":8042:8050   */\n      0x00\n        /* \"#utility.yul\":8089:8094   */\n      dup2\n        /* \"#utility.yul\":8086:8087   */\n      0x01\n        /* \"#utility.yul\":8082:8095   */\n      shr\n        /* \"#utility.yul\":8061:8095   */\n      swap1\n      pop\n        /* \"#utility.yul\":8000:8102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8108:8956   */\n    tag_259:\n        /* \"#utility.yul\":8169:8174   */\n      0x00\n        /* \"#utility.yul\":8176:8180   */\n      dup1\n        /* \"#utility.yul\":8200:8206   */\n      dup3\n        /* \"#utility.yul\":8191:8206   */\n      swap2\n      pop\n        /* \"#utility.yul\":8224:8229   */\n      dup4\n        /* \"#utility.yul\":8215:8229   */\n      swap1\n      pop\n        /* \"#utility.yul\":8238:8950   */\n    tag_361:\n        /* \"#utility.yul\":8259:8260   */\n      0x01\n        /* \"#utility.yul\":8249:8257   */\n      dup6\n        /* \"#utility.yul\":8246:8261   */\n      gt\n        /* \"#utility.yul\":8238:8950   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":8354:8358   */\n      dup1\n        /* \"#utility.yul\":8349:8352   */\n      dup7\n        /* \"#utility.yul\":8345:8359   */\n      div\n        /* \"#utility.yul\":8339:8343   */\n      dup2\n        /* \"#utility.yul\":8336:8360   */\n      gt\n        /* \"#utility.yul\":8333:8383   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":8363:8381   */\n      tag_365\n      tag_257\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":8333:8383   */\n    tag_364:\n        /* \"#utility.yul\":8413:8414   */\n      0x01\n        /* \"#utility.yul\":8403:8411   */\n      dup6\n        /* \"#utility.yul\":8399:8415   */\n      and\n        /* \"#utility.yul\":8396:8847   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":8828:8832   */\n      dup1\n        /* \"#utility.yul\":8821:8826   */\n      dup3\n        /* \"#utility.yul\":8817:8833   */\n      mul\n        /* \"#utility.yul\":8808:8833   */\n      swap2\n      pop\n        /* \"#utility.yul\":8396:8847   */\n    tag_366:\n        /* \"#utility.yul\":8878:8882   */\n      dup1\n        /* \"#utility.yul\":8872:8876   */\n      dup2\n        /* \"#utility.yul\":8868:8883   */\n      mul\n        /* \"#utility.yul\":8860:8883   */\n      swap1\n      pop\n        /* \"#utility.yul\":8908:8940   */\n      tag_367\n        /* \"#utility.yul\":8931:8939   */\n      dup6\n        /* \"#utility.yul\":8908:8940   */\n      tag_258\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8896:8940   */\n      swap5\n      pop\n        /* \"#utility.yul\":8238:8950   */\n      jump(tag_361)\n    tag_363:\n        /* \"#utility.yul\":8108:8956   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8962:10035   */\n    tag_260:\n        /* \"#utility.yul\":9016:9021   */\n      0x00\n        /* \"#utility.yul\":9207:9215   */\n      dup3\n        /* \"#utility.yul\":9197:9237   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":9228:9229   */\n      0x01\n        /* \"#utility.yul\":9219:9229   */\n      swap1\n      pop\n        /* \"#utility.yul\":9230:9235   */\n      jump(tag_368)\n        /* \"#utility.yul\":9197:9237   */\n    tag_369:\n        /* \"#utility.yul\":9256:9260   */\n      dup2\n        /* \"#utility.yul\":9246:9282   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":9273:9274   */\n      0x00\n        /* \"#utility.yul\":9264:9274   */\n      swap1\n      pop\n        /* \"#utility.yul\":9275:9280   */\n      jump(tag_368)\n        /* \"#utility.yul\":9246:9282   */\n    tag_370:\n        /* \"#utility.yul\":9342:9346   */\n      dup2\n        /* \"#utility.yul\":9390:9391   */\n      0x01\n        /* \"#utility.yul\":9385:9412   */\n      dup2\n      eq\n      tag_372\n      jumpi\n        /* \"#utility.yul\":9426:9427   */\n      0x02\n        /* \"#utility.yul\":9421:9612   */\n      dup2\n      eq\n      tag_373\n      jumpi\n        /* \"#utility.yul\":9335:9612   */\n      jump(tag_371)\n        /* \"#utility.yul\":9385:9412   */\n    tag_372:\n        /* \"#utility.yul\":9403:9404   */\n      0x01\n        /* \"#utility.yul\":9394:9404   */\n      swap2\n      pop\n        /* \"#utility.yul\":9405:9410   */\n      pop\n      jump(tag_368)\n        /* \"#utility.yul\":9421:9612   */\n    tag_373:\n        /* \"#utility.yul\":9466:9469   */\n      0xff\n        /* \"#utility.yul\":9456:9464   */\n      dup5\n        /* \"#utility.yul\":9453:9470   */\n      gt\n        /* \"#utility.yul\":9450:9493   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":9473:9491   */\n      tag_375\n      tag_257\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9450:9493   */\n    tag_374:\n        /* \"#utility.yul\":9522:9530   */\n      dup4\n        /* \"#utility.yul\":9519:9520   */\n      0x02\n        /* \"#utility.yul\":9515:9531   */\n      exp\n        /* \"#utility.yul\":9506:9531   */\n      swap2\n      pop\n        /* \"#utility.yul\":9557:9560   */\n      dup5\n        /* \"#utility.yul\":9550:9555   */\n      dup3\n        /* \"#utility.yul\":9547:9561   */\n      gt\n        /* \"#utility.yul\":9544:9584   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":9564:9582   */\n      tag_377\n      tag_257\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9544:9584   */\n    tag_376:\n        /* \"#utility.yul\":9597:9602   */\n      pop\n      jump(tag_368)\n        /* \"#utility.yul\":9335:9612   */\n    tag_371:\n      pop\n        /* \"#utility.yul\":9721:9723   */\n      0x20\n        /* \"#utility.yul\":9711:9719   */\n      dup4\n        /* \"#utility.yul\":9708:9724   */\n      lt\n        /* \"#utility.yul\":9702:9705   */\n      0x0133\n        /* \"#utility.yul\":9696:9700   */\n      dup4\n        /* \"#utility.yul\":9693:9706   */\n      lt\n        /* \"#utility.yul\":9689:9725   */\n      and\n        /* \"#utility.yul\":9671:9673   */\n      0x4e\n        /* \"#utility.yul\":9661:9669   */\n      dup5\n        /* \"#utility.yul\":9658:9674   */\n      lt\n        /* \"#utility.yul\":9653:9655   */\n      0x0b\n        /* \"#utility.yul\":9647:9651   */\n      dup5\n        /* \"#utility.yul\":9644:9656   */\n      lt\n        /* \"#utility.yul\":9640:9675   */\n      and\n        /* \"#utility.yul\":9624:9735   */\n      or\n        /* \"#utility.yul\":9621:9867   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":9777:9785   */\n      dup3\n        /* \"#utility.yul\":9771:9775   */\n      dup3\n        /* \"#utility.yul\":9767:9786   */\n      exp\n        /* \"#utility.yul\":9758:9786   */\n      swap1\n      pop\n        /* \"#utility.yul\":9812:9815   */\n      dup4\n        /* \"#utility.yul\":9805:9810   */\n      dup2\n        /* \"#utility.yul\":9802:9816   */\n      gt\n        /* \"#utility.yul\":9799:9839   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":9819:9837   */\n      tag_380\n      tag_257\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9799:9839   */\n    tag_379:\n        /* \"#utility.yul\":9852:9857   */\n      jump(tag_368)\n        /* \"#utility.yul\":9621:9867   */\n    tag_378:\n        /* \"#utility.yul\":9892:9934   */\n      tag_381\n        /* \"#utility.yul\":9930:9933   */\n      dup5\n        /* \"#utility.yul\":9920:9928   */\n      dup5\n        /* \"#utility.yul\":9914:9918   */\n      dup5\n        /* \"#utility.yul\":9911:9912   */\n      0x01\n        /* \"#utility.yul\":9892:9934   */\n      tag_259\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9877:9934   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":9966:9970   */\n      dup2\n        /* \"#utility.yul\":9961:9964   */\n      dup5\n        /* \"#utility.yul\":9957:9971   */\n      div\n        /* \"#utility.yul\":9950:9955   */\n      dup2\n        /* \"#utility.yul\":9947:9972   */\n      gt\n        /* \"#utility.yul\":9944:9995   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":9975:9993   */\n      tag_383\n      tag_257\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9944:9995   */\n    tag_382:\n        /* \"#utility.yul\":10024:10028   */\n      dup2\n        /* \"#utility.yul\":10017:10022   */\n      dup2\n        /* \"#utility.yul\":10013:10029   */\n      mul\n        /* \"#utility.yul\":10004:10029   */\n      swap1\n      pop\n        /* \"#utility.yul\":8962:10035   */\n    tag_368:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10041:10326   */\n    tag_110:\n        /* \"#utility.yul\":10101:10106   */\n      0x00\n        /* \"#utility.yul\":10125:10148   */\n      tag_385\n        /* \"#utility.yul\":10143:10147   */\n      dup3\n        /* \"#utility.yul\":10125:10148   */\n      tag_244\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10117:10148   */\n      swap2\n      pop\n        /* \"#utility.yul\":10169:10196   */\n      tag_386\n        /* \"#utility.yul\":10187:10195   */\n      dup4\n        /* \"#utility.yul\":10169:10196   */\n      tag_244\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":10157:10196   */\n      swap3\n      pop\n        /* \"#utility.yul\":10215:10319   */\n      tag_387\n        /* \"#utility.yul\":10252:10318   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10242:10250   */\n      dup5\n        /* \"#utility.yul\":10236:10240   */\n      dup5\n        /* \"#utility.yul\":10215:10319   */\n      tag_260\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":10206:10319   */\n      swap1\n      pop\n        /* \"#utility.yul\":10041:10326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10332:10742   */\n    tag_112:\n        /* \"#utility.yul\":10372:10379   */\n      0x00\n        /* \"#utility.yul\":10395:10415   */\n      tag_389\n        /* \"#utility.yul\":10413:10414   */\n      dup3\n        /* \"#utility.yul\":10395:10415   */\n      tag_244\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":10390:10415   */\n      swap2\n      pop\n        /* \"#utility.yul\":10429:10449   */\n      tag_390\n        /* \"#utility.yul\":10447:10448   */\n      dup4\n        /* \"#utility.yul\":10429:10449   */\n      tag_244\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":10424:10449   */\n      swap3\n      pop\n        /* \"#utility.yul\":10484:10485   */\n      dup3\n        /* \"#utility.yul\":10481:10482   */\n      dup3\n        /* \"#utility.yul\":10477:10486   */\n      mul\n        /* \"#utility.yul\":10506:10536   */\n      tag_391\n        /* \"#utility.yul\":10524:10535   */\n      dup2\n        /* \"#utility.yul\":10506:10536   */\n      tag_244\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":10495:10536   */\n      swap2\n      pop\n        /* \"#utility.yul\":10685:10686   */\n      dup3\n        /* \"#utility.yul\":10676:10683   */\n      dup3\n        /* \"#utility.yul\":10672:10687   */\n      div\n        /* \"#utility.yul\":10669:10670   */\n      dup5\n        /* \"#utility.yul\":10666:10688   */\n      eq\n        /* \"#utility.yul\":10646:10647   */\n      dup4\n        /* \"#utility.yul\":10639:10648   */\n      iszero\n        /* \"#utility.yul\":10619:10702   */\n      or\n        /* \"#utility.yul\":10596:10735   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":10715:10733   */\n      tag_393\n      tag_257\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":10596:10735   */\n    tag_392:\n        /* \"#utility.yul\":10380:10742   */\n      pop\n        /* \"#utility.yul\":10332:10742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10748:10928   */\n    tag_261:\n        /* \"#utility.yul\":10796:10873   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10793:10794   */\n      0x00\n        /* \"#utility.yul\":10786:10874   */\n      mstore\n        /* \"#utility.yul\":10893:10897   */\n      0x12\n        /* \"#utility.yul\":10890:10891   */\n      0x04\n        /* \"#utility.yul\":10883:10898   */\n      mstore\n        /* \"#utility.yul\":10917:10921   */\n      0x24\n        /* \"#utility.yul\":10914:10915   */\n      0x00\n        /* \"#utility.yul\":10907:10922   */\n      revert\n        /* \"#utility.yul\":10934:11119   */\n    tag_114:\n        /* \"#utility.yul\":10974:10975   */\n      0x00\n        /* \"#utility.yul\":10991:11011   */\n      tag_396\n        /* \"#utility.yul\":11009:11010   */\n      dup3\n        /* \"#utility.yul\":10991:11011   */\n      tag_244\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10986:11011   */\n      swap2\n      pop\n        /* \"#utility.yul\":11025:11045   */\n      tag_397\n        /* \"#utility.yul\":11043:11044   */\n      dup4\n        /* \"#utility.yul\":11025:11045   */\n      tag_244\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11020:11045   */\n      swap3\n      pop\n        /* \"#utility.yul\":11064:11065   */\n      dup3\n        /* \"#utility.yul\":11054:11089   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":11069:11087   */\n      tag_399\n      tag_261\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":11054:11089   */\n    tag_398:\n        /* \"#utility.yul\":11111:11112   */\n      dup3\n        /* \"#utility.yul\":11108:11109   */\n      dup3\n        /* \"#utility.yul\":11104:11113   */\n      div\n        /* \"#utility.yul\":11099:11113   */\n      swap1\n      pop\n        /* \"#utility.yul\":10934:11119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11125:11316   */\n    tag_120:\n        /* \"#utility.yul\":11165:11168   */\n      0x00\n        /* \"#utility.yul\":11184:11204   */\n      tag_401\n        /* \"#utility.yul\":11202:11203   */\n      dup3\n        /* \"#utility.yul\":11184:11204   */\n      tag_244\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":11179:11204   */\n      swap2\n      pop\n        /* \"#utility.yul\":11218:11238   */\n      tag_402\n        /* \"#utility.yul\":11236:11237   */\n      dup4\n        /* \"#utility.yul\":11218:11238   */\n      tag_244\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":11213:11238   */\n      swap3\n      pop\n        /* \"#utility.yul\":11261:11262   */\n      dup3\n        /* \"#utility.yul\":11258:11259   */\n      dup3\n        /* \"#utility.yul\":11254:11263   */\n      add\n        /* \"#utility.yul\":11247:11263   */\n      swap1\n      pop\n        /* \"#utility.yul\":11282:11285   */\n      dup1\n        /* \"#utility.yul\":11279:11280   */\n      dup3\n        /* \"#utility.yul\":11276:11286   */\n      gt\n        /* \"#utility.yul\":11273:11309   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":11289:11307   */\n      tag_404\n      tag_257\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":11273:11309   */\n    tag_403:\n        /* \"#utility.yul\":11125:11316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11322:11549   */\n    tag_262:\n        /* \"#utility.yul\":11462:11496   */\n      0x4572726f722d4d4e545f4d554d4241492e736f6c2d457863656564735f4d6178\n        /* \"#utility.yul\":11458:11459   */\n      0x00\n        /* \"#utility.yul\":11450:11456   */\n      dup3\n        /* \"#utility.yul\":11446:11460   */\n      add\n        /* \"#utility.yul\":11439:11497   */\n      mstore\n        /* \"#utility.yul\":11531:11541   */\n      0x5f42616c616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11526:11528   */\n      0x20\n        /* \"#utility.yul\":11518:11524   */\n      dup3\n        /* \"#utility.yul\":11514:11529   */\n      add\n        /* \"#utility.yul\":11507:11542   */\n      mstore\n        /* \"#utility.yul\":11322:11549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11555:11921   */\n    tag_263:\n        /* \"#utility.yul\":11697:11700   */\n      0x00\n        /* \"#utility.yul\":11718:11785   */\n      tag_407\n        /* \"#utility.yul\":11782:11784   */\n      0x28\n        /* \"#utility.yul\":11777:11780   */\n      dup4\n        /* \"#utility.yul\":11718:11785   */\n      tag_233\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11711:11785   */\n      swap2\n      pop\n        /* \"#utility.yul\":11794:11887   */\n      tag_408\n        /* \"#utility.yul\":11883:11886   */\n      dup3\n        /* \"#utility.yul\":11794:11887   */\n      tag_262\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11912:11914   */\n      0x40\n        /* \"#utility.yul\":11907:11910   */\n      dup3\n        /* \"#utility.yul\":11903:11915   */\n      add\n        /* \"#utility.yul\":11896:11915   */\n      swap1\n      pop\n        /* \"#utility.yul\":11555:11921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11927:12346   */\n    tag_123:\n        /* \"#utility.yul\":12093:12097   */\n      0x00\n        /* \"#utility.yul\":12131:12133   */\n      0x20\n        /* \"#utility.yul\":12120:12129   */\n      dup3\n        /* \"#utility.yul\":12116:12134   */\n      add\n        /* \"#utility.yul\":12108:12134   */\n      swap1\n      pop\n        /* \"#utility.yul\":12180:12189   */\n      dup2\n        /* \"#utility.yul\":12174:12178   */\n      dup2\n        /* \"#utility.yul\":12170:12190   */\n      sub\n        /* \"#utility.yul\":12166:12167   */\n      0x00\n        /* \"#utility.yul\":12155:12164   */\n      dup4\n        /* \"#utility.yul\":12151:12168   */\n      add\n        /* \"#utility.yul\":12144:12191   */\n      mstore\n        /* \"#utility.yul\":12208:12339   */\n      tag_410\n        /* \"#utility.yul\":12334:12338   */\n      dup2\n        /* \"#utility.yul\":12208:12339   */\n      tag_263\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":12200:12339   */\n      swap1\n      pop\n        /* \"#utility.yul\":11927:12346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12352:12905   */\n    tag_128:\n        /* \"#utility.yul\":12529:12533   */\n      0x00\n        /* \"#utility.yul\":12567:12570   */\n      0x80\n        /* \"#utility.yul\":12556:12565   */\n      dup3\n        /* \"#utility.yul\":12552:12571   */\n      add\n        /* \"#utility.yul\":12544:12571   */\n      swap1\n      pop\n        /* \"#utility.yul\":12581:12652   */\n      tag_412\n        /* \"#utility.yul\":12649:12650   */\n      0x00\n        /* \"#utility.yul\":12638:12647   */\n      dup4\n        /* \"#utility.yul\":12634:12651   */\n      add\n        /* \"#utility.yul\":12625:12631   */\n      dup8\n        /* \"#utility.yul\":12581:12652   */\n      tag_249\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12662:12734   */\n      tag_413\n        /* \"#utility.yul\":12730:12732   */\n      0x20\n        /* \"#utility.yul\":12719:12728   */\n      dup4\n        /* \"#utility.yul\":12715:12733   */\n      add\n        /* \"#utility.yul\":12706:12712   */\n      dup7\n        /* \"#utility.yul\":12662:12734   */\n      tag_249\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12744:12816   */\n      tag_414\n        /* \"#utility.yul\":12812:12814   */\n      0x40\n        /* \"#utility.yul\":12801:12810   */\n      dup4\n        /* \"#utility.yul\":12797:12815   */\n      add\n        /* \"#utility.yul\":12788:12794   */\n      dup6\n        /* \"#utility.yul\":12744:12816   */\n      tag_249\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":12826:12898   */\n      tag_415\n        /* \"#utility.yul\":12894:12896   */\n      0x60\n        /* \"#utility.yul\":12883:12892   */\n      dup4\n        /* \"#utility.yul\":12879:12897   */\n      add\n        /* \"#utility.yul\":12870:12876   */\n      dup5\n        /* \"#utility.yul\":12826:12898   */\n      tag_249\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12352:12905   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12911:13091   */\n    tag_264:\n        /* \"#utility.yul\":12959:13036   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12956:12957   */\n      0x00\n        /* \"#utility.yul\":12949:13037   */\n      mstore\n        /* \"#utility.yul\":13056:13060   */\n      0x22\n        /* \"#utility.yul\":13053:13054   */\n      0x04\n        /* \"#utility.yul\":13046:13061   */\n      mstore\n        /* \"#utility.yul\":13080:13084   */\n      0x24\n        /* \"#utility.yul\":13077:13078   */\n      0x00\n        /* \"#utility.yul\":13070:13085   */\n      revert\n        /* \"#utility.yul\":13097:13417   */\n    tag_131:\n        /* \"#utility.yul\":13141:13147   */\n      0x00\n        /* \"#utility.yul\":13178:13179   */\n      0x02\n        /* \"#utility.yul\":13172:13176   */\n      dup3\n        /* \"#utility.yul\":13168:13180   */\n      div\n        /* \"#utility.yul\":13158:13180   */\n      swap1\n      pop\n        /* \"#utility.yul\":13225:13226   */\n      0x01\n        /* \"#utility.yul\":13219:13223   */\n      dup3\n        /* \"#utility.yul\":13215:13227   */\n      and\n        /* \"#utility.yul\":13246:13264   */\n      dup1\n        /* \"#utility.yul\":13236:13317   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":13302:13306   */\n      0x7f\n        /* \"#utility.yul\":13294:13300   */\n      dup3\n        /* \"#utility.yul\":13290:13307   */\n      and\n        /* \"#utility.yul\":13280:13307   */\n      swap2\n      pop\n        /* \"#utility.yul\":13236:13317   */\n    tag_418:\n        /* \"#utility.yul\":13364:13366   */\n      0x20\n        /* \"#utility.yul\":13356:13362   */\n      dup3\n        /* \"#utility.yul\":13353:13367   */\n      lt\n        /* \"#utility.yul\":13333:13351   */\n      dup2\n        /* \"#utility.yul\":13330:13368   */\n      sub\n        /* \"#utility.yul\":13327:13411   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":13383:13401   */\n      tag_420\n      tag_264\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13327:13411   */\n    tag_419:\n        /* \"#utility.yul\":13148:13417   */\n      pop\n        /* \"#utility.yul\":13097:13417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13423:13601   */\n    tag_265:\n        /* \"#utility.yul\":13563:13593   */\n      0x4572726f722d4d4e545f4d554d4241492e736f6c2d4f776e61626c6500000000\n        /* \"#utility.yul\":13559:13560   */\n      0x00\n        /* \"#utility.yul\":13551:13557   */\n      dup3\n        /* \"#utility.yul\":13547:13561   */\n      add\n        /* \"#utility.yul\":13540:13594   */\n      mstore\n        /* \"#utility.yul\":13423:13601   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13607:13973   */\n    tag_266:\n        /* \"#utility.yul\":13749:13752   */\n      0x00\n        /* \"#utility.yul\":13770:13837   */\n      tag_423\n        /* \"#utility.yul\":13834:13836   */\n      0x1c\n        /* \"#utility.yul\":13829:13832   */\n      dup4\n        /* \"#utility.yul\":13770:13837   */\n      tag_233\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13763:13837   */\n      swap2\n      pop\n        /* \"#utility.yul\":13846:13939   */\n      tag_424\n        /* \"#utility.yul\":13935:13938   */\n      dup3\n        /* \"#utility.yul\":13846:13939   */\n      tag_265\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13964:13966   */\n      0x20\n        /* \"#utility.yul\":13959:13962   */\n      dup3\n        /* \"#utility.yul\":13955:13967   */\n      add\n        /* \"#utility.yul\":13948:13967   */\n      swap1\n      pop\n        /* \"#utility.yul\":13607:13973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13979:14398   */\n    tag_153:\n        /* \"#utility.yul\":14145:14149   */\n      0x00\n        /* \"#utility.yul\":14183:14185   */\n      0x20\n        /* \"#utility.yul\":14172:14181   */\n      dup3\n        /* \"#utility.yul\":14168:14186   */\n      add\n        /* \"#utility.yul\":14160:14186   */\n      swap1\n      pop\n        /* \"#utility.yul\":14232:14241   */\n      dup2\n        /* \"#utility.yul\":14226:14230   */\n      dup2\n        /* \"#utility.yul\":14222:14242   */\n      sub\n        /* \"#utility.yul\":14218:14219   */\n      0x00\n        /* \"#utility.yul\":14207:14216   */\n      dup4\n        /* \"#utility.yul\":14203:14220   */\n      add\n        /* \"#utility.yul\":14196:14243   */\n      mstore\n        /* \"#utility.yul\":14260:14391   */\n      tag_426\n        /* \"#utility.yul\":14386:14390   */\n      dup2\n        /* \"#utility.yul\":14260:14391   */\n      tag_266\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":14252:14391   */\n      swap1\n      pop\n        /* \"#utility.yul\":13979:14398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14404:14736   */\n    tag_158:\n        /* \"#utility.yul\":14525:14529   */\n      0x00\n        /* \"#utility.yul\":14563:14565   */\n      0x40\n        /* \"#utility.yul\":14552:14561   */\n      dup3\n        /* \"#utility.yul\":14548:14566   */\n      add\n        /* \"#utility.yul\":14540:14566   */\n      swap1\n      pop\n        /* \"#utility.yul\":14576:14647   */\n      tag_428\n        /* \"#utility.yul\":14644:14645   */\n      0x00\n        /* \"#utility.yul\":14633:14642   */\n      dup4\n        /* \"#utility.yul\":14629:14646   */\n      add\n        /* \"#utility.yul\":14620:14626   */\n      dup6\n        /* \"#utility.yul\":14576:14647   */\n      tag_249\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":14657:14729   */\n      tag_429\n        /* \"#utility.yul\":14725:14727   */\n      0x20\n        /* \"#utility.yul\":14714:14723   */\n      dup4\n        /* \"#utility.yul\":14710:14728   */\n      add\n        /* \"#utility.yul\":14701:14707   */\n      dup5\n        /* \"#utility.yul\":14657:14729   */\n      tag_249\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":14404:14736   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14742:15184   */\n    tag_164:\n        /* \"#utility.yul\":14891:14895   */\n      0x00\n        /* \"#utility.yul\":14929:14931   */\n      0x60\n        /* \"#utility.yul\":14918:14927   */\n      dup3\n        /* \"#utility.yul\":14914:14932   */\n      add\n        /* \"#utility.yul\":14906:14932   */\n      swap1\n      pop\n        /* \"#utility.yul\":14942:15013   */\n      tag_431\n        /* \"#utility.yul\":15010:15011   */\n      0x00\n        /* \"#utility.yul\":14999:15008   */\n      dup4\n        /* \"#utility.yul\":14995:15012   */\n      add\n        /* \"#utility.yul\":14986:14992   */\n      dup7\n        /* \"#utility.yul\":14942:15013   */\n      tag_249\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":15023:15095   */\n      tag_432\n        /* \"#utility.yul\":15091:15093   */\n      0x20\n        /* \"#utility.yul\":15080:15089   */\n      dup4\n        /* \"#utility.yul\":15076:15094   */\n      add\n        /* \"#utility.yul\":15067:15073   */\n      dup6\n        /* \"#utility.yul\":15023:15095   */\n      tag_249\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15105:15177   */\n      tag_433\n        /* \"#utility.yul\":15173:15175   */\n      0x40\n        /* \"#utility.yul\":15162:15171   */\n      dup4\n        /* \"#utility.yul\":15158:15176   */\n      add\n        /* \"#utility.yul\":15149:15155   */\n      dup5\n        /* \"#utility.yul\":15105:15177   */\n      tag_249\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":14742:15184   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15190:15295   */\n    tag_267:\n        /* \"#utility.yul\":15226:15233   */\n      0x00\n        /* \"#utility.yul\":15266:15288   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":15259:15264   */\n      dup3\n        /* \"#utility.yul\":15255:15289   */\n      and\n        /* \"#utility.yul\":15244:15289   */\n      swap1\n      pop\n        /* \"#utility.yul\":15190:15295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15301:15421   */\n    tag_268:\n        /* \"#utility.yul\":15373:15396   */\n      tag_436\n        /* \"#utility.yul\":15390:15395   */\n      dup2\n        /* \"#utility.yul\":15373:15396   */\n      tag_267\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":15366:15371   */\n      dup2\n        /* \"#utility.yul\":15363:15397   */\n      eq\n        /* \"#utility.yul\":15353:15415   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":15411:15412   */\n      0x00\n        /* \"#utility.yul\":15408:15409   */\n      dup1\n        /* \"#utility.yul\":15401:15413   */\n      revert\n        /* \"#utility.yul\":15353:15415   */\n    tag_437:\n        /* \"#utility.yul\":15301:15421   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15427:15568   */\n    tag_269:\n        /* \"#utility.yul\":15483:15488   */\n      0x00\n        /* \"#utility.yul\":15514:15520   */\n      dup2\n        /* \"#utility.yul\":15508:15521   */\n      mload\n        /* \"#utility.yul\":15499:15521   */\n      swap1\n      pop\n        /* \"#utility.yul\":15530:15562   */\n      tag_439\n        /* \"#utility.yul\":15556:15561   */\n      dup2\n        /* \"#utility.yul\":15530:15562   */\n      tag_268\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":15427:15568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15574:15694   */\n    tag_270:\n        /* \"#utility.yul\":15646:15669   */\n      tag_441\n        /* \"#utility.yul\":15663:15668   */\n      dup2\n        /* \"#utility.yul\":15646:15669   */\n      tag_253\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":15639:15644   */\n      dup2\n        /* \"#utility.yul\":15636:15670   */\n      eq\n        /* \"#utility.yul\":15626:15688   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":15684:15685   */\n      0x00\n        /* \"#utility.yul\":15681:15682   */\n      dup1\n        /* \"#utility.yul\":15674:15686   */\n      revert\n        /* \"#utility.yul\":15626:15688   */\n    tag_442:\n        /* \"#utility.yul\":15574:15694   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15700:15841   */\n    tag_271:\n        /* \"#utility.yul\":15756:15761   */\n      0x00\n        /* \"#utility.yul\":15787:15793   */\n      dup2\n        /* \"#utility.yul\":15781:15794   */\n      mload\n        /* \"#utility.yul\":15772:15794   */\n      swap1\n      pop\n        /* \"#utility.yul\":15803:15835   */\n      tag_444\n        /* \"#utility.yul\":15829:15834   */\n      dup2\n        /* \"#utility.yul\":15803:15835   */\n      tag_270\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15700:15841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15847:15990   */\n    tag_272:\n        /* \"#utility.yul\":15904:15909   */\n      0x00\n        /* \"#utility.yul\":15935:15941   */\n      dup2\n        /* \"#utility.yul\":15929:15942   */\n      mload\n        /* \"#utility.yul\":15920:15942   */\n      swap1\n      pop\n        /* \"#utility.yul\":15951:15984   */\n      tag_446\n        /* \"#utility.yul\":15978:15983   */\n      dup2\n        /* \"#utility.yul\":15951:15984   */\n      tag_245\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":15847:15990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15996:16967   */\n    tag_183:\n        /* \"#utility.yul\":16099:16105   */\n      0x00\n        /* \"#utility.yul\":16107:16113   */\n      dup1\n        /* \"#utility.yul\":16115:16121   */\n      0x00\n        /* \"#utility.yul\":16123:16129   */\n      dup1\n        /* \"#utility.yul\":16131:16137   */\n      0x00\n        /* \"#utility.yul\":16180:16183   */\n      0xa0\n        /* \"#utility.yul\":16168:16177   */\n      dup7\n        /* \"#utility.yul\":16159:16166   */\n      dup9\n        /* \"#utility.yul\":16155:16178   */\n      sub\n        /* \"#utility.yul\":16151:16184   */\n      slt\n        /* \"#utility.yul\":16148:16268   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":16187:16266   */\n      tag_449\n      tag_238\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":16148:16268   */\n    tag_448:\n        /* \"#utility.yul\":16307:16308   */\n      0x00\n        /* \"#utility.yul\":16332:16395   */\n      tag_450\n        /* \"#utility.yul\":16387:16394   */\n      dup9\n        /* \"#utility.yul\":16378:16384   */\n      dup3\n        /* \"#utility.yul\":16367:16376   */\n      dup10\n        /* \"#utility.yul\":16363:16385   */\n      add\n        /* \"#utility.yul\":16332:16395   */\n      tag_269\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":16322:16395   */\n      swap6\n      pop\n        /* \"#utility.yul\":16278:16405   */\n      pop\n        /* \"#utility.yul\":16444:16446   */\n      0x20\n        /* \"#utility.yul\":16470:16533   */\n      tag_451\n        /* \"#utility.yul\":16525:16532   */\n      dup9\n        /* \"#utility.yul\":16516:16522   */\n      dup3\n        /* \"#utility.yul\":16505:16514   */\n      dup10\n        /* \"#utility.yul\":16501:16523   */\n      add\n        /* \"#utility.yul\":16470:16533   */\n      tag_271\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":16460:16533   */\n      swap5\n      pop\n        /* \"#utility.yul\":16415:16543   */\n      pop\n        /* \"#utility.yul\":16582:16584   */\n      0x40\n        /* \"#utility.yul\":16608:16672   */\n      tag_452\n        /* \"#utility.yul\":16664:16671   */\n      dup9\n        /* \"#utility.yul\":16655:16661   */\n      dup3\n        /* \"#utility.yul\":16644:16653   */\n      dup10\n        /* \"#utility.yul\":16640:16662   */\n      add\n        /* \"#utility.yul\":16608:16672   */\n      tag_272\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":16598:16672   */\n      swap4\n      pop\n        /* \"#utility.yul\":16553:16682   */\n      pop\n        /* \"#utility.yul\":16721:16723   */\n      0x60\n        /* \"#utility.yul\":16747:16811   */\n      tag_453\n        /* \"#utility.yul\":16803:16810   */\n      dup9\n        /* \"#utility.yul\":16794:16800   */\n      dup3\n        /* \"#utility.yul\":16783:16792   */\n      dup10\n        /* \"#utility.yul\":16779:16801   */\n      add\n        /* \"#utility.yul\":16747:16811   */\n      tag_272\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":16737:16811   */\n      swap3\n      pop\n        /* \"#utility.yul\":16692:16821   */\n      pop\n        /* \"#utility.yul\":16860:16863   */\n      0x80\n        /* \"#utility.yul\":16887:16950   */\n      tag_454\n        /* \"#utility.yul\":16942:16949   */\n      dup9\n        /* \"#utility.yul\":16933:16939   */\n      dup3\n        /* \"#utility.yul\":16922:16931   */\n      dup10\n        /* \"#utility.yul\":16918:16940   */\n      add\n        /* \"#utility.yul\":16887:16950   */\n      tag_269\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":16877:16950   */\n      swap2\n      pop\n        /* \"#utility.yul\":16831:16960   */\n      pop\n        /* \"#utility.yul\":15996:16967   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16973:17358   */\n    tag_185:\n        /* \"#utility.yul\":17012:17013   */\n      0x00\n        /* \"#utility.yul\":17029:17048   */\n      tag_456\n        /* \"#utility.yul\":17046:17047   */\n      dup3\n        /* \"#utility.yul\":17029:17048   */\n      tag_253\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":17024:17048   */\n      swap2\n      pop\n        /* \"#utility.yul\":17062:17081   */\n      tag_457\n        /* \"#utility.yul\":17079:17080   */\n      dup4\n        /* \"#utility.yul\":17062:17081   */\n      tag_253\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":17057:17081   */\n      swap3\n      pop\n        /* \"#utility.yul\":17100:17101   */\n      dup3\n        /* \"#utility.yul\":17090:17125   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":17105:17123   */\n      tag_459\n      tag_261\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":17090:17125   */\n    tag_458:\n        /* \"#utility.yul\":17291:17292   */\n      0x01\n        /* \"#utility.yul\":17288:17289   */\n      0x00\n        /* \"#utility.yul\":17284:17293   */\n      sub\n        /* \"#utility.yul\":17281:17282   */\n      dup4\n        /* \"#utility.yul\":17278:17294   */\n      eq\n        /* \"#utility.yul\":17197:17263   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17194:17195   */\n      dup4\n        /* \"#utility.yul\":17191:17264   */\n      eq\n        /* \"#utility.yul\":17174:17304   */\n      and\n        /* \"#utility.yul\":17171:17327   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":17307:17325   */\n      tag_461\n      tag_257\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":17171:17327   */\n    tag_460:\n        /* \"#utility.yul\":17350:17351   */\n      dup3\n        /* \"#utility.yul\":17347:17348   */\n      dup3\n        /* \"#utility.yul\":17342:17352   */\n      sdiv\n        /* \"#utility.yul\":17337:17352   */\n      swap1\n      pop\n        /* \"#utility.yul\":16973:17358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17364:17806   */\n    tag_200:\n        /* \"#utility.yul\":17513:17517   */\n      0x00\n        /* \"#utility.yul\":17551:17553   */\n      0x60\n        /* \"#utility.yul\":17540:17549   */\n      dup3\n        /* \"#utility.yul\":17536:17554   */\n      add\n        /* \"#utility.yul\":17528:17554   */\n      swap1\n      pop\n        /* \"#utility.yul\":17564:17635   */\n      tag_463\n        /* \"#utility.yul\":17632:17633   */\n      0x00\n        /* \"#utility.yul\":17621:17630   */\n      dup4\n        /* \"#utility.yul\":17617:17634   */\n      add\n        /* \"#utility.yul\":17608:17614   */\n      dup7\n        /* \"#utility.yul\":17564:17635   */\n      tag_252\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":17645:17717   */\n      tag_464\n        /* \"#utility.yul\":17713:17715   */\n      0x20\n        /* \"#utility.yul\":17702:17711   */\n      dup4\n        /* \"#utility.yul\":17698:17716   */\n      add\n        /* \"#utility.yul\":17689:17695   */\n      dup6\n        /* \"#utility.yul\":17645:17717   */\n      tag_249\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":17727:17799   */\n      tag_465\n        /* \"#utility.yul\":17795:17797   */\n      0x40\n        /* \"#utility.yul\":17784:17793   */\n      dup4\n        /* \"#utility.yul\":17780:17798   */\n      add\n        /* \"#utility.yul\":17771:17777   */\n      dup5\n        /* \"#utility.yul\":17727:17799   */\n      tag_249\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":17364:17806   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d4e246ff0dcb3815227a5fd5e1a70e28369513cedeed3cc6591597fa56c702a364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1019": {
									"entryPoint": null,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_816": {
									"entryPoint": null,
									"id": 816,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_537": {
									"entryPoint": 568,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_504": {
									"entryPoint": 897,
									"id": 504,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_873": {
									"entryPoint": 706,
									"id": 873,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@cap_825": {
									"entryPoint": 1445,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_261": {
									"entryPoint": 560,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_270": {
									"entryPoint": 1454,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 2886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3142,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 2847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2346,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10738:8",
										"nodeType": "YulBlock",
										"src": "0:10738:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:8",
													"nodeType": "YulBlock",
													"src": "35:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:8",
																		"nodeType": "YulLiteral",
																		"src": "52:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:8",
																		"nodeType": "YulLiteral",
																		"src": "55:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:8"
																},
																"nativeSrc": "45:88:8",
																"nodeType": "YulFunctionCall",
																"src": "45:88:8"
															},
															"nativeSrc": "45:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:8",
																		"nodeType": "YulLiteral",
																		"src": "149:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:8",
																		"nodeType": "YulLiteral",
																		"src": "152:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:8"
																},
																"nativeSrc": "142:15:8",
																"nodeType": "YulFunctionCall",
																"src": "142:15:8"
															},
															"nativeSrc": "142:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:8",
																		"nodeType": "YulLiteral",
																		"src": "173:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:8",
																		"nodeType": "YulLiteral",
																		"src": "176:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nativeSrc": "166:15:8",
																"nodeType": "YulFunctionCall",
																"src": "166:15:8"
															},
															"nativeSrc": "166:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:8"
											},
											{
												"body": {
													"nativeSrc": "244:51:8",
													"nodeType": "YulBlock",
													"src": "244:51:8",
													"statements": [
														{
															"nativeSrc": "254:34:8",
															"nodeType": "YulAssignment",
															"src": "254:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "279:1:8",
																		"nodeType": "YulLiteral",
																		"src": "279:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "282:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "282:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "275:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:8"
																},
																"nativeSrc": "275:13:8",
																"nodeType": "YulFunctionCall",
																"src": "275:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "254:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "254:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "193:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "225:5:8",
														"nodeType": "YulTypedName",
														"src": "225:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "235:8:8",
														"nodeType": "YulTypedName",
														"src": "235:8:8",
														"type": ""
													}
												],
												"src": "193:102:8"
											},
											{
												"body": {
													"nativeSrc": "374:775:8",
													"nodeType": "YulBlock",
													"src": "374:775:8",
													"statements": [
														{
															"nativeSrc": "384:15:8",
															"nodeType": "YulAssignment",
															"src": "384:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "393:6:8",
																"nodeType": "YulIdentifier",
																"src": "393:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "384:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "384:5:8"
																}
															]
														},
														{
															"nativeSrc": "408:14:8",
															"nodeType": "YulAssignment",
															"src": "408:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "417:5:8",
																"nodeType": "YulIdentifier",
																"src": "417:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "408:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "408:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "466:677:8",
																"nodeType": "YulBlock",
																"src": "466:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "554:22:8",
																			"nodeType": "YulBlock",
																			"src": "554:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "556:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "556:16:8"
																						},
																						"nativeSrc": "556:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "556:18:8"
																					},
																					"nativeSrc": "556:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "556:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "532:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "532:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "542:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "547:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "547:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "538:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "538:3:8"
																					},
																					"nativeSrc": "538:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "538:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "529:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "529:2:8"
																			},
																			"nativeSrc": "529:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "529:24:8"
																		},
																		"nativeSrc": "526:50:8",
																		"nodeType": "YulIf",
																		"src": "526:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "621:419:8",
																			"nodeType": "YulBlock",
																			"src": "621:419:8",
																			"statements": [
																				{
																					"nativeSrc": "1001:25:8",
																					"nodeType": "YulAssignment",
																					"src": "1001:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "1014:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1014:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "1021:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "1021:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1010:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1010:3:8"
																						},
																						"nativeSrc": "1010:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1010:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "1001:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1001:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "596:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "596:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "606:1:8",
																					"nodeType": "YulLiteral",
																					"src": "606:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "592:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "592:3:8"
																			},
																			"nativeSrc": "592:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "592:16:8"
																		},
																		"nativeSrc": "589:451:8",
																		"nodeType": "YulIf",
																		"src": "589:451:8"
																	},
																	{
																		"nativeSrc": "1053:23:8",
																		"nodeType": "YulAssignment",
																		"src": "1053:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1065:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1065:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "1071:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1071:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "1061:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1061:3:8"
																			},
																			"nativeSrc": "1061:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1061:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "1053:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1053:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1089:44:8",
																		"nodeType": "YulAssignment",
																		"src": "1089:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "1124:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "1124:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "1101:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "1101:22:8"
																			},
																			"nativeSrc": "1101:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1101:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "1089:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1089:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "442:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "442:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "452:1:8",
																		"nodeType": "YulLiteral",
																		"src": "452:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "439:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "439:2:8"
																},
																"nativeSrc": "439:15:8",
																"nodeType": "YulFunctionCall",
																"src": "439:15:8"
															},
															"nativeSrc": "431:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "455:2:8",
																"nodeType": "YulBlock",
																"src": "455:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "435:3:8",
																"nodeType": "YulBlock",
																"src": "435:3:8",
																"statements": []
															},
															"src": "431:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "301:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "329:6:8",
														"nodeType": "YulTypedName",
														"src": "329:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "337:5:8",
														"nodeType": "YulTypedName",
														"src": "337:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "344:8:8",
														"nodeType": "YulTypedName",
														"src": "344:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "354:3:8",
														"nodeType": "YulTypedName",
														"src": "354:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "362:5:8",
														"nodeType": "YulTypedName",
														"src": "362:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "369:4:8",
														"nodeType": "YulTypedName",
														"src": "369:4:8",
														"type": ""
													}
												],
												"src": "301:848:8"
											},
											{
												"body": {
													"nativeSrc": "1215:1013:8",
													"nodeType": "YulBlock",
													"src": "1215:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:20:8",
																"nodeType": "YulBlock",
																"src": "1410:20:8",
																"statements": [
																	{
																		"nativeSrc": "1412:10:8",
																		"nodeType": "YulAssignment",
																		"src": "1412:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1421:1:8",
																			"nodeType": "YulLiteral",
																			"src": "1421:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1412:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1412:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1423:5:8",
																		"nodeType": "YulLeave",
																		"src": "1423:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1400:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1400:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1393:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:8"
																},
																"nativeSrc": "1393:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1393:16:8"
															},
															"nativeSrc": "1390:40:8",
															"nodeType": "YulIf",
															"src": "1390:40:8"
														},
														{
															"body": {
																"nativeSrc": "1455:20:8",
																"nodeType": "YulBlock",
																"src": "1455:20:8",
																"statements": [
																	{
																		"nativeSrc": "1457:10:8",
																		"nodeType": "YulAssignment",
																		"src": "1457:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1466:1:8",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1457:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1468:5:8",
																		"nodeType": "YulLeave",
																		"src": "1468:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1449:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1449:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:8"
																},
																"nativeSrc": "1442:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1442:12:8"
															},
															"nativeSrc": "1439:36:8",
															"nodeType": "YulIf",
															"src": "1439:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1585:20:8",
																		"nodeType": "YulBlock",
																		"src": "1585:20:8",
																		"statements": [
																			{
																				"nativeSrc": "1587:10:8",
																				"nodeType": "YulAssignment",
																				"src": "1587:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1596:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1587:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1587:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1598:5:8",
																				"nodeType": "YulLeave",
																				"src": "1598:5:8"
																			}
																		]
																	},
																	"nativeSrc": "1578:27:8",
																	"nodeType": "YulCase",
																	"src": "1578:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1583:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1583:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1629:176:8",
																		"nodeType": "YulBlock",
																		"src": "1629:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "1664:22:8",
																					"nodeType": "YulBlock",
																					"src": "1664:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1666:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "1666:16:8"
																								},
																								"nativeSrc": "1666:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1666:18:8"
																							},
																							"nativeSrc": "1666:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "1666:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "1649:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "1649:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1659:3:8",
																							"nodeType": "YulLiteral",
																							"src": "1659:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1646:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1646:2:8"
																					},
																					"nativeSrc": "1646:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1646:17:8"
																				},
																				"nativeSrc": "1643:43:8",
																				"nodeType": "YulIf",
																				"src": "1643:43:8"
																			},
																			{
																				"nativeSrc": "1699:25:8",
																				"nodeType": "YulAssignment",
																				"src": "1699:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1712:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1712:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "1715:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "1715:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "1708:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1708:3:8"
																					},
																					"nativeSrc": "1708:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1708:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1699:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1699:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1755:22:8",
																					"nodeType": "YulBlock",
																					"src": "1755:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1757:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "1757:16:8"
																								},
																								"nativeSrc": "1757:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1757:18:8"
																							},
																							"nativeSrc": "1757:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "1757:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "1743:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1743:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "1750:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1750:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1740:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:8"
																					},
																					"nativeSrc": "1740:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1740:14:8"
																				},
																				"nativeSrc": "1737:40:8",
																				"nodeType": "YulIf",
																				"src": "1737:40:8"
																			},
																			{
																				"nativeSrc": "1790:5:8",
																				"nodeType": "YulLeave",
																				"src": "1790:5:8"
																			}
																		]
																	},
																	"nativeSrc": "1614:191:8",
																	"nodeType": "YulCase",
																	"src": "1614:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1619:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1619:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "1535:4:8",
																"nodeType": "YulIdentifier",
																"src": "1535:4:8"
															},
															"nativeSrc": "1528:277:8",
															"nodeType": "YulSwitch",
															"src": "1528:277:8"
														},
														{
															"body": {
																"nativeSrc": "1937:123:8",
																"nodeType": "YulBlock",
																"src": "1937:123:8",
																"statements": [
																	{
																		"nativeSrc": "1951:28:8",
																		"nodeType": "YulAssignment",
																		"src": "1951:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1964:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1964:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1970:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "1970:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1960:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1960:3:8"
																			},
																			"nativeSrc": "1960:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1960:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1951:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1951:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2010:22:8",
																			"nodeType": "YulBlock",
																			"src": "2010:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2012:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "2012:16:8"
																						},
																						"nativeSrc": "2012:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2012:18:8"
																					},
																					"nativeSrc": "2012:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "2012:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "1998:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1998:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "2005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1995:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1995:2:8"
																			},
																			"nativeSrc": "1995:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:14:8"
																		},
																		"nativeSrc": "1992:40:8",
																		"nodeType": "YulIf",
																		"src": "1992:40:8"
																	},
																	{
																		"nativeSrc": "2045:5:8",
																		"nodeType": "YulLeave",
																		"src": "2045:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1840:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1840:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1846:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1846:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1837:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1837:2:8"
																				},
																				"nativeSrc": "1837:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1854:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "1854:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1864:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1864:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1851:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1851:2:8"
																				},
																				"nativeSrc": "1851:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1851:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:8"
																		},
																		"nativeSrc": "1833:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1889:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1889:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1895:3:8",
																						"nodeType": "YulLiteral",
																						"src": "1895:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1886:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1886:2:8"
																				},
																				"nativeSrc": "1886:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1886:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1904:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "1904:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1914:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1914:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1901:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1901:2:8"
																				},
																				"nativeSrc": "1901:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1901:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1882:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:8"
																		},
																		"nativeSrc": "1882:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1882:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1817:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1817:2:8"
																},
																"nativeSrc": "1817:111:8",
																"nodeType": "YulFunctionCall",
																"src": "1817:111:8"
															},
															"nativeSrc": "1814:246:8",
															"nodeType": "YulIf",
															"src": "1814:246:8"
														},
														{
															"nativeSrc": "2070:57:8",
															"nodeType": "YulAssignment",
															"src": "2070:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2104:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2107:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2107:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2113:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2113:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "2123:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2123:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "2085:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:8"
																},
																"nativeSrc": "2085:42:8",
																"nodeType": "YulFunctionCall",
																"src": "2085:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2070:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2070:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "2077:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2166:22:8",
																"nodeType": "YulBlock",
																"src": "2166:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2168:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2168:16:8"
																			},
																			"nativeSrc": "2168:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2168:18:8"
																		},
																		"nativeSrc": "2168:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2143:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "2154:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2154:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "2159:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2159:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2150:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:8"
																		},
																		"nativeSrc": "2150:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2140:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:8"
																},
																"nativeSrc": "2140:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2140:25:8"
															},
															"nativeSrc": "2137:51:8",
															"nodeType": "YulIf",
															"src": "2137:51:8"
														},
														{
															"nativeSrc": "2197:25:8",
															"nodeType": "YulAssignment",
															"src": "2197:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2210:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2210:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2217:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2217:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2206:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:8"
																},
																"nativeSrc": "2206:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2206:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2197:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2197:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "1155:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1185:4:8",
														"nodeType": "YulTypedName",
														"src": "1185:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1191:8:8",
														"nodeType": "YulTypedName",
														"src": "1191:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "1201:3:8",
														"nodeType": "YulTypedName",
														"src": "1201:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1209:5:8",
														"nodeType": "YulTypedName",
														"src": "1209:5:8",
														"type": ""
													}
												],
												"src": "1155:1073:8"
											},
											{
												"body": {
													"nativeSrc": "2279:32:8",
													"nodeType": "YulBlock",
													"src": "2279:32:8",
													"statements": [
														{
															"nativeSrc": "2289:16:8",
															"nodeType": "YulAssignment",
															"src": "2289:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2300:5:8",
																"nodeType": "YulIdentifier",
																"src": "2300:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2289:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2289:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2234:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2261:5:8",
														"nodeType": "YulTypedName",
														"src": "2261:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2271:7:8",
														"nodeType": "YulTypedName",
														"src": "2271:7:8",
														"type": ""
													}
												],
												"src": "2234:77:8"
											},
											{
												"body": {
													"nativeSrc": "2383:219:8",
													"nodeType": "YulBlock",
													"src": "2383:219:8",
													"statements": [
														{
															"nativeSrc": "2393:31:8",
															"nodeType": "YulAssignment",
															"src": "2393:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2419:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2419:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2401:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2401:17:8"
																},
																"nativeSrc": "2401:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2401:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2393:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2393:4:8"
																}
															]
														},
														{
															"nativeSrc": "2433:39:8",
															"nodeType": "YulAssignment",
															"src": "2433:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2463:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2463:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2445:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2445:17:8"
																},
																"nativeSrc": "2445:27:8",
																"nodeType": "YulFunctionCall",
																"src": "2445:27:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "2433:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2433:8:8"
																}
															]
														},
														{
															"nativeSrc": "2482:113:8",
															"nodeType": "YulAssignment",
															"src": "2482:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2512:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2512:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2518:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2518:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2528:66:8",
																		"nodeType": "YulLiteral",
																		"src": "2528:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "2491:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "2491:20:8"
																},
																"nativeSrc": "2491:104:8",
																"nodeType": "YulFunctionCall",
																"src": "2491:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2482:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2482:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "2317:285:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2358:4:8",
														"nodeType": "YulTypedName",
														"src": "2358:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2364:8:8",
														"nodeType": "YulTypedName",
														"src": "2364:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2377:5:8",
														"nodeType": "YulTypedName",
														"src": "2377:5:8",
														"type": ""
													}
												],
												"src": "2317:285:8"
											},
											{
												"body": {
													"nativeSrc": "2656:362:8",
													"nodeType": "YulBlock",
													"src": "2656:362:8",
													"statements": [
														{
															"nativeSrc": "2666:25:8",
															"nodeType": "YulAssignment",
															"src": "2666:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2689:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2689:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2671:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2671:17:8"
																},
																"nativeSrc": "2671:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2671:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2666:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "2666:1:8"
																}
															]
														},
														{
															"nativeSrc": "2700:25:8",
															"nodeType": "YulAssignment",
															"src": "2700:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2723:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2723:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2705:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2705:17:8"
																},
																"nativeSrc": "2705:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2705:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2700:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "2700:1:8"
																}
															]
														},
														{
															"nativeSrc": "2734:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2734:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2757:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2757:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2760:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2760:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2753:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2753:3:8"
																},
																"nativeSrc": "2753:9:8",
																"nodeType": "YulFunctionCall",
																"src": "2753:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2738:11:8",
																	"nodeType": "YulTypedName",
																	"src": "2738:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2771:41:8",
															"nodeType": "YulAssignment",
															"src": "2771:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2800:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "2800:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2782:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2782:17:8"
																},
																"nativeSrc": "2782:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2782:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2771:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2771:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2989:22:8",
																"nodeType": "YulBlock",
																"src": "2989:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2991:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2991:16:8"
																			},
																			"nativeSrc": "2991:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2991:18:8"
																		},
																		"nativeSrc": "2991:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2991:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2922:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "2922:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2915:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2915:6:8"
																				},
																				"nativeSrc": "2915:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2915:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2945:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "2945:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2952:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "2952:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2961:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "2961:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2948:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2948:3:8"
																						},
																						"nativeSrc": "2948:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2948:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2942:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2942:2:8"
																				},
																				"nativeSrc": "2942:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2942:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2895:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2895:2:8"
																		},
																		"nativeSrc": "2895:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2875:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:8"
																},
																"nativeSrc": "2875:113:8",
																"nodeType": "YulFunctionCall",
																"src": "2875:113:8"
															},
															"nativeSrc": "2872:139:8",
															"nodeType": "YulIf",
															"src": "2872:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2608:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2639:1:8",
														"nodeType": "YulTypedName",
														"src": "2639:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2642:1:8",
														"nodeType": "YulTypedName",
														"src": "2642:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2648:7:8",
														"nodeType": "YulTypedName",
														"src": "2648:7:8",
														"type": ""
													}
												],
												"src": "2608:410:8"
											},
											{
												"body": {
													"nativeSrc": "3083:40:8",
													"nodeType": "YulBlock",
													"src": "3083:40:8",
													"statements": [
														{
															"nativeSrc": "3094:22:8",
															"nodeType": "YulAssignment",
															"src": "3094:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3110:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3110:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3104:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3104:5:8"
																},
																"nativeSrc": "3104:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3104:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3094:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3024:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3066:5:8",
														"nodeType": "YulTypedName",
														"src": "3066:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3076:6:8",
														"nodeType": "YulTypedName",
														"src": "3076:6:8",
														"type": ""
													}
												],
												"src": "3024:99:8"
											},
											{
												"body": {
													"nativeSrc": "3157:152:8",
													"nodeType": "YulBlock",
													"src": "3157:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3174:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3174:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3177:77:8",
																		"nodeType": "YulLiteral",
																		"src": "3177:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3167:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3167:6:8"
																},
																"nativeSrc": "3167:88:8",
																"nodeType": "YulFunctionCall",
																"src": "3167:88:8"
															},
															"nativeSrc": "3167:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "3167:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3271:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3271:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3274:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3274:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3264:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3264:6:8"
																},
																"nativeSrc": "3264:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3264:15:8"
															},
															"nativeSrc": "3264:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3264:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3295:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3295:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3298:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3298:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3288:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3288:6:8"
																},
																"nativeSrc": "3288:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3288:15:8"
															},
															"nativeSrc": "3288:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3288:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3129:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3129:180:8"
											},
											{
												"body": {
													"nativeSrc": "3343:152:8",
													"nodeType": "YulBlock",
													"src": "3343:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3360:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3360:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3363:77:8",
																		"nodeType": "YulLiteral",
																		"src": "3363:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3353:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3353:6:8"
																},
																"nativeSrc": "3353:88:8",
																"nodeType": "YulFunctionCall",
																"src": "3353:88:8"
															},
															"nativeSrc": "3353:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "3353:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3457:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3457:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3460:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3460:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3450:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3450:6:8"
																},
																"nativeSrc": "3450:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3450:15:8"
															},
															"nativeSrc": "3450:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3450:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3481:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3481:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3484:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3484:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3474:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:8"
																},
																"nativeSrc": "3474:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3474:15:8"
															},
															"nativeSrc": "3474:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3474:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3315:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3315:180:8"
											},
											{
												"body": {
													"nativeSrc": "3552:269:8",
													"nodeType": "YulBlock",
													"src": "3552:269:8",
													"statements": [
														{
															"nativeSrc": "3562:22:8",
															"nodeType": "YulAssignment",
															"src": "3562:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3576:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3576:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3582:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3572:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3572:3:8"
																},
																"nativeSrc": "3572:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3572:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3562:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3562:6:8"
																}
															]
														},
														{
															"nativeSrc": "3593:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3593:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3623:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3623:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3629:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3619:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:8"
																},
																"nativeSrc": "3619:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3619:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3597:18:8",
																	"nodeType": "YulTypedName",
																	"src": "3597:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3670:51:8",
																"nodeType": "YulBlock",
																"src": "3670:51:8",
																"statements": [
																	{
																		"nativeSrc": "3684:27:8",
																		"nodeType": "YulAssignment",
																		"src": "3684:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3698:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3698:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3706:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3706:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3694:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3694:3:8"
																			},
																			"nativeSrc": "3694:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3694:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3684:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3684:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3650:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "3650:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3643:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:8"
																},
																"nativeSrc": "3643:26:8",
																"nodeType": "YulFunctionCall",
																"src": "3643:26:8"
															},
															"nativeSrc": "3640:81:8",
															"nodeType": "YulIf",
															"src": "3640:81:8"
														},
														{
															"body": {
																"nativeSrc": "3773:42:8",
																"nodeType": "YulBlock",
																"src": "3773:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3787:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "3787:16:8"
																			},
																			"nativeSrc": "3787:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3787:18:8"
																		},
																		"nativeSrc": "3787:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3787:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3737:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "3737:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3760:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3760:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3768:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3757:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3757:2:8"
																		},
																		"nativeSrc": "3757:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3757:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3734:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3734:2:8"
																},
																"nativeSrc": "3734:38:8",
																"nodeType": "YulFunctionCall",
																"src": "3734:38:8"
															},
															"nativeSrc": "3731:84:8",
															"nodeType": "YulIf",
															"src": "3731:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3501:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3536:4:8",
														"nodeType": "YulTypedName",
														"src": "3536:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"src": "3501:320:8"
											},
											{
												"body": {
													"nativeSrc": "3881:87:8",
													"nodeType": "YulBlock",
													"src": "3881:87:8",
													"statements": [
														{
															"nativeSrc": "3891:11:8",
															"nodeType": "YulAssignment",
															"src": "3891:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "3899:3:8",
																"nodeType": "YulIdentifier",
																"src": "3899:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3891:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3891:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3919:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3919:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3922:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3922:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3912:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:8"
																},
																"nativeSrc": "3912:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3912:14:8"
															},
															"nativeSrc": "3912:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "3912:14:8"
														},
														{
															"nativeSrc": "3935:26:8",
															"nodeType": "YulAssignment",
															"src": "3935:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3953:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3953:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3956:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3956:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3943:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3943:9:8"
																},
																"nativeSrc": "3943:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3943:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3935:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3935:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3827:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3868:3:8",
														"nodeType": "YulTypedName",
														"src": "3868:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3876:4:8",
														"nodeType": "YulTypedName",
														"src": "3876:4:8",
														"type": ""
													}
												],
												"src": "3827:141:8"
											},
											{
												"body": {
													"nativeSrc": "4018:49:8",
													"nodeType": "YulBlock",
													"src": "4018:49:8",
													"statements": [
														{
															"nativeSrc": "4028:33:8",
															"nodeType": "YulAssignment",
															"src": "4028:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4046:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4046:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4053:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4053:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4042:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4042:3:8"
																		},
																		"nativeSrc": "4042:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4042:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4058:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4058:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4038:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4038:3:8"
																},
																"nativeSrc": "4038:23:8",
																"nodeType": "YulFunctionCall",
																"src": "4038:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4028:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4028:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3974:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4001:5:8",
														"nodeType": "YulTypedName",
														"src": "4001:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4011:6:8",
														"nodeType": "YulTypedName",
														"src": "4011:6:8",
														"type": ""
													}
												],
												"src": "3974:93:8"
											},
											{
												"body": {
													"nativeSrc": "4126:54:8",
													"nodeType": "YulBlock",
													"src": "4126:54:8",
													"statements": [
														{
															"nativeSrc": "4136:37:8",
															"nodeType": "YulAssignment",
															"src": "4136:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4161:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4161:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4167:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4167:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4157:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4157:3:8"
																},
																"nativeSrc": "4157:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4157:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4136:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4136:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4073:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4101:4:8",
														"nodeType": "YulTypedName",
														"src": "4101:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4107:5:8",
														"nodeType": "YulTypedName",
														"src": "4107:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4117:8:8",
														"nodeType": "YulTypedName",
														"src": "4117:8:8",
														"type": ""
													}
												],
												"src": "4073:107:8"
											},
											{
												"body": {
													"nativeSrc": "4262:317:8",
													"nodeType": "YulBlock",
													"src": "4262:317:8",
													"statements": [
														{
															"nativeSrc": "4272:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4272:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4293:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "4293:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4305:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4305:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4289:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4289:3:8"
																},
																"nativeSrc": "4289:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4289:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4276:9:8",
																	"nodeType": "YulTypedName",
																	"src": "4276:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4316:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4316:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4347:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4347:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4358:66:8",
																		"nodeType": "YulLiteral",
																		"src": "4358:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4328:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4328:18:8"
																},
																"nativeSrc": "4328:97:8",
																"nodeType": "YulFunctionCall",
																"src": "4328:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4320:4:8",
																	"nodeType": "YulTypedName",
																	"src": "4320:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4434:51:8",
															"nodeType": "YulAssignment",
															"src": "4434:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4465:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4465:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4476:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "4476:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4446:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4446:18:8"
																},
																"nativeSrc": "4446:39:8",
																"nodeType": "YulFunctionCall",
																"src": "4446:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4434:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4434:8:8"
																}
															]
														},
														{
															"nativeSrc": "4494:30:8",
															"nodeType": "YulAssignment",
															"src": "4494:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4507:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4507:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4518:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4518:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4514:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4514:3:8"
																		},
																		"nativeSrc": "4514:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4514:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4503:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4503:3:8"
																},
																"nativeSrc": "4503:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4503:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4494:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4494:5:8"
																}
															]
														},
														{
															"nativeSrc": "4533:40:8",
															"nodeType": "YulAssignment",
															"src": "4533:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4546:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4546:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4557:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "4557:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4567:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4567:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4553:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4553:3:8"
																		},
																		"nativeSrc": "4553:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4553:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4543:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4543:2:8"
																},
																"nativeSrc": "4543:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4543:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4533:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4533:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4186:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4223:5:8",
														"nodeType": "YulTypedName",
														"src": "4223:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4230:10:8",
														"nodeType": "YulTypedName",
														"src": "4230:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4242:8:8",
														"nodeType": "YulTypedName",
														"src": "4242:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4255:6:8",
														"nodeType": "YulTypedName",
														"src": "4255:6:8",
														"type": ""
													}
												],
												"src": "4186:393:8"
											},
											{
												"body": {
													"nativeSrc": "4617:28:8",
													"nodeType": "YulBlock",
													"src": "4617:28:8",
													"statements": [
														{
															"nativeSrc": "4627:12:8",
															"nodeType": "YulAssignment",
															"src": "4627:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "4634:5:8",
																"nodeType": "YulIdentifier",
																"src": "4634:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4627:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4585:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4603:5:8",
														"nodeType": "YulTypedName",
														"src": "4603:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4613:3:8",
														"nodeType": "YulTypedName",
														"src": "4613:3:8",
														"type": ""
													}
												],
												"src": "4585:60:8"
											},
											{
												"body": {
													"nativeSrc": "4711:82:8",
													"nodeType": "YulBlock",
													"src": "4711:82:8",
													"statements": [
														{
															"nativeSrc": "4721:66:8",
															"nodeType": "YulAssignment",
															"src": "4721:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4779:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4779:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4761:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "4761:17:8"
																				},
																				"nativeSrc": "4761:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4761:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4752:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "4752:8:8"
																		},
																		"nativeSrc": "4752:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4734:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4734:17:8"
																},
																"nativeSrc": "4734:53:8",
																"nodeType": "YulFunctionCall",
																"src": "4734:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4721:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4721:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4651:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4691:5:8",
														"nodeType": "YulTypedName",
														"src": "4691:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4701:9:8",
														"nodeType": "YulTypedName",
														"src": "4701:9:8",
														"type": ""
													}
												],
												"src": "4651:142:8"
											},
											{
												"body": {
													"nativeSrc": "4846:28:8",
													"nodeType": "YulBlock",
													"src": "4846:28:8",
													"statements": [
														{
															"nativeSrc": "4856:12:8",
															"nodeType": "YulAssignment",
															"src": "4856:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "4863:5:8",
																"nodeType": "YulIdentifier",
																"src": "4863:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4856:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4856:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4799:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4832:5:8",
														"nodeType": "YulTypedName",
														"src": "4832:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4842:3:8",
														"nodeType": "YulTypedName",
														"src": "4842:3:8",
														"type": ""
													}
												],
												"src": "4799:75:8"
											},
											{
												"body": {
													"nativeSrc": "4956:193:8",
													"nodeType": "YulBlock",
													"src": "4956:193:8",
													"statements": [
														{
															"nativeSrc": "4966:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4966:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5021:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "5021:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4990:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4990:30:8"
																},
																"nativeSrc": "4990:39:8",
																"nodeType": "YulFunctionCall",
																"src": "4990:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4970:16:8",
																	"nodeType": "YulTypedName",
																	"src": "4970:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5045:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5045:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5085:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "5085:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5079:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5079:5:8"
																				},
																				"nativeSrc": "5079:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5079:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5092:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5124:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "5124:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5100:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "5100:23:8"
																				},
																				"nativeSrc": "5100:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5100:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5051:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "5051:27:8"
																		},
																		"nativeSrc": "5051:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5051:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5038:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5038:6:8"
																},
																"nativeSrc": "5038:105:8",
																"nodeType": "YulFunctionCall",
																"src": "5038:105:8"
															},
															"nativeSrc": "5038:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "5038:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4880:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4933:4:8",
														"nodeType": "YulTypedName",
														"src": "4933:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4939:6:8",
														"nodeType": "YulTypedName",
														"src": "4939:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4947:7:8",
														"nodeType": "YulTypedName",
														"src": "4947:7:8",
														"type": ""
													}
												],
												"src": "4880:269:8"
											},
											{
												"body": {
													"nativeSrc": "5204:24:8",
													"nodeType": "YulBlock",
													"src": "5204:24:8",
													"statements": [
														{
															"nativeSrc": "5214:8:8",
															"nodeType": "YulAssignment",
															"src": "5214:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5221:1:8",
																"nodeType": "YulLiteral",
																"src": "5221:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5214:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5214:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5155:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5200:3:8",
														"nodeType": "YulTypedName",
														"src": "5200:3:8",
														"type": ""
													}
												],
												"src": "5155:73:8"
											},
											{
												"body": {
													"nativeSrc": "5287:136:8",
													"nodeType": "YulBlock",
													"src": "5287:136:8",
													"statements": [
														{
															"nativeSrc": "5297:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5297:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5311:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5311:30:8"
																},
																"nativeSrc": "5311:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5311:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5301:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5301:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5396:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5396:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5402:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5402:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5410:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5410:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5352:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5352:43:8"
																},
																"nativeSrc": "5352:65:8",
																"nodeType": "YulFunctionCall",
																"src": "5352:65:8"
															},
															"nativeSrc": "5352:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "5352:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5234:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5273:4:8",
														"nodeType": "YulTypedName",
														"src": "5273:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5279:6:8",
														"nodeType": "YulTypedName",
														"src": "5279:6:8",
														"type": ""
													}
												],
												"src": "5234:189:8"
											},
											{
												"body": {
													"nativeSrc": "5479:136:8",
													"nodeType": "YulBlock",
													"src": "5479:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5546:63:8",
																"nodeType": "YulBlock",
																"src": "5546:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5590:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5590:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5597:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5597:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5560:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "5560:29:8"
																			},
																			"nativeSrc": "5560:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5560:39:8"
																		},
																		"nativeSrc": "5560:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5560:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5499:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5499:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5506:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5506:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5496:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5496:2:8"
																},
																"nativeSrc": "5496:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5496:14:8"
															},
															"nativeSrc": "5489:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5511:26:8",
																"nodeType": "YulBlock",
																"src": "5511:26:8",
																"statements": [
																	{
																		"nativeSrc": "5513:22:8",
																		"nodeType": "YulAssignment",
																		"src": "5513:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5526:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5526:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5533:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5533:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5522:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5522:3:8"
																			},
																			"nativeSrc": "5522:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5522:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5513:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5513:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5493:2:8",
																"nodeType": "YulBlock",
																"src": "5493:2:8",
																"statements": []
															},
															"src": "5489:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5429:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5467:5:8",
														"nodeType": "YulTypedName",
														"src": "5467:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5474:3:8",
														"nodeType": "YulTypedName",
														"src": "5474:3:8",
														"type": ""
													}
												],
												"src": "5429:186:8"
											},
											{
												"body": {
													"nativeSrc": "5700:464:8",
													"nodeType": "YulBlock",
													"src": "5700:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5726:431:8",
																"nodeType": "YulBlock",
																"src": "5726:431:8",
																"statements": [
																	{
																		"nativeSrc": "5740:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5740:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5788:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5788:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5756:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "5756:31:8"
																			},
																			"nativeSrc": "5756:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5744:8:8",
																				"nodeType": "YulTypedName",
																				"src": "5744:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5807:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5807:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5830:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "5830:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5858:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5858:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5840:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "5840:17:8"
																					},
																					"nativeSrc": "5840:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5840:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5826:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5826:3:8"
																			},
																			"nativeSrc": "5826:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5826:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5811:11:8",
																				"nodeType": "YulTypedName",
																				"src": "5811:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6027:27:8",
																			"nodeType": "YulBlock",
																			"src": "6027:27:8",
																			"statements": [
																				{
																					"nativeSrc": "6029:23:8",
																					"nodeType": "YulAssignment",
																					"src": "6029:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6044:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "6044:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6029:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "6029:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6011:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6011:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6023:2:8",
																					"nodeType": "YulLiteral",
																					"src": "6023:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6008:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "6008:2:8"
																			},
																			"nativeSrc": "6008:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6008:18:8"
																		},
																		"nativeSrc": "6005:49:8",
																		"nodeType": "YulIf",
																		"src": "6005:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6096:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "6096:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6113:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "6113:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6141:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6141:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6123:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "6123:17:8"
																							},
																							"nativeSrc": "6123:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6123:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6109:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6109:3:8"
																					},
																					"nativeSrc": "6109:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6109:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6067:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "6067:28:8"
																			},
																			"nativeSrc": "6067:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6067:80:8"
																		},
																		"nativeSrc": "6067:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6067:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5717:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5717:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5722:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5722:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5714:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5714:2:8"
																},
																"nativeSrc": "5714:11:8",
																"nodeType": "YulFunctionCall",
																"src": "5714:11:8"
															},
															"nativeSrc": "5711:446:8",
															"nodeType": "YulIf",
															"src": "5711:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5621:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5676:5:8",
														"nodeType": "YulTypedName",
														"src": "5676:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5683:3:8",
														"nodeType": "YulTypedName",
														"src": "5683:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5688:10:8",
														"nodeType": "YulTypedName",
														"src": "5688:10:8",
														"type": ""
													}
												],
												"src": "5621:543:8"
											},
											{
												"body": {
													"nativeSrc": "6233:54:8",
													"nodeType": "YulBlock",
													"src": "6233:54:8",
													"statements": [
														{
															"nativeSrc": "6243:37:8",
															"nodeType": "YulAssignment",
															"src": "6243:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6268:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6268:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6274:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6274:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6264:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6264:3:8"
																},
																"nativeSrc": "6264:16:8",
																"nodeType": "YulFunctionCall",
																"src": "6264:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6243:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "6243:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6170:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6208:4:8",
														"nodeType": "YulTypedName",
														"src": "6208:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6214:5:8",
														"nodeType": "YulTypedName",
														"src": "6214:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6224:8:8",
														"nodeType": "YulTypedName",
														"src": "6224:8:8",
														"type": ""
													}
												],
												"src": "6170:117:8"
											},
											{
												"body": {
													"nativeSrc": "6344:118:8",
													"nodeType": "YulBlock",
													"src": "6344:118:8",
													"statements": [
														{
															"nativeSrc": "6354:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6354:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6403:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6403:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6406:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6406:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6399:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6399:3:8"
																				},
																				"nativeSrc": "6399:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6399:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6418:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6418:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6414:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6414:3:8"
																				},
																				"nativeSrc": "6414:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6414:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6370:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "6370:28:8"
																		},
																		"nativeSrc": "6370:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6370:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6366:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6366:3:8"
																},
																"nativeSrc": "6366:56:8",
																"nodeType": "YulFunctionCall",
																"src": "6366:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6358:4:8",
																	"nodeType": "YulTypedName",
																	"src": "6358:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6431:25:8",
															"nodeType": "YulAssignment",
															"src": "6431:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6445:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6445:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6451:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6451:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6441:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6441:3:8"
																},
																"nativeSrc": "6441:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6441:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6431:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6431:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6293:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6321:4:8",
														"nodeType": "YulTypedName",
														"src": "6321:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6327:5:8",
														"nodeType": "YulTypedName",
														"src": "6327:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6337:6:8",
														"nodeType": "YulTypedName",
														"src": "6337:6:8",
														"type": ""
													}
												],
												"src": "6293:169:8"
											},
											{
												"body": {
													"nativeSrc": "6548:214:8",
													"nodeType": "YulBlock",
													"src": "6548:214:8",
													"statements": [
														{
															"nativeSrc": "6681:37:8",
															"nodeType": "YulAssignment",
															"src": "6681:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6708:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6708:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6714:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6714:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6689:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "6689:18:8"
																},
																"nativeSrc": "6689:29:8",
																"nodeType": "YulFunctionCall",
																"src": "6689:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6681:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6681:4:8"
																}
															]
														},
														{
															"nativeSrc": "6727:29:8",
															"nodeType": "YulAssignment",
															"src": "6727:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6738:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6738:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6748:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6748:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6751:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6751:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6744:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6744:3:8"
																		},
																		"nativeSrc": "6744:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6744:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6735:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6735:2:8"
																},
																"nativeSrc": "6735:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6735:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6727:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6727:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6467:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6529:4:8",
														"nodeType": "YulTypedName",
														"src": "6529:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6535:3:8",
														"nodeType": "YulTypedName",
														"src": "6535:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6543:4:8",
														"nodeType": "YulTypedName",
														"src": "6543:4:8",
														"type": ""
													}
												],
												"src": "6467:295:8"
											},
											{
												"body": {
													"nativeSrc": "6859:1303:8",
													"nodeType": "YulBlock",
													"src": "6859:1303:8",
													"statements": [
														{
															"nativeSrc": "6870:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6870:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6917:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6917:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6884:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "6884:32:8"
																},
																"nativeSrc": "6884:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6884:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6874:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6874:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7006:22:8",
																"nodeType": "YulBlock",
																"src": "7006:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7008:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7008:16:8"
																			},
																			"nativeSrc": "7008:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7008:18:8"
																		},
																		"nativeSrc": "7008:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7008:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6978:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6978:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6986:18:8",
																		"nodeType": "YulLiteral",
																		"src": "6986:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6975:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6975:2:8"
																},
																"nativeSrc": "6975:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6975:30:8"
															},
															"nativeSrc": "6972:56:8",
															"nodeType": "YulIf",
															"src": "6972:56:8"
														},
														{
															"nativeSrc": "7038:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7038:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7084:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7084:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7078:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7078:5:8"
																		},
																		"nativeSrc": "7078:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7078:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7052:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "7052:25:8"
																},
																"nativeSrc": "7052:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7052:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7042:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7042:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7183:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7183:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7189:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7189:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7197:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7197:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7137:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "7137:45:8"
																},
																"nativeSrc": "7137:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7137:67:8"
															},
															"nativeSrc": "7137:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "7137:67:8"
														},
														{
															"nativeSrc": "7214:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7214:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7231:1:8",
																"nodeType": "YulLiteral",
																"src": "7231:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7218:9:8",
																	"nodeType": "YulTypedName",
																	"src": "7218:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7242:17:8",
															"nodeType": "YulAssignment",
															"src": "7242:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7255:4:8",
																"nodeType": "YulLiteral",
																"src": "7255:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7242:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7242:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7306:611:8",
																		"nodeType": "YulBlock",
																		"src": "7306:611:8",
																		"statements": [
																			{
																				"nativeSrc": "7320:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7320:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7339:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "7339:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7351:4:8",
																									"nodeType": "YulLiteral",
																									"src": "7351:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7347:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "7347:3:8"
																							},
																							"nativeSrc": "7347:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7347:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7335:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7335:3:8"
																					},
																					"nativeSrc": "7335:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7335:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7324:7:8",
																						"nodeType": "YulTypedName",
																						"src": "7324:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7371:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7371:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7417:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "7417:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7385:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "7385:31:8"
																					},
																					"nativeSrc": "7385:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7385:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7375:6:8",
																						"nodeType": "YulTypedName",
																						"src": "7375:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7435:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7435:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7444:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7444:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7439:1:8",
																						"nodeType": "YulTypedName",
																						"src": "7439:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7503:163:8",
																					"nodeType": "YulBlock",
																					"src": "7503:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7528:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "7528:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7546:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "7546:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7551:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "7551:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7542:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "7542:3:8"
																												},
																												"nativeSrc": "7542:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "7542:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7536:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "7536:5:8"
																										},
																										"nativeSrc": "7536:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "7536:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7521:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "7521:6:8"
																								},
																								"nativeSrc": "7521:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7521:42:8"
																							},
																							"nativeSrc": "7521:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "7521:42:8"
																						},
																						{
																							"nativeSrc": "7580:24:8",
																							"nodeType": "YulAssignment",
																							"src": "7580:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7594:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "7594:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7602:1:8",
																										"nodeType": "YulLiteral",
																										"src": "7602:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7590:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7590:3:8"
																								},
																								"nativeSrc": "7590:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7590:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7580:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "7580:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7621:31:8",
																							"nodeType": "YulAssignment",
																							"src": "7621:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7638:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "7638:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7649:2:8",
																										"nodeType": "YulLiteral",
																										"src": "7649:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7634:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7634:3:8"
																								},
																								"nativeSrc": "7634:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7634:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7621:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "7621:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7469:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "7469:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7472:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "7472:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7466:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "7466:2:8"
																					},
																					"nativeSrc": "7466:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7466:14:8"
																				},
																				"nativeSrc": "7458:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7481:21:8",
																					"nodeType": "YulBlock",
																					"src": "7481:21:8",
																					"statements": [
																						{
																							"nativeSrc": "7483:17:8",
																							"nodeType": "YulAssignment",
																							"src": "7483:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7492:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "7492:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7495:4:8",
																										"nodeType": "YulLiteral",
																										"src": "7495:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7488:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7488:3:8"
																								},
																								"nativeSrc": "7488:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7488:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7483:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "7483:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7462:3:8",
																					"nodeType": "YulBlock",
																					"src": "7462:3:8",
																					"statements": []
																				},
																				"src": "7458:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "7702:156:8",
																					"nodeType": "YulBlock",
																					"src": "7702:156:8",
																					"statements": [
																						{
																							"nativeSrc": "7720:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7720:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7747:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "7747:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7752:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "7752:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7743:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "7743:3:8"
																										},
																										"nativeSrc": "7743:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "7743:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7737:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "7737:5:8"
																								},
																								"nativeSrc": "7737:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7737:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7724:9:8",
																									"nodeType": "YulTypedName",
																									"src": "7724:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7787:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "7787:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7814:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "7814:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7829:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "7829:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7837:4:8",
																														"nodeType": "YulLiteral",
																														"src": "7837:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7825:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "7825:3:8"
																												},
																												"nativeSrc": "7825:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "7825:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7795:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "7795:18:8"
																										},
																										"nativeSrc": "7795:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "7795:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7780:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "7780:6:8"
																								},
																								"nativeSrc": "7780:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7780:64:8"
																							},
																							"nativeSrc": "7780:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "7780:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7685:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "7685:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7694:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "7694:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7682:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "7682:2:8"
																					},
																					"nativeSrc": "7682:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7682:19:8"
																				},
																				"nativeSrc": "7679:179:8",
																				"nodeType": "YulIf",
																				"src": "7679:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7878:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "7878:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7892:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "7892:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7900:1:8",
																											"nodeType": "YulLiteral",
																											"src": "7900:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7888:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "7888:3:8"
																									},
																									"nativeSrc": "7888:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "7888:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7904:1:8",
																									"nodeType": "YulLiteral",
																									"src": "7904:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7884:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "7884:3:8"
																							},
																							"nativeSrc": "7884:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7884:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7871:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7871:6:8"
																					},
																					"nativeSrc": "7871:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7871:36:8"
																				},
																				"nativeSrc": "7871:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "7871:36:8"
																			}
																		]
																	},
																	"nativeSrc": "7299:618:8",
																	"nodeType": "YulCase",
																	"src": "7299:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7304:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7304:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7934:222:8",
																		"nodeType": "YulBlock",
																		"src": "7934:222:8",
																		"statements": [
																			{
																				"nativeSrc": "7948:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7948:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7961:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7961:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7952:5:8",
																						"nodeType": "YulTypedName",
																						"src": "7952:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7985:67:8",
																					"nodeType": "YulBlock",
																					"src": "7985:67:8",
																					"statements": [
																						{
																							"nativeSrc": "8003:35:8",
																							"nodeType": "YulAssignment",
																							"src": "8003:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8022:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8022:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8027:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8027:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8018:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8018:3:8"
																										},
																										"nativeSrc": "8018:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8018:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8012:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8012:5:8"
																								},
																								"nativeSrc": "8012:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8012:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8003:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8003:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7978:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7978:6:8"
																				},
																				"nativeSrc": "7975:77:8",
																				"nodeType": "YulIf",
																				"src": "7975:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8072:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8072:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8131:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8131:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8138:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8138:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8078:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "8078:52:8"
																							},
																							"nativeSrc": "8078:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8078:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8065:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8065:6:8"
																					},
																					"nativeSrc": "8065:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8065:81:8"
																				},
																				"nativeSrc": "8065:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8065:81:8"
																			}
																		]
																	},
																	"nativeSrc": "7926:230:8",
																	"nodeType": "YulCase",
																	"src": "7926:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7279:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7279:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7287:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7287:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7276:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7276:2:8"
																},
																"nativeSrc": "7276:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7276:14:8"
															},
															"nativeSrc": "7269:887:8",
															"nodeType": "YulSwitch",
															"src": "7269:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6767:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6848:4:8",
														"nodeType": "YulTypedName",
														"src": "6848:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6854:3:8",
														"nodeType": "YulTypedName",
														"src": "6854:3:8",
														"type": ""
													}
												],
												"src": "6767:1395:8"
											},
											{
												"body": {
													"nativeSrc": "8221:32:8",
													"nodeType": "YulBlock",
													"src": "8221:32:8",
													"statements": [
														{
															"nativeSrc": "8231:16:8",
															"nodeType": "YulAssignment",
															"src": "8231:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "8242:5:8",
																"nodeType": "YulIdentifier",
																"src": "8242:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8231:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8231:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "8168:85:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8203:5:8",
														"nodeType": "YulTypedName",
														"src": "8203:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8213:7:8",
														"nodeType": "YulTypedName",
														"src": "8213:7:8",
														"type": ""
													}
												],
												"src": "8168:85:8"
											},
											{
												"body": {
													"nativeSrc": "8327:90:8",
													"nodeType": "YulBlock",
													"src": "8327:90:8",
													"statements": [
														{
															"nativeSrc": "8337:74:8",
															"nodeType": "YulAssignment",
															"src": "8337:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8403:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8403:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "8377:25:8",
																					"nodeType": "YulIdentifier",
																					"src": "8377:25:8"
																				},
																				"nativeSrc": "8377:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8377:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "8368:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "8368:8:8"
																		},
																		"nativeSrc": "8368:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8368:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8350:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8350:17:8"
																},
																"nativeSrc": "8350:61:8",
																"nodeType": "YulFunctionCall",
																"src": "8350:61:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8337:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8337:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "8259:158:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8307:5:8",
														"nodeType": "YulTypedName",
														"src": "8307:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8317:9:8",
														"nodeType": "YulTypedName",
														"src": "8317:9:8",
														"type": ""
													}
												],
												"src": "8259:158:8"
											},
											{
												"body": {
													"nativeSrc": "8496:74:8",
													"nodeType": "YulBlock",
													"src": "8496:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8513:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8513:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8557:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8557:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "8518:38:8",
																			"nodeType": "YulIdentifier",
																			"src": "8518:38:8"
																		},
																		"nativeSrc": "8518:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8518:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8506:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:8"
																},
																"nativeSrc": "8506:58:8",
																"nodeType": "YulFunctionCall",
																"src": "8506:58:8"
															},
															"nativeSrc": "8506:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "8506:58:8"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "8423:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8484:5:8",
														"nodeType": "YulTypedName",
														"src": "8484:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8491:3:8",
														"nodeType": "YulTypedName",
														"src": "8491:3:8",
														"type": ""
													}
												],
												"src": "8423:147:8"
											},
											{
												"body": {
													"nativeSrc": "8682:132:8",
													"nodeType": "YulBlock",
													"src": "8682:132:8",
													"statements": [
														{
															"nativeSrc": "8692:26:8",
															"nodeType": "YulAssignment",
															"src": "8692:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8704:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8704:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8715:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8715:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8700:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8700:3:8"
																},
																"nativeSrc": "8700:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8700:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8692:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8692:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8780:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8780:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8793:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8793:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8804:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8804:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8789:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8789:3:8"
																		},
																		"nativeSrc": "8789:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8789:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "8728:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "8728:51:8"
																},
																"nativeSrc": "8728:79:8",
																"nodeType": "YulFunctionCall",
																"src": "8728:79:8"
															},
															"nativeSrc": "8728:79:8",
															"nodeType": "YulExpressionStatement",
															"src": "8728:79:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8576:238:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8654:9:8",
														"nodeType": "YulTypedName",
														"src": "8654:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8666:6:8",
														"nodeType": "YulTypedName",
														"src": "8666:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8677:4:8",
														"nodeType": "YulTypedName",
														"src": "8677:4:8",
														"type": ""
													}
												],
												"src": "8576:238:8"
											},
											{
												"body": {
													"nativeSrc": "8865:81:8",
													"nodeType": "YulBlock",
													"src": "8865:81:8",
													"statements": [
														{
															"nativeSrc": "8875:65:8",
															"nodeType": "YulAssignment",
															"src": "8875:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8890:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8890:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8897:42:8",
																		"nodeType": "YulLiteral",
																		"src": "8897:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8886:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8886:3:8"
																},
																"nativeSrc": "8886:54:8",
																"nodeType": "YulFunctionCall",
																"src": "8886:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8875:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8875:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8820:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8847:5:8",
														"nodeType": "YulTypedName",
														"src": "8847:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8857:7:8",
														"nodeType": "YulTypedName",
														"src": "8857:7:8",
														"type": ""
													}
												],
												"src": "8820:126:8"
											},
											{
												"body": {
													"nativeSrc": "8997:51:8",
													"nodeType": "YulBlock",
													"src": "8997:51:8",
													"statements": [
														{
															"nativeSrc": "9007:35:8",
															"nodeType": "YulAssignment",
															"src": "9007:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9036:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9036:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9018:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9018:17:8"
																},
																"nativeSrc": "9018:24:8",
																"nodeType": "YulFunctionCall",
																"src": "9018:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9007:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9007:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8952:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8979:5:8",
														"nodeType": "YulTypedName",
														"src": "8979:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8989:7:8",
														"nodeType": "YulTypedName",
														"src": "8989:7:8",
														"type": ""
													}
												],
												"src": "8952:96:8"
											},
											{
												"body": {
													"nativeSrc": "9119:53:8",
													"nodeType": "YulBlock",
													"src": "9119:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9136:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9136:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9159:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9159:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9141:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9141:17:8"
																		},
																		"nativeSrc": "9141:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9129:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9129:6:8"
																},
																"nativeSrc": "9129:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9129:37:8"
															},
															"nativeSrc": "9129:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "9129:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9054:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9107:5:8",
														"nodeType": "YulTypedName",
														"src": "9107:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9114:3:8",
														"nodeType": "YulTypedName",
														"src": "9114:3:8",
														"type": ""
													}
												],
												"src": "9054:118:8"
											},
											{
												"body": {
													"nativeSrc": "9276:124:8",
													"nodeType": "YulBlock",
													"src": "9276:124:8",
													"statements": [
														{
															"nativeSrc": "9286:26:8",
															"nodeType": "YulAssignment",
															"src": "9286:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9298:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9298:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9309:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9309:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9294:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9294:3:8"
																},
																"nativeSrc": "9294:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9294:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9286:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9286:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9366:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9366:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9379:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9379:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9390:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9390:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9375:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9375:3:8"
																		},
																		"nativeSrc": "9375:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9375:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9322:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9322:43:8"
																},
																"nativeSrc": "9322:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9322:71:8"
															},
															"nativeSrc": "9322:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9322:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9178:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9248:9:8",
														"nodeType": "YulTypedName",
														"src": "9248:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9260:6:8",
														"nodeType": "YulTypedName",
														"src": "9260:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9271:4:8",
														"nodeType": "YulTypedName",
														"src": "9271:4:8",
														"type": ""
													}
												],
												"src": "9178:222:8"
											},
											{
												"body": {
													"nativeSrc": "9471:53:8",
													"nodeType": "YulBlock",
													"src": "9471:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9488:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9488:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9511:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9511:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9493:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9493:17:8"
																		},
																		"nativeSrc": "9493:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9493:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9481:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9481:6:8"
																},
																"nativeSrc": "9481:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9481:37:8"
															},
															"nativeSrc": "9481:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "9481:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9406:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9459:5:8",
														"nodeType": "YulTypedName",
														"src": "9459:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9466:3:8",
														"nodeType": "YulTypedName",
														"src": "9466:3:8",
														"type": ""
													}
												],
												"src": "9406:118:8"
											},
											{
												"body": {
													"nativeSrc": "9656:206:8",
													"nodeType": "YulBlock",
													"src": "9656:206:8",
													"statements": [
														{
															"nativeSrc": "9666:26:8",
															"nodeType": "YulAssignment",
															"src": "9666:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9678:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9678:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9689:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9689:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9674:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9674:3:8"
																},
																"nativeSrc": "9674:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9674:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9666:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9666:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9746:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9746:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9759:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9759:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9770:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9770:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9755:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9755:3:8"
																		},
																		"nativeSrc": "9755:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9755:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9702:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9702:43:8"
																},
																"nativeSrc": "9702:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9702:71:8"
															},
															"nativeSrc": "9702:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9702:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9827:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9827:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9840:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9840:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9851:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9851:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9836:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9836:3:8"
																		},
																		"nativeSrc": "9836:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9836:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9783:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9783:43:8"
																},
																"nativeSrc": "9783:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9783:72:8"
															},
															"nativeSrc": "9783:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9783:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9530:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9620:9:8",
														"nodeType": "YulTypedName",
														"src": "9620:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9632:6:8",
														"nodeType": "YulTypedName",
														"src": "9632:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9640:6:8",
														"nodeType": "YulTypedName",
														"src": "9640:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9651:4:8",
														"nodeType": "YulTypedName",
														"src": "9651:4:8",
														"type": ""
													}
												],
												"src": "9530:332:8"
											},
											{
												"body": {
													"nativeSrc": "9912:147:8",
													"nodeType": "YulBlock",
													"src": "9912:147:8",
													"statements": [
														{
															"nativeSrc": "9922:25:8",
															"nodeType": "YulAssignment",
															"src": "9922:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9945:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9945:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9927:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9927:17:8"
																},
																"nativeSrc": "9927:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9927:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9922:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9922:1:8"
																}
															]
														},
														{
															"nativeSrc": "9956:25:8",
															"nodeType": "YulAssignment",
															"src": "9956:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9979:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9979:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9961:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9961:17:8"
																},
																"nativeSrc": "9961:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9961:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9956:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9956:1:8"
																}
															]
														},
														{
															"nativeSrc": "9990:16:8",
															"nodeType": "YulAssignment",
															"src": "9990:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10001:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10001:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10004:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10004:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9997:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9997:3:8"
																},
																"nativeSrc": "9997:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9997:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9990:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9990:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10030:22:8",
																"nodeType": "YulBlock",
																"src": "10030:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10032:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10032:16:8"
																			},
																			"nativeSrc": "10032:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10032:18:8"
																		},
																		"nativeSrc": "10032:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10032:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10022:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10022:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10025:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10025:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10019:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10019:2:8"
																},
																"nativeSrc": "10019:10:8",
																"nodeType": "YulFunctionCall",
																"src": "10019:10:8"
															},
															"nativeSrc": "10016:36:8",
															"nodeType": "YulIf",
															"src": "10016:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9868:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9899:1:8",
														"nodeType": "YulTypedName",
														"src": "9899:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9902:1:8",
														"nodeType": "YulTypedName",
														"src": "9902:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9908:3:8",
														"nodeType": "YulTypedName",
														"src": "9908:3:8",
														"type": ""
													}
												],
												"src": "9868:191:8"
											},
											{
												"body": {
													"nativeSrc": "10219:288:8",
													"nodeType": "YulBlock",
													"src": "10219:288:8",
													"statements": [
														{
															"nativeSrc": "10229:26:8",
															"nodeType": "YulAssignment",
															"src": "10229:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10241:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10241:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10252:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10252:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10237:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10237:3:8"
																},
																"nativeSrc": "10237:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10237:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10229:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10229:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10309:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10309:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10322:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10322:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10333:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10333:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10318:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10318:3:8"
																		},
																		"nativeSrc": "10318:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10318:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10265:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10265:43:8"
																},
																"nativeSrc": "10265:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10265:71:8"
															},
															"nativeSrc": "10265:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10265:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10390:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10390:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10403:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10403:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10414:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10414:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10399:3:8"
																		},
																		"nativeSrc": "10399:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10399:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10346:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10346:43:8"
																},
																"nativeSrc": "10346:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10346:72:8"
															},
															"nativeSrc": "10346:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10346:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10472:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10472:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10485:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10485:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10496:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10496:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10481:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10481:3:8"
																		},
																		"nativeSrc": "10481:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10481:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10428:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10428:43:8"
																},
																"nativeSrc": "10428:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10428:72:8"
															},
															"nativeSrc": "10428:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10428:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10065:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10175:9:8",
														"nodeType": "YulTypedName",
														"src": "10175:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10187:6:8",
														"nodeType": "YulTypedName",
														"src": "10187:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10195:6:8",
														"nodeType": "YulTypedName",
														"src": "10195:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10203:6:8",
														"nodeType": "YulTypedName",
														"src": "10203:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10214:4:8",
														"nodeType": "YulTypedName",
														"src": "10214:4:8",
														"type": ""
													}
												],
												"src": "10065:442:8"
											},
											{
												"body": {
													"nativeSrc": "10611:124:8",
													"nodeType": "YulBlock",
													"src": "10611:124:8",
													"statements": [
														{
															"nativeSrc": "10621:26:8",
															"nodeType": "YulAssignment",
															"src": "10621:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10633:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10633:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10644:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10644:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10629:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10629:3:8"
																},
																"nativeSrc": "10629:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10629:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10621:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10621:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10701:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10701:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10714:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10714:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10725:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10725:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10710:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10710:3:8"
																		},
																		"nativeSrc": "10710:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10710:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10657:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10657:43:8"
																},
																"nativeSrc": "10657:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10657:71:8"
															},
															"nativeSrc": "10657:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10657:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10513:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10583:9:8",
														"nodeType": "YulTypedName",
														"src": "10583:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10595:6:8",
														"nodeType": "YulTypedName",
														"src": "10595:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10606:4:8",
														"nodeType": "YulTypedName",
														"src": "10606:4:8",
														"type": ""
													}
												],
												"src": "10513:222:8"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405264012a05f2006007556113886008553480156200001f575f80fd5b50620000306200023060201b60201c565b60ff16600a6200004191906200073d565b6007546200005091906200078d565b6040518060400160405280600581526020017f4d6f6e65740000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d4e5400000000000000000000000000000000000000000000000000000000008152508160039081620000cd919062000a32565b508060049081620000df919062000a32565b5050505f810362000129575f6040517f392e1e2700000000000000000000000000000000000000000000000000000000815260040162000120919062000b57565b60405180910390fd5b8060808181525050503360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d0d5e3db44de05e9f294bb0a3beeaf030de24ada60055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200022a60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620001fc6200023060201b60201c565b60ff16600a6200020d91906200073d565b639502f9006200021e91906200078d565b6200023860201b60201c565b62000c9c565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002ab575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002a2919062000bb5565b60405180910390fd5b620002be5f8383620002c260201b60201c565b5050565b620002d58383836200038160201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200037c575f6200031a620005a560201b60201c565b90505f6200032d620005ae60201b60201c565b905081811115620003795780826040517f9e79f8540000000000000000000000000000000000000000000000000000000081526004016200037092919062000be1565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003d5578060025f828254620003c8919062000c0c565b92505081905550620004a6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000461578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004589392919062000c46565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004ef578060025f828254039250508190555062000539565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000598919062000c81565b60405180910390a3505050565b5f608051905090565b5f600254905090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156200064157808604811115620006195762000618620005b7565b5b6001851615620006295780820291505b80810290506200063985620005e4565b9450620005f9565b94509492505050565b5f826200065b57600190506200072d565b816200066a575f90506200072d565b81600181146200068357600281146200068e57620006c4565b60019150506200072d565b60ff841115620006a357620006a2620005b7565b5b8360020a915084821115620006bd57620006bc620005b7565b5b506200072d565b5060208310610133831016604e8410600b8410161715620006fe5782820a905083811115620006f857620006f7620005b7565b5b6200072d565b6200070d8484846001620005f0565b92509050818404811115620007275762000726620005b7565b5b81810290505b9392505050565b5f819050919050565b5f620007498262000734565b9150620007568362000734565b9250620007857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200064a565b905092915050565b5f620007998262000734565b9150620007a68362000734565b9250828202620007b68162000734565b91508282048414831517620007d057620007cf620005b7565b5b5092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200085357607f821691505b6020821081036200086957620008686200080e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620008cd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000890565b620008d9868362000890565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6200091a620009146200090e8462000734565b620008f1565b62000734565b9050919050565b5f819050919050565b6200093583620008fa565b6200094d620009448262000921565b8484546200089c565b825550505050565b5f90565b6200096362000955565b620009708184846200092a565b505050565b5b8181101562000997576200098b5f8262000959565b60018101905062000976565b5050565b601f821115620009e657620009b0816200086f565b620009bb8462000881565b81016020851015620009cb578190505b620009e3620009da8562000881565b83018262000975565b50505b505050565b5f82821c905092915050565b5f62000a085f1984600802620009eb565b1980831691505092915050565b5f62000a228383620009f7565b9150826002028217905092915050565b62000a3d82620007d7565b67ffffffffffffffff81111562000a595762000a58620007e1565b5b62000a6582546200083b565b62000a728282856200099b565b5f60209050601f83116001811462000aa8575f841562000a93578287015190505b62000a9f858262000a15565b86555062000b0e565b601f19841662000ab8866200086f565b5f5b8281101562000ae15784890151825560018201915060208501945060208101905062000aba565b8683101562000b01578489015162000afd601f891682620009f7565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b5f62000b3f62000b3962000b338462000b16565b620008f1565b62000734565b9050919050565b62000b518162000b1f565b82525050565b5f60208201905062000b6c5f83018462000b46565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000b9d8262000b72565b9050919050565b62000baf8162000b91565b82525050565b5f60208201905062000bca5f83018462000ba4565b92915050565b62000bdb8162000734565b82525050565b5f60408201905062000bf65f83018562000bd0565b62000c05602083018462000bd0565b9392505050565b5f62000c188262000734565b915062000c258362000734565b925082820190508082111562000c405762000c3f620005b7565b5b92915050565b5f60608201905062000c5b5f83018662000ba4565b62000c6a602083018562000bd0565b62000c79604083018462000bd0565b949350505050565b5f60208201905062000c965f83018462000bd0565b92915050565b608051611b8962000cb55f395f6106440152611b895ff3fe6080604052600436106100fd575f3560e01c8063655ab92711610094578063a9059cbb11610063578063a9059cbb146102f9578063c0e3daf514610335578063ce606ee01461035f578063dd62ed3e14610389578063ea6ecb08146103c5576100fd565b8063655ab927146102555780636a73bf531461026b57806370a082311461029357806395d89b41146102cf576100fd565b806323b872dd116100d057806323b872dd1461019b5780632bc67da0146101d7578063313ce56714610201578063355274ea1461022b576100fd565b806306ed69081461010157806306fdde031461010b578063095ea7b31461013557806318160ddd14610171575b5f80fd5b6101096103ef565b005b348015610116575f80fd5b5061011f61054a565b60405161012c9190611210565b60405180910390f35b348015610140575f80fd5b5061015b600480360381019061015691906112c1565b6105da565b6040516101689190611319565b60405180910390f35b34801561017c575f80fd5b506101856105fc565b6040516101929190611341565b60405180910390f35b3480156101a6575f80fd5b506101c160048036038101906101bc919061135a565b610605565b6040516101ce9190611319565b60405180910390f35b3480156101e2575f80fd5b506101eb610633565b6040516101f89190611341565b60405180910390f35b34801561020c575f80fd5b50610215610639565b60405161022291906113c5565b60405180910390f35b348015610236575f80fd5b5061023f610641565b60405161024c9190611341565b60405180910390f35b348015610260575f80fd5b50610269610668565b005b348015610276575f80fd5b50610291600480360381019061028c91906113de565b61079c565b005b34801561029e575f80fd5b506102b960048036038101906102b49190611409565b610877565b6040516102c69190611341565b60405180910390f35b3480156102da575f80fd5b506102e36108bc565b6040516102f09190611210565b60405180910390f35b348015610304575f80fd5b5061031f600480360381019061031a91906112c1565b61094c565b60405161032c9190611319565b60405180910390f35b348015610340575f80fd5b5061034961096e565b6040516103569190611341565b60405180910390f35b34801561036a575f80fd5b5061037361098f565b6040516103809190611443565b60405180910390f35b348015610394575f80fd5b506103af60048036038101906103aa919061145c565b6109b4565b6040516103bc9190611341565b60405180910390f35b3480156103d0575f80fd5b506103d9610a36565b6040516103e691906114b2565b60405180910390f35b5f3403610431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104289061153b565b60405180910390fd5b5f61043a61096e565b610442610639565b60ff16600a61045191906116b5565b3461045c91906116ff565b610466919061176d565b9050610470610639565b60ff16600a61047f91906116b5565b60085461048c91906116ff565b8161049633610877565b6104a0919061179d565b11156104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611840565b60405180910390fd5b6104eb3382610ae1565b3373ffffffffffffffffffffffffffffffffffffffff167f34987d73948b60cfba9beeb35760c345a3be430f3540605113911ead78a0830e82344261052f33610877565b60405161053f949392919061185e565b60405180910390a250565b606060038054610559906118ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610585906118ce565b80156105d05780601f106105a7576101008083540402835291602001916105d0565b820191905f5260205f20905b8154815290600101906020018083116105b357829003601f168201915b5050505050905090565b5f806105e4610b60565b90506105f1818585610b67565b600191505092915050565b5f600254905090565b5f8061060f610b60565b905061061c858285610b79565b610627858585610c0b565b60019150509392505050565b60085481565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee90611948565b60405180910390fd5b5f47905060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561075f573d5f803e3d5ffd5b507ff39edbeb800007582021719f876f29eb42aa5171248e3df79a3bf120a4e914168142604051610791929190611966565b60405180910390a150565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290611948565b60405180910390fd5b5f6008549050816008819055507f4c2d858a88357e20c1b14c12b9674497934a744bb8118d4d3f2dce8ded4989be81834260405161086b9392919061198d565b60405180910390a15050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546108cb906118ce565b80601f01602080910402602001604051908101604052809291908181526020018280546108f7906118ce565b80156109425780601f1061091957610100808354040283529160200191610942565b820191905f5260205f20905b81548152906001019060200180831161092557829003601f168201915b5050505050905090565b5f80610956610b60565b9050610963818585610c0b565b600191505092915050565b5f610977610a36565b671bc16d674ec8000061098a919061176d565b905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f8060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610aa2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ac69190611a3f565b505050915050620f424081610adb9190611ab6565b91505090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b51575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b489190611443565b60405180910390fd5b610b5c5f8383610cfb565b5050565b5f33905090565b610b748383836001610d9e565b505050565b5f610b8484846109b4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c055781811015610bf6578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610bed93929190611b1e565b60405180910390fd5b610c0484848484035f610d9e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c7b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c729190611443565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ceb575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ce29190611443565b60405180910390fd5b610cf6838383610cfb565b505050565b610d06838383610f6d565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d99575f610d42610641565b90505f610d4d6105fc565b905081811115610d965780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610d8d929190611966565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e0e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e059190611443565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e7e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e759190611443565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f67578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f5e9190611341565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fbd578060025f828254610fb1919061179d565b9250508190555061108b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611046578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161103d93929190611b1e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110d2578060025f828254039250508190555061111c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111799190611341565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156111bd5780820151818401526020810190506111a2565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111e282611186565b6111ec8185611190565b93506111fc8185602086016111a0565b611205816111c8565b840191505092915050565b5f6020820190508181035f83015261122881846111d8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61125d82611234565b9050919050565b61126d81611253565b8114611277575f80fd5b50565b5f8135905061128881611264565b92915050565b5f819050919050565b6112a08161128e565b81146112aa575f80fd5b50565b5f813590506112bb81611297565b92915050565b5f80604083850312156112d7576112d6611230565b5b5f6112e48582860161127a565b92505060206112f5858286016112ad565b9150509250929050565b5f8115159050919050565b611313816112ff565b82525050565b5f60208201905061132c5f83018461130a565b92915050565b61133b8161128e565b82525050565b5f6020820190506113545f830184611332565b92915050565b5f805f6060848603121561137157611370611230565b5b5f61137e8682870161127a565b935050602061138f8682870161127a565b92505060406113a0868287016112ad565b9150509250925092565b5f60ff82169050919050565b6113bf816113aa565b82525050565b5f6020820190506113d85f8301846113b6565b92915050565b5f602082840312156113f3576113f2611230565b5b5f611400848285016112ad565b91505092915050565b5f6020828403121561141e5761141d611230565b5b5f61142b8482850161127a565b91505092915050565b61143d81611253565b82525050565b5f6020820190506114565f830184611434565b92915050565b5f806040838503121561147257611471611230565b5b5f61147f8582860161127a565b92505060206114908582860161127a565b9150509250929050565b5f819050919050565b6114ac8161149a565b82525050565b5f6020820190506114c55f8301846114a3565b92915050565b7f4572726f722d4d4e545f4d554d4241492e736f6c2d56616c75656c6573735f545f8201527f72616e73616374696f6e00000000000000000000000000000000000000000000602082015250565b5f611525602a83611190565b9150611530826114cb565b604082019050919050565b5f6020820190508181035f83015261155281611519565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156115db578086048111156115b7576115b6611559565b5b60018516156115c65780820291505b80810290506115d485611586565b945061159b565b94509492505050565b5f826115f357600190506116ae565b81611600575f90506116ae565b816001811461161657600281146116205761164f565b60019150506116ae565b60ff84111561163257611631611559565b5b8360020a91508482111561164957611648611559565b5b506116ae565b5060208310610133831016604e8410600b84101617156116845782820a90508381111561167f5761167e611559565b5b6116ae565b6116918484846001611592565b925090508184048111156116a8576116a7611559565b5b81810290505b9392505050565b5f6116bf8261128e565b91506116ca8361128e565b92506116f77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846115e4565b905092915050565b5f6117098261128e565b91506117148361128e565b92508282026117228161128e565b9150828204841483151761173957611738611559565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6117778261128e565b91506117828361128e565b92508261179257611791611740565b5b828204905092915050565b5f6117a78261128e565b91506117b28361128e565b92508282019050808211156117ca576117c9611559565b5b92915050565b7f4572726f722d4d4e545f4d554d4241492e736f6c2d457863656564735f4d61785f8201527f5f42616c616e6365000000000000000000000000000000000000000000000000602082015250565b5f61182a602883611190565b9150611835826117d0565b604082019050919050565b5f6020820190508181035f8301526118578161181e565b9050919050565b5f6080820190506118715f830187611332565b61187e6020830186611332565b61188b6040830185611332565b6118986060830184611332565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806118e557607f821691505b6020821081036118f8576118f76118a1565b5b50919050565b7f4572726f722d4d4e545f4d554d4241492e736f6c2d4f776e61626c65000000005f82015250565b5f611932601c83611190565b915061193d826118fe565b602082019050919050565b5f6020820190508181035f83015261195f81611926565b9050919050565b5f6040820190506119795f830185611332565b6119866020830184611332565b9392505050565b5f6060820190506119a05f830186611332565b6119ad6020830185611332565b6119ba6040830184611332565b949350505050565b5f69ffffffffffffffffffff82169050919050565b6119e0816119c2565b81146119ea575f80fd5b50565b5f815190506119fb816119d7565b92915050565b611a0a8161149a565b8114611a14575f80fd5b50565b5f81519050611a2581611a01565b92915050565b5f81519050611a3981611297565b92915050565b5f805f805f60a08688031215611a5857611a57611230565b5b5f611a65888289016119ed565b9550506020611a7688828901611a17565b9450506040611a8788828901611a2b565b9350506060611a9888828901611a2b565b9250506080611aa9888289016119ed565b9150509295509295909350565b5f611ac08261149a565b9150611acb8361149a565b925082611adb57611ada611740565b5b60015f0383147f800000000000000000000000000000000000000000000000000000000000000083141615611b1357611b12611559565b5b828205905092915050565b5f606082019050611b315f830186611434565b611b3e6020830185611332565b611b4b6040830184611332565b94935050505056fea2646970667358221220d4e246ff0dcb3815227a5fd5e1a70e28369513cedeed3cc6591597fa56c702a364736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH5 0x12A05F200 PUSH1 0x7 SSTORE PUSH2 0x1388 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x30 PUSH3 0x230 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x73D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH3 0x50 SWAP2 SWAP1 PUSH3 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F6E6574000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4E540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xCD SWAP2 SWAP1 PUSH3 0xA32 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xDF SWAP2 SWAP1 PUSH3 0xA32 JUMP JUMPDEST POP POP POP PUSH0 DUP2 SUB PUSH3 0x129 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x392E1E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x120 SWAP2 SWAP1 PUSH3 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD0D5E3DB44DE05E9F294BB0A3BEEAF030DE24ADA PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x22A PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x1FC PUSH3 0x230 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH3 0x20D SWAP2 SWAP1 PUSH3 0x73D JUMP JUMPDEST PUSH4 0x9502F900 PUSH3 0x21E SWAP2 SWAP1 PUSH3 0x78D JUMP JUMPDEST PUSH3 0x238 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC9C JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2AB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2A2 SWAP2 SWAP1 PUSH3 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2BE PUSH0 DUP4 DUP4 PUSH3 0x2C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x2D5 DUP4 DUP4 DUP4 PUSH3 0x381 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x37C JUMPI PUSH0 PUSH3 0x31A PUSH3 0x5A5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x32D PUSH3 0x5AE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x379 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x370 SWAP3 SWAP2 SWAP1 PUSH3 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3D5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x3C8 SWAP2 SWAP1 PUSH3 0xC0C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4A6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x461 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x458 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4EF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x539 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x598 SWAP2 SWAP1 PUSH3 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x641 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x619 JUMPI PUSH3 0x618 PUSH3 0x5B7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x629 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x639 DUP6 PUSH3 0x5E4 JUMP JUMPDEST SWAP5 POP PUSH3 0x5F9 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x65B JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x72D JUMP JUMPDEST DUP2 PUSH3 0x66A JUMPI PUSH0 SWAP1 POP PUSH3 0x72D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x683 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x68E JUMPI PUSH3 0x6C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x72D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x6A3 JUMPI PUSH3 0x6A2 PUSH3 0x5B7 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x6BD JUMPI PUSH3 0x6BC PUSH3 0x5B7 JUMP JUMPDEST JUMPDEST POP PUSH3 0x72D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x6FE JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x6F8 JUMPI PUSH3 0x6F7 PUSH3 0x5B7 JUMP JUMPDEST JUMPDEST PUSH3 0x72D JUMP JUMPDEST PUSH3 0x70D DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x5F0 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x727 JUMPI PUSH3 0x726 PUSH3 0x5B7 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x749 DUP3 PUSH3 0x734 JUMP JUMPDEST SWAP2 POP PUSH3 0x756 DUP4 PUSH3 0x734 JUMP JUMPDEST SWAP3 POP PUSH3 0x785 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x64A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x799 DUP3 PUSH3 0x734 JUMP JUMPDEST SWAP2 POP PUSH3 0x7A6 DUP4 PUSH3 0x734 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x7B6 DUP2 PUSH3 0x734 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x7D0 JUMPI PUSH3 0x7CF PUSH3 0x5B7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x853 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x869 JUMPI PUSH3 0x868 PUSH3 0x80E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x8CD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x890 JUMP JUMPDEST PUSH3 0x8D9 DUP7 DUP4 PUSH3 0x890 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x91A PUSH3 0x914 PUSH3 0x90E DUP5 PUSH3 0x734 JUMP JUMPDEST PUSH3 0x8F1 JUMP JUMPDEST PUSH3 0x734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x935 DUP4 PUSH3 0x8FA JUMP JUMPDEST PUSH3 0x94D PUSH3 0x944 DUP3 PUSH3 0x921 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x89C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x963 PUSH3 0x955 JUMP JUMPDEST PUSH3 0x970 DUP2 DUP5 DUP5 PUSH3 0x92A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x997 JUMPI PUSH3 0x98B PUSH0 DUP3 PUSH3 0x959 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x976 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x9E6 JUMPI PUSH3 0x9B0 DUP2 PUSH3 0x86F JUMP JUMPDEST PUSH3 0x9BB DUP5 PUSH3 0x881 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x9CB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x9E3 PUSH3 0x9DA DUP6 PUSH3 0x881 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x975 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA08 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x9EB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA22 DUP4 DUP4 PUSH3 0x9F7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA3D DUP3 PUSH3 0x7D7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA59 JUMPI PUSH3 0xA58 PUSH3 0x7E1 JUMP JUMPDEST JUMPDEST PUSH3 0xA65 DUP3 SLOAD PUSH3 0x83B JUMP JUMPDEST PUSH3 0xA72 DUP3 DUP3 DUP6 PUSH3 0x99B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xAA8 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xA93 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xA9F DUP6 DUP3 PUSH3 0xA15 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB0E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xAB8 DUP7 PUSH3 0x86F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xAE1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xABA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB01 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xAFD PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x9F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB3F PUSH3 0xB39 PUSH3 0xB33 DUP5 PUSH3 0xB16 JUMP JUMPDEST PUSH3 0x8F1 JUMP JUMPDEST PUSH3 0x734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB51 DUP2 PUSH3 0xB1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB6C PUSH0 DUP4 ADD DUP5 PUSH3 0xB46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB9D DUP3 PUSH3 0xB72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBAF DUP2 PUSH3 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBCA PUSH0 DUP4 ADD DUP5 PUSH3 0xBA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xBDB DUP2 PUSH3 0x734 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xBF6 PUSH0 DUP4 ADD DUP6 PUSH3 0xBD0 JUMP JUMPDEST PUSH3 0xC05 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xBD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC18 DUP3 PUSH3 0x734 JUMP JUMPDEST SWAP2 POP PUSH3 0xC25 DUP4 PUSH3 0x734 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC40 JUMPI PUSH3 0xC3F PUSH3 0x5B7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xC5B PUSH0 DUP4 ADD DUP7 PUSH3 0xBA4 JUMP JUMPDEST PUSH3 0xC6A PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xBD0 JUMP JUMPDEST PUSH3 0xC79 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xBD0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC96 PUSH0 DUP4 ADD DUP5 PUSH3 0xBD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1B89 PUSH3 0xCB5 PUSH0 CODECOPY PUSH0 PUSH2 0x644 ADD MSTORE PUSH2 0x1B89 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x655AB927 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xC0E3DAF5 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xEA6ECB08 EQ PUSH2 0x3C5 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x655AB927 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x6A73BF53 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CF JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x2BC67DA0 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x22B JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x6ED6908 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x373 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x43A PUSH2 0x96E JUMP JUMPDEST PUSH2 0x442 PUSH2 0x639 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST CALLVALUE PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x176D JUMP JUMPDEST SWAP1 POP PUSH2 0x470 PUSH2 0x639 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP2 PUSH2 0x496 CALLER PUSH2 0x877 JUMP JUMPDEST PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST GT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D8 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EB CALLER DUP3 PUSH2 0xAE1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x34987D73948B60CFBA9BEEB35760C345A3BE430F3540605113911EAD78A0830E DUP3 CALLVALUE TIMESTAMP PUSH2 0x52F CALLER PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x559 SWAP1 PUSH2 0x18CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x585 SWAP1 PUSH2 0x18CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F1 DUP2 DUP6 DUP6 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x60F PUSH2 0xB60 JUMP JUMPDEST SWAP1 POP PUSH2 0x61C DUP6 DUP3 DUP6 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x627 DUP6 DUP6 DUP6 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x75F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0xF39EDBEB800007582021719F876F29EB42AA5171248E3DF79A3BF120A4E91416 DUP2 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x791 SWAP3 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x4C2D858A88357E20C1B14C12B9674497934A744BB8118D4D3F2DCE8DED4989BE DUP2 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x86B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8CB SWAP1 PUSH2 0x18CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F7 SWAP1 PUSH2 0x18CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x942 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x919 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x942 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x925 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x956 PUSH2 0xB60 JUMP JUMPDEST SWAP1 POP PUSH2 0x963 DUP2 DUP6 DUP6 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x977 PUSH2 0xA36 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 PUSH2 0x98A SWAP2 SWAP1 PUSH2 0x176D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAA2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC6 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH3 0xF4240 DUP2 PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB51 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5C PUSH0 DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB74 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD9E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB84 DUP5 DUP5 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC05 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBF6 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC04 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD9E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF6 DUP4 DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD06 DUP4 DUP4 DUP4 PUSH2 0xF6D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD99 JUMPI PUSH0 PUSH2 0xD42 PUSH2 0x641 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD4D PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD96 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8D SWAP3 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE7E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF67 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFB1 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x108B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1046 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x111C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1179 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11BD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11A2 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11E2 DUP3 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x11EC DUP2 DUP6 PUSH2 0x1190 JUMP JUMPDEST SWAP4 POP PUSH2 0x11FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x1205 DUP2 PUSH2 0x11C8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1228 DUP2 DUP5 PUSH2 0x11D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x125D DUP3 PUSH2 0x1234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x1253 JUMP JUMPDEST DUP2 EQ PUSH2 0x1277 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1288 DUP2 PUSH2 0x1264 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A0 DUP2 PUSH2 0x128E JUMP JUMPDEST DUP2 EQ PUSH2 0x12AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12BB DUP2 PUSH2 0x1297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D7 JUMPI PUSH2 0x12D6 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E4 DUP6 DUP3 DUP7 ADD PUSH2 0x127A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F5 DUP6 DUP3 DUP7 ADD PUSH2 0x12AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1313 DUP2 PUSH2 0x12FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132C PUSH0 DUP4 ADD DUP5 PUSH2 0x130A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133B DUP2 PUSH2 0x128E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1354 PUSH0 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1371 JUMPI PUSH2 0x1370 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x137E DUP7 DUP3 DUP8 ADD PUSH2 0x127A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x138F DUP7 DUP3 DUP8 ADD PUSH2 0x127A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13A0 DUP7 DUP3 DUP8 ADD PUSH2 0x12AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x13AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1400 DUP5 DUP3 DUP6 ADD PUSH2 0x12AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141E JUMPI PUSH2 0x141D PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142B DUP5 DUP3 DUP6 ADD PUSH2 0x127A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x143D DUP2 PUSH2 0x1253 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1456 PUSH0 DUP4 ADD DUP5 PUSH2 0x1434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1472 JUMPI PUSH2 0x1471 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147F DUP6 DUP3 DUP7 ADD PUSH2 0x127A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1490 DUP6 DUP3 DUP7 ADD PUSH2 0x127A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14AC DUP2 PUSH2 0x149A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x14A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722D4D4E545F4D554D4241492E736F6C2D56616C75656C6573735F54 PUSH0 DUP3 ADD MSTORE PUSH32 0x72616E73616374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1525 PUSH1 0x2A DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP2 POP PUSH2 0x1530 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1552 DUP2 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x15DB JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x15B7 JUMPI PUSH2 0x15B6 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x15C6 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x15D4 DUP6 PUSH2 0x1586 JUMP JUMPDEST SWAP5 POP PUSH2 0x159B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15F3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x16AE JUMP JUMPDEST DUP2 PUSH2 0x1600 JUMPI PUSH0 SWAP1 POP PUSH2 0x16AE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1616 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1620 JUMPI PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x16AE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST POP PUSH2 0x16AE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1684 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x1559 JUMP JUMPDEST JUMPDEST PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x1691 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1592 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x16A8 JUMPI PUSH2 0x16A7 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16BF DUP3 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x16CA DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP PUSH2 0x16F7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x15E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1709 DUP3 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x1714 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1722 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1777 DUP3 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x1782 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x1740 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A7 DUP3 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x17B2 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17CA JUMPI PUSH2 0x17C9 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722D4D4E545F4D554D4241492E736F6C2D457863656564735F4D6178 PUSH0 DUP3 ADD MSTORE PUSH32 0x5F42616C616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x182A PUSH1 0x28 DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP2 POP PUSH2 0x1835 DUP3 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1857 DUP2 PUSH2 0x181E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1871 PUSH0 DUP4 ADD DUP8 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x187E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x188B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x1898 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18F8 JUMPI PUSH2 0x18F7 PUSH2 0x18A1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F722D4D4E545F4D554D4241492E736F6C2D4F776E61626C6500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1932 PUSH1 0x1C DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP2 POP PUSH2 0x193D DUP3 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x195F DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1979 PUSH0 DUP4 ADD DUP6 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x1986 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19A0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x19AD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x19BA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x19C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x19EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FB DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x149A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A25 DUP2 PUSH2 0x1A01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A39 DUP2 PUSH2 0x1297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A58 JUMPI PUSH2 0x1A57 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A65 DUP9 DUP3 DUP10 ADD PUSH2 0x19ED JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A76 DUP9 DUP3 DUP10 ADD PUSH2 0x1A17 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1A87 DUP9 DUP3 DUP10 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1A98 DUP9 DUP3 DUP10 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1AA9 DUP9 DUP3 DUP10 ADD PUSH2 0x19ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC0 DUP3 PUSH2 0x149A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ACB DUP4 PUSH2 0x149A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x1740 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x1B13 JUMPI PUSH2 0x1B12 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B31 PUSH0 DUP4 ADD DUP7 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x1B3E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x1B4B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xE2 CHAINID SELFDESTRUCT 0xD 0xCB CODESIZE ISZERO 0x22 PUSH27 0x5FD5E1A70E28369513CEDEED3CC6591597FA56C702A364736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "380:3909:7:-:0;;;514:10;499:25;;583:4;554:33;;1140:357;;;;;;;;;;1208:10;:8;;;:10;;:::i;:::-;1200:19;;1196:2;:23;;;;:::i;:::-;1188:6;;:32;;;;:::i;:::-;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;764:1:4;756:4;:9;752:65;;804:1;788:18;;;;;;;;;;;:::i;:::-;;;;;;;;752:65;833:4;826:11;;;;;;716:128;1252:10:7::2;1238:13;;:24;;;;;;;;;;;;;;;;;;1306:42;1273:8;;:76;;;;;;;;;;;;;;;;;;1432:57;1438:13;;;;;;;;;;;1476:10;:8;;;:10;;:::i;:::-;1468:19;;1464:2;:23;;;;:::i;:::-;1452:10;:36;;;;:::i;:::-;1432:5;;;:57;;:::i;:::-;380:3909:::0;;3002:82:2;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1059:371:4:-;1153:30;1167:4;1173:2;1177:5;1153:13;;;:30;;:::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;;;:5;;:::i;:::-;1232:25;;1271:14;1288:13;:11;;;:13;;:::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;923:81:4:-;967:7;993:4;;986:11;;923:81;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;7:180:8:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:285::-;2377:5;2401:23;2419:4;2401:23;:::i;:::-;2393:31;;2445:27;2463:8;2445:27;:::i;:::-;2433:39;;2491:104;2528:66;2518:8;2512:4;2491:104;:::i;:::-;2482:113;;2317:285;;;;:::o;2608:410::-;2648:7;2671:20;2689:1;2671:20;:::i;:::-;2666:25;;2705:20;2723:1;2705:20;:::i;:::-;2700:25;;2760:1;2757;2753:9;2782:30;2800:11;2782:30;:::i;:::-;2771:41;;2961:1;2952:7;2948:15;2945:1;2942:22;2922:1;2915:9;2895:83;2872:139;;2991:18;;:::i;:::-;2872:139;2656:362;2608:410;;;;:::o;3024:99::-;3076:6;3110:5;3104:12;3094:22;;3024:99;;;:::o;3129:180::-;3177:77;3174:1;3167:88;3274:4;3271:1;3264:15;3298:4;3295:1;3288:15;3315:180;3363:77;3360:1;3353:88;3460:4;3457:1;3450:15;3484:4;3481:1;3474:15;3501:320;3545:6;3582:1;3576:4;3572:12;3562:22;;3629:1;3623:4;3619:12;3650:18;3640:81;;3706:4;3698:6;3694:17;3684:27;;3640:81;3768:2;3760:6;3757:14;3737:18;3734:38;3731:84;;3787:18;;:::i;:::-;3731:84;3552:269;3501:320;;;:::o;3827:141::-;3876:4;3899:3;3891:11;;3922:3;3919:1;3912:14;3956:4;3953:1;3943:18;3935:26;;3827:141;;;:::o;3974:93::-;4011:6;4058:2;4053;4046:5;4042:14;4038:23;4028:33;;3974:93;;;:::o;4073:107::-;4117:8;4167:5;4161:4;4157:16;4136:37;;4073:107;;;;:::o;4186:393::-;4255:6;4305:1;4293:10;4289:18;4328:97;4358:66;4347:9;4328:97;:::i;:::-;4446:39;4476:8;4465:9;4446:39;:::i;:::-;4434:51;;4518:4;4514:9;4507:5;4503:21;4494:30;;4567:4;4557:8;4553:19;4546:5;4543:30;4533:40;;4262:317;;4186:393;;;;;:::o;4585:60::-;4613:3;4634:5;4627:12;;4585:60;;;:::o;4651:142::-;4701:9;4734:53;4752:34;4761:24;4779:5;4761:24;:::i;:::-;4752:34;:::i;:::-;4734:53;:::i;:::-;4721:66;;4651:142;;;:::o;4799:75::-;4842:3;4863:5;4856:12;;4799:75;;;:::o;4880:269::-;4990:39;5021:7;4990:39;:::i;:::-;5051:91;5100:41;5124:16;5100:41;:::i;:::-;5092:6;5085:4;5079:11;5051:91;:::i;:::-;5045:4;5038:105;4956:193;4880:269;;;:::o;5155:73::-;5200:3;5155:73;:::o;5234:189::-;5311:32;;:::i;:::-;5352:65;5410:6;5402;5396:4;5352:65;:::i;:::-;5287:136;5234:189;;:::o;5429:186::-;5489:120;5506:3;5499:5;5496:14;5489:120;;;5560:39;5597:1;5590:5;5560:39;:::i;:::-;5533:1;5526:5;5522:13;5513:22;;5489:120;;;5429:186;;:::o;5621:543::-;5722:2;5717:3;5714:11;5711:446;;;5756:38;5788:5;5756:38;:::i;:::-;5840:29;5858:10;5840:29;:::i;:::-;5830:8;5826:44;6023:2;6011:10;6008:18;6005:49;;;6044:8;6029:23;;6005:49;6067:80;6123:22;6141:3;6123:22;:::i;:::-;6113:8;6109:37;6096:11;6067:80;:::i;:::-;5726:431;;5711:446;5621:543;;;:::o;6170:117::-;6224:8;6274:5;6268:4;6264:16;6243:37;;6170:117;;;;:::o;6293:169::-;6337:6;6370:51;6418:1;6414:6;6406:5;6403:1;6399:13;6370:51;:::i;:::-;6366:56;6451:4;6445;6441:15;6431:25;;6344:118;6293:169;;;;:::o;6467:295::-;6543:4;6689:29;6714:3;6708:4;6689:29;:::i;:::-;6681:37;;6751:3;6748:1;6744:11;6738:4;6735:21;6727:29;;6467:295;;;;:::o;6767:1395::-;6884:37;6917:3;6884:37;:::i;:::-;6986:18;6978:6;6975:30;6972:56;;;7008:18;;:::i;:::-;6972:56;7052:38;7084:4;7078:11;7052:38;:::i;:::-;7137:67;7197:6;7189;7183:4;7137:67;:::i;:::-;7231:1;7255:4;7242:17;;7287:2;7279:6;7276:14;7304:1;7299:618;;;;7961:1;7978:6;7975:77;;;8027:9;8022:3;8018:19;8012:26;8003:35;;7975:77;8078:67;8138:6;8131:5;8078:67;:::i;:::-;8072:4;8065:81;7934:222;7269:887;;7299:618;7351:4;7347:9;7339:6;7335:22;7385:37;7417:4;7385:37;:::i;:::-;7444:1;7458:208;7472:7;7469:1;7466:14;7458:208;;;7551:9;7546:3;7542:19;7536:26;7528:6;7521:42;7602:1;7594:6;7590:14;7580:24;;7649:2;7638:9;7634:18;7621:31;;7495:4;7492:1;7488:12;7483:17;;7458:208;;;7694:6;7685:7;7682:19;7679:179;;;7752:9;7747:3;7743:19;7737:26;7795:48;7837:4;7829:6;7825:17;7814:9;7795:48;:::i;:::-;7787:6;7780:64;7702:156;7679:179;7904:1;7900;7892:6;7888:14;7884:22;7878:4;7871:36;7306:611;;;7269:887;;6859:1303;;;6767:1395;;:::o;8168:85::-;8213:7;8242:5;8231:16;;8168:85;;;:::o;8259:158::-;8317:9;8350:61;8368:42;8377:32;8403:5;8377:32;:::i;:::-;8368:42;:::i;:::-;8350:61;:::i;:::-;8337:74;;8259:158;;;:::o;8423:147::-;8518:45;8557:5;8518:45;:::i;:::-;8513:3;8506:58;8423:147;;:::o;8576:238::-;8677:4;8715:2;8704:9;8700:18;8692:26;;8728:79;8804:1;8793:9;8789:17;8780:6;8728:79;:::i;:::-;8576:238;;;;:::o;8820:126::-;8857:7;8897:42;8890:5;8886:54;8875:65;;8820:126;;;:::o;8952:96::-;8989:7;9018:24;9036:5;9018:24;:::i;:::-;9007:35;;8952:96;;;:::o;9054:118::-;9141:24;9159:5;9141:24;:::i;:::-;9136:3;9129:37;9054:118;;:::o;9178:222::-;9271:4;9309:2;9298:9;9294:18;9286:26;;9322:71;9390:1;9379:9;9375:17;9366:6;9322:71;:::i;:::-;9178:222;;;;:::o;9406:118::-;9493:24;9511:5;9493:24;:::i;:::-;9488:3;9481:37;9406:118;;:::o;9530:332::-;9651:4;9689:2;9678:9;9674:18;9666:26;;9702:71;9770:1;9759:9;9755:17;9746:6;9702:71;:::i;:::-;9783:72;9851:2;9840:9;9836:18;9827:6;9783:72;:::i;:::-;9530:332;;;;;:::o;9868:191::-;9908:3;9927:20;9945:1;9927:20;:::i;:::-;9922:25;;9961:20;9979:1;9961:20;:::i;:::-;9956:25;;10004:1;10001;9997:9;9990:16;;10025:3;10022:1;10019:10;10016:36;;;10032:18;;:::i;:::-;10016:36;9868:191;;;;:::o;10065:442::-;10214:4;10252:2;10241:9;10237:18;10229:26;;10265:71;10333:1;10322:9;10318:17;10309:6;10265:71;:::i;:::-;10346:72;10414:2;10403:9;10399:18;10390:6;10346:72;:::i;:::-;10428;10496:2;10485:9;10481:18;10472:6;10428:72;:::i;:::-;10065:442;;;;;;:::o;10513:222::-;10606:4;10644:2;10633:9;10629:18;10621:26;;10657:71;10725:1;10714:9;10710:17;10701:6;10657:71;:::i;:::-;10513:222;;;;:::o;380:3909:7:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@OneMATICInCents_1140": {
									"entryPoint": 2614,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@WithdrawMintingFees_1190": {
									"entryPoint": 1640,
									"id": 1190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_588": {
									"entryPoint": 2919,
									"id": 588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_648": {
									"entryPoint": 3486,
									"id": 648,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_537": {
									"entryPoint": 2785,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_912": {
									"entryPoint": 2912,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_696": {
									"entryPoint": 2937,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_427": {
									"entryPoint": 3083,
									"id": 427,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_504": {
									"entryPoint": 3949,
									"id": 504,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_873": {
									"entryPoint": 3323,
									"id": 873,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_324": {
									"entryPoint": 2484,
									"id": 324,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_348": {
									"entryPoint": 1498,
									"id": 348,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_283": {
									"entryPoint": 2167,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTokensFromContract_1101": {
									"entryPoint": 1007,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@capPerAccount_948": {
									"entryPoint": 1587,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cap_825": {
									"entryPoint": 1601,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contractOwner_942": {
									"entryPoint": 2447,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_261": {
									"entryPoint": 1593,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_243": {
									"entryPoint": 1354,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_252": {
									"entryPoint": 2236,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_270": {
									"entryPoint": 1532,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_380": {
									"entryPoint": 1541,
									"id": 380,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_307": {
									"entryPoint": 2380,
									"id": 307,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateCapPerAccount_1124": {
									"entryPoint": 1948,
									"id": 1124,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@zTokenPriceInWei_1162": {
									"entryPoint": 2414,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 6679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 5298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6541,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 5813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5604,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 6594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44": {
									"entryPoint": 6096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd": {
									"entryPoint": 5323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 6615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17809:8",
										"nodeType": "YulBlock",
										"src": "0:17809:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:184:8",
													"nodeType": "YulBlock",
													"src": "349:184:8",
													"statements": [
														{
															"nativeSrc": "359:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:8",
																"nodeType": "YulLiteral",
																"src": "368:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:8",
																	"nodeType": "YulTypedName",
																	"src": "363:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:8",
																"nodeType": "YulBlock",
																"src": "428:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:8"
																					},
																					"nativeSrc": "449:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:8"
																							},
																							"nativeSrc": "468:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:8"
																					},
																					"nativeSrc": "462:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:8"
																			},
																			"nativeSrc": "442:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:8"
																		},
																		"nativeSrc": "442:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:8"
																},
																"nativeSrc": "386:13:8",
																"nodeType": "YulFunctionCall",
																"src": "386:13:8"
															},
															"nativeSrc": "378:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:8",
																"nodeType": "YulBlock",
																"src": "400:19:8",
																"statements": [
																	{
																		"nativeSrc": "402:15:8",
																		"nodeType": "YulAssignment",
																		"src": "402:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:8",
																					"nodeType": "YulLiteral",
																					"src": "414:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:8"
																			},
																			"nativeSrc": "407:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:8",
																"nodeType": "YulBlock",
																"src": "382:3:8",
																"statements": []
															},
															"src": "378:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:8"
																		},
																		"nativeSrc": "507:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:8",
																		"nodeType": "YulLiteral",
																		"src": "525:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:8"
																},
																"nativeSrc": "500:27:8",
																"nodeType": "YulFunctionCall",
																"src": "500:27:8"
															},
															"nativeSrc": "500:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:246:8"
											},
											{
												"body": {
													"nativeSrc": "587:54:8",
													"nodeType": "YulBlock",
													"src": "587:54:8",
													"statements": [
														{
															"nativeSrc": "597:38:8",
															"nodeType": "YulAssignment",
															"src": "597:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:8",
																				"nodeType": "YulLiteral",
																				"src": "622:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:8"
																		},
																		"nativeSrc": "611:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:8",
																				"nodeType": "YulLiteral",
																				"src": "631:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:8"
																		},
																		"nativeSrc": "627:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:8"
																},
																"nativeSrc": "607:28:8",
																"nodeType": "YulFunctionCall",
																"src": "607:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:8",
														"nodeType": "YulTypedName",
														"src": "570:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:8",
														"nodeType": "YulTypedName",
														"src": "580:6:8",
														"type": ""
													}
												],
												"src": "539:102:8"
											},
											{
												"body": {
													"nativeSrc": "739:285:8",
													"nodeType": "YulBlock",
													"src": "739:285:8",
													"statements": [
														{
															"nativeSrc": "749:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:8"
																},
																"nativeSrc": "763:39:8",
																"nodeType": "YulFunctionCall",
																"src": "763:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:8",
																	"nodeType": "YulTypedName",
																	"src": "753:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:8",
															"nodeType": "YulAssignment",
															"src": "811:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:8"
																},
																"nativeSrc": "818:71:8",
																"nodeType": "YulFunctionCall",
																"src": "818:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:8",
																				"nodeType": "YulLiteral",
																				"src": "944:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:8"
																		},
																		"nativeSrc": "933:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:8"
																},
																"nativeSrc": "898:65:8",
																"nodeType": "YulFunctionCall",
																"src": "898:65:8"
															},
															"nativeSrc": "898:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:8"
														},
														{
															"nativeSrc": "972:46:8",
															"nodeType": "YulAssignment",
															"src": "972:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:8"
																		},
																		"nativeSrc": "988:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:8"
																},
																"nativeSrc": "979:39:8",
																"nodeType": "YulFunctionCall",
																"src": "979:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:8",
														"nodeType": "YulTypedName",
														"src": "720:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:8",
														"nodeType": "YulTypedName",
														"src": "727:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:8",
														"nodeType": "YulTypedName",
														"src": "735:3:8",
														"type": ""
													}
												],
												"src": "647:377:8"
											},
											{
												"body": {
													"nativeSrc": "1148:195:8",
													"nodeType": "YulBlock",
													"src": "1148:195:8",
													"statements": [
														{
															"nativeSrc": "1158:26:8",
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nativeSrc": "1166:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:8"
																		},
																		"nativeSrc": "1201:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:8"
																		},
																		"nativeSrc": "1220:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:8"
																},
																"nativeSrc": "1194:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:8"
															},
															"nativeSrc": "1194:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:8"
														},
														{
															"nativeSrc": "1250:86:8",
															"nodeType": "YulAssignment",
															"src": "1250:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:8"
																},
																"nativeSrc": "1258:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:8",
														"nodeType": "YulTypedName",
														"src": "1120:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:8",
														"nodeType": "YulTypedName",
														"src": "1132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:8",
														"nodeType": "YulTypedName",
														"src": "1143:4:8",
														"type": ""
													}
												],
												"src": "1030:313:8"
											},
											{
												"body": {
													"nativeSrc": "1389:35:8",
													"nodeType": "YulBlock",
													"src": "1389:35:8",
													"statements": [
														{
															"nativeSrc": "1399:19:8",
															"nodeType": "YulAssignment",
															"src": "1399:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:8"
																},
																"nativeSrc": "1409:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:8",
														"nodeType": "YulTypedName",
														"src": "1382:6:8",
														"type": ""
													}
												],
												"src": "1349:75:8"
											},
											{
												"body": {
													"nativeSrc": "1519:28:8",
													"nodeType": "YulBlock",
													"src": "1519:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:8"
																},
																"nativeSrc": "1529:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:8"
															},
															"nativeSrc": "1529:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:8"
											},
											{
												"body": {
													"nativeSrc": "1642:28:8",
													"nodeType": "YulBlock",
													"src": "1642:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nativeSrc": "1652:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:8"
															},
															"nativeSrc": "1652:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:8"
											},
											{
												"body": {
													"nativeSrc": "1721:81:8",
													"nodeType": "YulBlock",
													"src": "1721:81:8",
													"statements": [
														{
															"nativeSrc": "1731:65:8",
															"nodeType": "YulAssignment",
															"src": "1731:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:8"
																},
																"nativeSrc": "1742:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:8",
														"nodeType": "YulTypedName",
														"src": "1703:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:8",
														"nodeType": "YulTypedName",
														"src": "1713:7:8",
														"type": ""
													}
												],
												"src": "1676:126:8"
											},
											{
												"body": {
													"nativeSrc": "1853:51:8",
													"nodeType": "YulBlock",
													"src": "1853:51:8",
													"statements": [
														{
															"nativeSrc": "1863:35:8",
															"nodeType": "YulAssignment",
															"src": "1863:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:8"
																},
																"nativeSrc": "1874:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:8",
														"nodeType": "YulTypedName",
														"src": "1835:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:8",
														"nodeType": "YulTypedName",
														"src": "1845:7:8",
														"type": ""
													}
												],
												"src": "1808:96:8"
											},
											{
												"body": {
													"nativeSrc": "1953:79:8",
													"nodeType": "YulBlock",
													"src": "1953:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:8",
																"nodeType": "YulBlock",
																"src": "2010:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:8"
																			},
																			"nativeSrc": "2012:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:8"
																		},
																		"nativeSrc": "2012:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:8"
																				},
																				"nativeSrc": "1983:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:8"
																		},
																		"nativeSrc": "1973:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:8"
																},
																"nativeSrc": "1966:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:8"
															},
															"nativeSrc": "1963:63:8",
															"nodeType": "YulIf",
															"src": "1963:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:8",
														"nodeType": "YulTypedName",
														"src": "1946:5:8",
														"type": ""
													}
												],
												"src": "1910:122:8"
											},
											{
												"body": {
													"nativeSrc": "2090:87:8",
													"nodeType": "YulBlock",
													"src": "2090:87:8",
													"statements": [
														{
															"nativeSrc": "2100:29:8",
															"nodeType": "YulAssignment",
															"src": "2100:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:8"
																},
																"nativeSrc": "2109:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:8"
																},
																"nativeSrc": "2138:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:8"
															},
															"nativeSrc": "2138:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:8",
														"nodeType": "YulTypedName",
														"src": "2068:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:8",
														"nodeType": "YulTypedName",
														"src": "2076:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:8",
														"nodeType": "YulTypedName",
														"src": "2084:5:8",
														"type": ""
													}
												],
												"src": "2038:139:8"
											},
											{
												"body": {
													"nativeSrc": "2228:32:8",
													"nodeType": "YulBlock",
													"src": "2228:32:8",
													"statements": [
														{
															"nativeSrc": "2238:16:8",
															"nodeType": "YulAssignment",
															"src": "2238:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:8",
																"nodeType": "YulIdentifier",
																"src": "2249:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:8",
														"nodeType": "YulTypedName",
														"src": "2210:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:8",
														"nodeType": "YulTypedName",
														"src": "2220:7:8",
														"type": ""
													}
												],
												"src": "2183:77:8"
											},
											{
												"body": {
													"nativeSrc": "2309:79:8",
													"nodeType": "YulBlock",
													"src": "2309:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:8",
																"nodeType": "YulBlock",
																"src": "2366:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:8"
																			},
																			"nativeSrc": "2368:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:8"
																		},
																		"nativeSrc": "2368:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:8"
																				},
																				"nativeSrc": "2339:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:8"
																		},
																		"nativeSrc": "2329:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:8"
																},
																"nativeSrc": "2322:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:8"
															},
															"nativeSrc": "2319:63:8",
															"nodeType": "YulIf",
															"src": "2319:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:8",
														"nodeType": "YulTypedName",
														"src": "2302:5:8",
														"type": ""
													}
												],
												"src": "2266:122:8"
											},
											{
												"body": {
													"nativeSrc": "2446:87:8",
													"nodeType": "YulBlock",
													"src": "2446:87:8",
													"statements": [
														{
															"nativeSrc": "2456:29:8",
															"nodeType": "YulAssignment",
															"src": "2456:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:8"
																},
																"nativeSrc": "2465:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:8"
																},
																"nativeSrc": "2494:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:8"
															},
															"nativeSrc": "2494:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:8",
														"nodeType": "YulTypedName",
														"src": "2424:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:8",
														"nodeType": "YulTypedName",
														"src": "2432:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:8",
														"nodeType": "YulTypedName",
														"src": "2440:5:8",
														"type": ""
													}
												],
												"src": "2394:139:8"
											},
											{
												"body": {
													"nativeSrc": "2622:391:8",
													"nodeType": "YulBlock",
													"src": "2622:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:8",
																"nodeType": "YulBlock",
																"src": "2668:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:8"
																			},
																			"nativeSrc": "2670:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:8"
																		},
																		"nativeSrc": "2670:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:8"
																		},
																		"nativeSrc": "2639:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:8"
																},
																"nativeSrc": "2635:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:8"
															},
															"nativeSrc": "2632:119:8",
															"nodeType": "YulIf",
															"src": "2632:119:8"
														},
														{
															"nativeSrc": "2761:117:8",
															"nodeType": "YulBlock",
															"src": "2761:117:8",
															"statements": [
																{
																	"nativeSrc": "2776:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:8"
																				},
																				"nativeSrc": "2836:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:8"
																		},
																		"nativeSrc": "2815:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:8",
															"nodeType": "YulBlock",
															"src": "2888:118:8",
															"statements": [
																{
																	"nativeSrc": "2903:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:8"
																				},
																				"nativeSrc": "2964:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:8"
																		},
																		"nativeSrc": "2943:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:8",
														"nodeType": "YulTypedName",
														"src": "2584:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:8",
														"nodeType": "YulTypedName",
														"src": "2595:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:8",
														"nodeType": "YulTypedName",
														"src": "2607:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:8",
														"nodeType": "YulTypedName",
														"src": "2615:6:8",
														"type": ""
													}
												],
												"src": "2539:474:8"
											},
											{
												"body": {
													"nativeSrc": "3061:48:8",
													"nodeType": "YulBlock",
													"src": "3061:48:8",
													"statements": [
														{
															"nativeSrc": "3071:32:8",
															"nodeType": "YulAssignment",
															"src": "3071:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:8"
																		},
																		"nativeSrc": "3089:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:8"
																},
																"nativeSrc": "3082:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:8",
														"nodeType": "YulTypedName",
														"src": "3043:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:8",
														"nodeType": "YulTypedName",
														"src": "3053:7:8",
														"type": ""
													}
												],
												"src": "3019:90:8"
											},
											{
												"body": {
													"nativeSrc": "3174:50:8",
													"nodeType": "YulBlock",
													"src": "3174:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:8"
																		},
																		"nativeSrc": "3196:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:8"
																},
																"nativeSrc": "3184:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:8"
															},
															"nativeSrc": "3184:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:8",
														"nodeType": "YulTypedName",
														"src": "3162:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:8",
														"nodeType": "YulTypedName",
														"src": "3169:3:8",
														"type": ""
													}
												],
												"src": "3115:109:8"
											},
											{
												"body": {
													"nativeSrc": "3322:118:8",
													"nodeType": "YulBlock",
													"src": "3322:118:8",
													"statements": [
														{
															"nativeSrc": "3332:26:8",
															"nodeType": "YulAssignment",
															"src": "3332:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:8"
																},
																"nativeSrc": "3340:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:8"
																		},
																		"nativeSrc": "3415:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:8"
																},
																"nativeSrc": "3368:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:8"
															},
															"nativeSrc": "3368:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:8",
														"nodeType": "YulTypedName",
														"src": "3294:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:8",
														"nodeType": "YulTypedName",
														"src": "3306:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:8",
														"nodeType": "YulTypedName",
														"src": "3317:4:8",
														"type": ""
													}
												],
												"src": "3230:210:8"
											},
											{
												"body": {
													"nativeSrc": "3511:53:8",
													"nodeType": "YulBlock",
													"src": "3511:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:8"
																		},
																		"nativeSrc": "3533:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:8"
																},
																"nativeSrc": "3521:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:8"
															},
															"nativeSrc": "3521:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:8",
														"nodeType": "YulTypedName",
														"src": "3499:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:8",
														"nodeType": "YulTypedName",
														"src": "3506:3:8",
														"type": ""
													}
												],
												"src": "3446:118:8"
											},
											{
												"body": {
													"nativeSrc": "3668:124:8",
													"nodeType": "YulBlock",
													"src": "3668:124:8",
													"statements": [
														{
															"nativeSrc": "3678:26:8",
															"nodeType": "YulAssignment",
															"src": "3678:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:8"
																},
																"nativeSrc": "3686:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:8"
																		},
																		"nativeSrc": "3767:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:8"
																},
																"nativeSrc": "3714:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:8"
															},
															"nativeSrc": "3714:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:8",
														"nodeType": "YulTypedName",
														"src": "3640:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:8",
														"nodeType": "YulTypedName",
														"src": "3652:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:8",
														"nodeType": "YulTypedName",
														"src": "3663:4:8",
														"type": ""
													}
												],
												"src": "3570:222:8"
											},
											{
												"body": {
													"nativeSrc": "3898:519:8",
													"nodeType": "YulBlock",
													"src": "3898:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:8",
																"nodeType": "YulBlock",
																"src": "3944:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:8"
																			},
																			"nativeSrc": "3946:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:8"
																		},
																		"nativeSrc": "3946:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:8"
																		},
																		"nativeSrc": "3915:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:8"
																},
																"nativeSrc": "3911:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:8"
															},
															"nativeSrc": "3908:119:8",
															"nodeType": "YulIf",
															"src": "3908:119:8"
														},
														{
															"nativeSrc": "4037:117:8",
															"nodeType": "YulBlock",
															"src": "4037:117:8",
															"statements": [
																{
																	"nativeSrc": "4052:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:8"
																				},
																				"nativeSrc": "4112:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:8"
																		},
																		"nativeSrc": "4091:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:8",
															"nodeType": "YulBlock",
															"src": "4164:118:8",
															"statements": [
																{
																	"nativeSrc": "4179:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:8"
																				},
																				"nativeSrc": "4240:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:8"
																		},
																		"nativeSrc": "4219:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:8",
															"nodeType": "YulBlock",
															"src": "4292:118:8",
															"statements": [
																{
																	"nativeSrc": "4307:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:8"
																				},
																				"nativeSrc": "4368:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:8"
																		},
																		"nativeSrc": "4347:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:8",
														"nodeType": "YulTypedName",
														"src": "3852:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:8",
														"nodeType": "YulTypedName",
														"src": "3863:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:8",
														"nodeType": "YulTypedName",
														"src": "3875:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:8",
														"nodeType": "YulTypedName",
														"src": "3883:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:8",
														"nodeType": "YulTypedName",
														"src": "3891:6:8",
														"type": ""
													}
												],
												"src": "3798:619:8"
											},
											{
												"body": {
													"nativeSrc": "4466:43:8",
													"nodeType": "YulBlock",
													"src": "4466:43:8",
													"statements": [
														{
															"nativeSrc": "4476:27:8",
															"nodeType": "YulAssignment",
															"src": "4476:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:8"
																},
																"nativeSrc": "4487:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:8",
														"nodeType": "YulTypedName",
														"src": "4448:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:8",
														"nodeType": "YulTypedName",
														"src": "4458:7:8",
														"type": ""
													}
												],
												"src": "4423:86:8"
											},
											{
												"body": {
													"nativeSrc": "4576:51:8",
													"nodeType": "YulBlock",
													"src": "4576:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:8"
																		},
																		"nativeSrc": "4598:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:8"
																},
																"nativeSrc": "4586:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:8"
															},
															"nativeSrc": "4586:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:8",
														"nodeType": "YulTypedName",
														"src": "4564:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:8",
														"nodeType": "YulTypedName",
														"src": "4571:3:8",
														"type": ""
													}
												],
												"src": "4515:112:8"
											},
											{
												"body": {
													"nativeSrc": "4727:120:8",
													"nodeType": "YulBlock",
													"src": "4727:120:8",
													"statements": [
														{
															"nativeSrc": "4737:26:8",
															"nodeType": "YulAssignment",
															"src": "4737:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:8"
																},
																"nativeSrc": "4745:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:8"
																		},
																		"nativeSrc": "4822:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:8"
																},
																"nativeSrc": "4773:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:8"
															},
															"nativeSrc": "4773:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:8",
														"nodeType": "YulTypedName",
														"src": "4699:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:8",
														"nodeType": "YulTypedName",
														"src": "4711:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:8",
														"nodeType": "YulTypedName",
														"src": "4722:4:8",
														"type": ""
													}
												],
												"src": "4633:214:8"
											},
											{
												"body": {
													"nativeSrc": "4919:263:8",
													"nodeType": "YulBlock",
													"src": "4919:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:8",
																"nodeType": "YulBlock",
																"src": "4965:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:8"
																			},
																			"nativeSrc": "4967:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:8"
																		},
																		"nativeSrc": "4967:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:8"
																		},
																		"nativeSrc": "4936:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:8"
																},
																"nativeSrc": "4932:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:8"
															},
															"nativeSrc": "4929:119:8",
															"nodeType": "YulIf",
															"src": "4929:119:8"
														},
														{
															"nativeSrc": "5058:117:8",
															"nodeType": "YulBlock",
															"src": "5058:117:8",
															"statements": [
																{
																	"nativeSrc": "5073:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:8"
																				},
																				"nativeSrc": "5133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:8"
																		},
																		"nativeSrc": "5112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4853:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:8",
														"nodeType": "YulTypedName",
														"src": "4889:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:8",
														"nodeType": "YulTypedName",
														"src": "4900:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:8",
														"nodeType": "YulTypedName",
														"src": "4912:6:8",
														"type": ""
													}
												],
												"src": "4853:329:8"
											},
											{
												"body": {
													"nativeSrc": "5254:263:8",
													"nodeType": "YulBlock",
													"src": "5254:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5300:83:8",
																"nodeType": "YulBlock",
																"src": "5300:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5302:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:8"
																			},
																			"nativeSrc": "5302:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:8"
																		},
																		"nativeSrc": "5302:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5275:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5271:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:8"
																		},
																		"nativeSrc": "5271:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5267:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:8"
																},
																"nativeSrc": "5267:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5267:32:8"
															},
															"nativeSrc": "5264:119:8",
															"nodeType": "YulIf",
															"src": "5264:119:8"
														},
														{
															"nativeSrc": "5393:117:8",
															"nodeType": "YulBlock",
															"src": "5393:117:8",
															"statements": [
																{
																	"nativeSrc": "5408:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5422:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5412:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5437:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5437:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5472:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5483:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5468:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:8"
																				},
																				"nativeSrc": "5468:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5492:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5447:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:8"
																		},
																		"nativeSrc": "5447:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5437:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5188:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5224:9:8",
														"nodeType": "YulTypedName",
														"src": "5224:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5235:7:8",
														"nodeType": "YulTypedName",
														"src": "5235:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5247:6:8",
														"nodeType": "YulTypedName",
														"src": "5247:6:8",
														"type": ""
													}
												],
												"src": "5188:329:8"
											},
											{
												"body": {
													"nativeSrc": "5588:53:8",
													"nodeType": "YulBlock",
													"src": "5588:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5605:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5628:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5610:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:8"
																		},
																		"nativeSrc": "5610:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:8"
																},
																"nativeSrc": "5598:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5598:37:8"
															},
															"nativeSrc": "5598:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5523:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5576:5:8",
														"nodeType": "YulTypedName",
														"src": "5576:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5583:3:8",
														"nodeType": "YulTypedName",
														"src": "5583:3:8",
														"type": ""
													}
												],
												"src": "5523:118:8"
											},
											{
												"body": {
													"nativeSrc": "5745:124:8",
													"nodeType": "YulBlock",
													"src": "5745:124:8",
													"statements": [
														{
															"nativeSrc": "5755:26:8",
															"nodeType": "YulAssignment",
															"src": "5755:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5767:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5778:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5763:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:8"
																},
																"nativeSrc": "5763:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5763:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5755:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5835:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5848:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5859:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5844:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:8"
																		},
																		"nativeSrc": "5844:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5791:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:8"
																},
																"nativeSrc": "5791:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5791:71:8"
															},
															"nativeSrc": "5791:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5647:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5717:9:8",
														"nodeType": "YulTypedName",
														"src": "5717:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5729:6:8",
														"nodeType": "YulTypedName",
														"src": "5729:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5740:4:8",
														"nodeType": "YulTypedName",
														"src": "5740:4:8",
														"type": ""
													}
												],
												"src": "5647:222:8"
											},
											{
												"body": {
													"nativeSrc": "5958:391:8",
													"nodeType": "YulBlock",
													"src": "5958:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6004:83:8",
																"nodeType": "YulBlock",
																"src": "6004:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6006:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:8"
																			},
																			"nativeSrc": "6006:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:8"
																		},
																		"nativeSrc": "6006:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5979:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5988:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5975:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:8"
																		},
																		"nativeSrc": "5975:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6000:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5971:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:8"
																},
																"nativeSrc": "5971:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5971:32:8"
															},
															"nativeSrc": "5968:119:8",
															"nodeType": "YulIf",
															"src": "5968:119:8"
														},
														{
															"nativeSrc": "6097:117:8",
															"nodeType": "YulBlock",
															"src": "6097:117:8",
															"statements": [
																{
																	"nativeSrc": "6112:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6126:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6116:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6141:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6141:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6176:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6187:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6172:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:8"
																				},
																				"nativeSrc": "6172:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6196:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6151:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:8"
																		},
																		"nativeSrc": "6151:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6141:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6224:118:8",
															"nodeType": "YulBlock",
															"src": "6224:118:8",
															"statements": [
																{
																	"nativeSrc": "6239:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6253:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6243:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6269:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6269:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6304:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6315:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6300:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:8"
																				},
																				"nativeSrc": "6300:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6324:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6279:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:8"
																		},
																		"nativeSrc": "6279:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6269:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5875:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5920:9:8",
														"nodeType": "YulTypedName",
														"src": "5920:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5931:7:8",
														"nodeType": "YulTypedName",
														"src": "5931:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5943:6:8",
														"nodeType": "YulTypedName",
														"src": "5943:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5951:6:8",
														"nodeType": "YulTypedName",
														"src": "5951:6:8",
														"type": ""
													}
												],
												"src": "5875:474:8"
											},
											{
												"body": {
													"nativeSrc": "6399:32:8",
													"nodeType": "YulBlock",
													"src": "6399:32:8",
													"statements": [
														{
															"nativeSrc": "6409:16:8",
															"nodeType": "YulAssignment",
															"src": "6409:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "6420:5:8",
																"nodeType": "YulIdentifier",
																"src": "6420:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6409:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "6409:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "6355:76:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6381:5:8",
														"nodeType": "YulTypedName",
														"src": "6381:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6391:7:8",
														"nodeType": "YulTypedName",
														"src": "6391:7:8",
														"type": ""
													}
												],
												"src": "6355:76:8"
											},
											{
												"body": {
													"nativeSrc": "6500:52:8",
													"nodeType": "YulBlock",
													"src": "6500:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6517:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6517:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6539:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6539:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "6522:16:8",
																			"nodeType": "YulIdentifier",
																			"src": "6522:16:8"
																		},
																		"nativeSrc": "6522:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6522:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6510:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6510:6:8"
																},
																"nativeSrc": "6510:36:8",
																"nodeType": "YulFunctionCall",
																"src": "6510:36:8"
															},
															"nativeSrc": "6510:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "6510:36:8"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "6437:115:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6488:5:8",
														"nodeType": "YulTypedName",
														"src": "6488:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6495:3:8",
														"nodeType": "YulTypedName",
														"src": "6495:3:8",
														"type": ""
													}
												],
												"src": "6437:115:8"
											},
											{
												"body": {
													"nativeSrc": "6654:122:8",
													"nodeType": "YulBlock",
													"src": "6654:122:8",
													"statements": [
														{
															"nativeSrc": "6664:26:8",
															"nodeType": "YulAssignment",
															"src": "6664:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6676:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6676:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6687:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6687:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6672:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6672:3:8"
																},
																"nativeSrc": "6672:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6672:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6664:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6664:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6742:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6742:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6755:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6755:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6766:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6766:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6751:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6751:3:8"
																		},
																		"nativeSrc": "6751:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6751:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "6700:41:8",
																	"nodeType": "YulIdentifier",
																	"src": "6700:41:8"
																},
																"nativeSrc": "6700:69:8",
																"nodeType": "YulFunctionCall",
																"src": "6700:69:8"
															},
															"nativeSrc": "6700:69:8",
															"nodeType": "YulExpressionStatement",
															"src": "6700:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "6558:218:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6626:9:8",
														"nodeType": "YulTypedName",
														"src": "6626:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6638:6:8",
														"nodeType": "YulTypedName",
														"src": "6638:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6649:4:8",
														"nodeType": "YulTypedName",
														"src": "6649:4:8",
														"type": ""
													}
												],
												"src": "6558:218:8"
											},
											{
												"body": {
													"nativeSrc": "6888:123:8",
													"nodeType": "YulBlock",
													"src": "6888:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6910:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6910:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6918:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6918:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:8"
																		},
																		"nativeSrc": "6906:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:14:8"
																	},
																	{
																		"hexValue": "4572726f722d4d4e545f4d554d4241492e736f6c2d56616c75656c6573735f54",
																		"kind": "string",
																		"nativeSrc": "6922:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6922:34:8",
																		"type": "",
																		"value": "Error-MNT_MUMBAI.sol-Valueless_T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6899:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6899:6:8"
																},
																"nativeSrc": "6899:58:8",
																"nodeType": "YulFunctionCall",
																"src": "6899:58:8"
															},
															"nativeSrc": "6899:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "6899:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6978:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6978:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6986:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6986:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6974:3:8"
																		},
																		"nativeSrc": "6974:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6974:15:8"
																	},
																	{
																		"hexValue": "72616e73616374696f6e",
																		"kind": "string",
																		"nativeSrc": "6991:12:8",
																		"nodeType": "YulLiteral",
																		"src": "6991:12:8",
																		"type": "",
																		"value": "ransaction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6967:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6967:6:8"
																},
																"nativeSrc": "6967:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6967:37:8"
															},
															"nativeSrc": "6967:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6967:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd",
												"nativeSrc": "6782:229:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6880:6:8",
														"nodeType": "YulTypedName",
														"src": "6880:6:8",
														"type": ""
													}
												],
												"src": "6782:229:8"
											},
											{
												"body": {
													"nativeSrc": "7163:220:8",
													"nodeType": "YulBlock",
													"src": "7163:220:8",
													"statements": [
														{
															"nativeSrc": "7173:74:8",
															"nodeType": "YulAssignment",
															"src": "7173:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7239:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7239:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7244:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7244:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7180:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7180:58:8"
																},
																"nativeSrc": "7180:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7180:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7173:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7345:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7345:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd",
																	"nativeSrc": "7256:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7256:88:8"
																},
																"nativeSrc": "7256:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7256:93:8"
															},
															"nativeSrc": "7256:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7256:93:8"
														},
														{
															"nativeSrc": "7358:19:8",
															"nodeType": "YulAssignment",
															"src": "7358:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7369:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7369:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7374:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7374:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7365:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7365:3:8"
																},
																"nativeSrc": "7365:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7365:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7358:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7358:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7017:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7151:3:8",
														"nodeType": "YulTypedName",
														"src": "7151:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7159:3:8",
														"nodeType": "YulTypedName",
														"src": "7159:3:8",
														"type": ""
													}
												],
												"src": "7017:366:8"
											},
											{
												"body": {
													"nativeSrc": "7560:248:8",
													"nodeType": "YulBlock",
													"src": "7560:248:8",
													"statements": [
														{
															"nativeSrc": "7570:26:8",
															"nodeType": "YulAssignment",
															"src": "7570:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7582:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7582:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7593:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7593:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7578:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7578:3:8"
																},
																"nativeSrc": "7578:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7578:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7570:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7570:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7617:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7617:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7628:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7628:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7613:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7613:3:8"
																		},
																		"nativeSrc": "7613:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7613:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7636:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7636:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7642:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7642:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7632:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7632:3:8"
																		},
																		"nativeSrc": "7632:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7632:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7606:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7606:6:8"
																},
																"nativeSrc": "7606:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7606:47:8"
															},
															"nativeSrc": "7606:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7606:47:8"
														},
														{
															"nativeSrc": "7662:139:8",
															"nodeType": "YulAssignment",
															"src": "7662:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7796:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7796:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7670:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7670:124:8"
																},
																"nativeSrc": "7670:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7670:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7662:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7662:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7389:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7540:9:8",
														"nodeType": "YulTypedName",
														"src": "7540:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7555:4:8",
														"nodeType": "YulTypedName",
														"src": "7555:4:8",
														"type": ""
													}
												],
												"src": "7389:419:8"
											},
											{
												"body": {
													"nativeSrc": "7842:152:8",
													"nodeType": "YulBlock",
													"src": "7842:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7859:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7859:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7862:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7862:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7852:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7852:6:8"
																},
																"nativeSrc": "7852:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7852:88:8"
															},
															"nativeSrc": "7852:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7852:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7956:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7956:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7959:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7959:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7949:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:8"
																},
																"nativeSrc": "7949:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7949:15:8"
															},
															"nativeSrc": "7949:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7949:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7983:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7983:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7973:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7973:6:8"
																},
																"nativeSrc": "7973:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7973:15:8"
															},
															"nativeSrc": "7973:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7973:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7814:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7814:180:8"
											},
											{
												"body": {
													"nativeSrc": "8051:51:8",
													"nodeType": "YulBlock",
													"src": "8051:51:8",
													"statements": [
														{
															"nativeSrc": "8061:34:8",
															"nodeType": "YulAssignment",
															"src": "8061:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8086:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8086:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8089:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8089:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8082:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:8"
																},
																"nativeSrc": "8082:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8082:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8061:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "8061:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8000:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8032:5:8",
														"nodeType": "YulTypedName",
														"src": "8032:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8042:8:8",
														"nodeType": "YulTypedName",
														"src": "8042:8:8",
														"type": ""
													}
												],
												"src": "8000:102:8"
											},
											{
												"body": {
													"nativeSrc": "8181:775:8",
													"nodeType": "YulBlock",
													"src": "8181:775:8",
													"statements": [
														{
															"nativeSrc": "8191:15:8",
															"nodeType": "YulAssignment",
															"src": "8191:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "8200:6:8",
																"nodeType": "YulIdentifier",
																"src": "8200:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8191:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8191:5:8"
																}
															]
														},
														{
															"nativeSrc": "8215:14:8",
															"nodeType": "YulAssignment",
															"src": "8215:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "8224:5:8",
																"nodeType": "YulIdentifier",
																"src": "8224:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8215:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8215:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8273:677:8",
																"nodeType": "YulBlock",
																"src": "8273:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8361:22:8",
																			"nodeType": "YulBlock",
																			"src": "8361:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8363:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "8363:16:8"
																						},
																						"nativeSrc": "8363:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8363:18:8"
																					},
																					"nativeSrc": "8363:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "8363:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8339:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8339:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8349:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8349:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8354:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8354:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8345:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8345:3:8"
																					},
																					"nativeSrc": "8345:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8345:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8336:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8336:2:8"
																			},
																			"nativeSrc": "8336:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8336:24:8"
																		},
																		"nativeSrc": "8333:50:8",
																		"nodeType": "YulIf",
																		"src": "8333:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "8428:419:8",
																			"nodeType": "YulBlock",
																			"src": "8428:419:8",
																			"statements": [
																				{
																					"nativeSrc": "8808:25:8",
																					"nodeType": "YulAssignment",
																					"src": "8808:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8821:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "8821:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8828:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "8828:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8817:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8817:3:8"
																						},
																						"nativeSrc": "8817:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8817:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8808:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "8808:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8403:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8403:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8413:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8413:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8399:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8399:3:8"
																			},
																			"nativeSrc": "8399:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8399:16:8"
																		},
																		"nativeSrc": "8396:451:8",
																		"nodeType": "YulIf",
																		"src": "8396:451:8"
																	},
																	{
																		"nativeSrc": "8860:23:8",
																		"nodeType": "YulAssignment",
																		"src": "8860:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8872:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8872:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8878:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8878:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8868:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8868:3:8"
																			},
																			"nativeSrc": "8868:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8868:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8860:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8860:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8896:44:8",
																		"nodeType": "YulAssignment",
																		"src": "8896:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8931:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8931:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8908:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "8908:22:8"
																			},
																			"nativeSrc": "8908:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8908:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8896:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "8896:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8249:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8249:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8259:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8259:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8246:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8246:2:8"
																},
																"nativeSrc": "8246:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8246:15:8"
															},
															"nativeSrc": "8238:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8262:2:8",
																"nodeType": "YulBlock",
																"src": "8262:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8242:3:8",
																"nodeType": "YulBlock",
																"src": "8242:3:8",
																"statements": []
															},
															"src": "8238:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8108:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8136:6:8",
														"nodeType": "YulTypedName",
														"src": "8136:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8144:5:8",
														"nodeType": "YulTypedName",
														"src": "8144:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8151:8:8",
														"nodeType": "YulTypedName",
														"src": "8151:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8161:3:8",
														"nodeType": "YulTypedName",
														"src": "8161:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8169:5:8",
														"nodeType": "YulTypedName",
														"src": "8169:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8176:4:8",
														"nodeType": "YulTypedName",
														"src": "8176:4:8",
														"type": ""
													}
												],
												"src": "8108:848:8"
											},
											{
												"body": {
													"nativeSrc": "9022:1013:8",
													"nodeType": "YulBlock",
													"src": "9022:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9217:20:8",
																"nodeType": "YulBlock",
																"src": "9217:20:8",
																"statements": [
																	{
																		"nativeSrc": "9219:10:8",
																		"nodeType": "YulAssignment",
																		"src": "9219:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9228:1:8",
																			"nodeType": "YulLiteral",
																			"src": "9228:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9219:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9219:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9230:5:8",
																		"nodeType": "YulLeave",
																		"src": "9230:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9207:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9207:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9200:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9200:6:8"
																},
																"nativeSrc": "9200:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9200:16:8"
															},
															"nativeSrc": "9197:40:8",
															"nodeType": "YulIf",
															"src": "9197:40:8"
														},
														{
															"body": {
																"nativeSrc": "9262:20:8",
																"nodeType": "YulBlock",
																"src": "9262:20:8",
																"statements": [
																	{
																		"nativeSrc": "9264:10:8",
																		"nodeType": "YulAssignment",
																		"src": "9264:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9273:1:8",
																			"nodeType": "YulLiteral",
																			"src": "9273:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9264:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9264:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9275:5:8",
																		"nodeType": "YulLeave",
																		"src": "9275:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9256:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9256:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9249:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9249:6:8"
																},
																"nativeSrc": "9249:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9249:12:8"
															},
															"nativeSrc": "9246:36:8",
															"nodeType": "YulIf",
															"src": "9246:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9392:20:8",
																		"nodeType": "YulBlock",
																		"src": "9392:20:8",
																		"statements": [
																			{
																				"nativeSrc": "9394:10:8",
																				"nodeType": "YulAssignment",
																				"src": "9394:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9403:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9403:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9394:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9394:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9405:5:8",
																				"nodeType": "YulLeave",
																				"src": "9405:5:8"
																			}
																		]
																	},
																	"nativeSrc": "9385:27:8",
																	"nodeType": "YulCase",
																	"src": "9385:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9390:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9436:176:8",
																		"nodeType": "YulBlock",
																		"src": "9436:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9471:22:8",
																					"nodeType": "YulBlock",
																					"src": "9471:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9473:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9473:16:8"
																								},
																								"nativeSrc": "9473:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9473:18:8"
																							},
																							"nativeSrc": "9473:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9473:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9456:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9456:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9466:3:8",
																							"nodeType": "YulLiteral",
																							"src": "9466:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9453:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9453:2:8"
																					},
																					"nativeSrc": "9453:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9453:17:8"
																				},
																				"nativeSrc": "9450:43:8",
																				"nodeType": "YulIf",
																				"src": "9450:43:8"
																			},
																			{
																				"nativeSrc": "9506:25:8",
																				"nodeType": "YulAssignment",
																				"src": "9506:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9519:1:8",
																							"nodeType": "YulLiteral",
																							"src": "9519:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9522:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9522:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9515:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9515:3:8"
																					},
																					"nativeSrc": "9515:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9515:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9506:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9506:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9562:22:8",
																					"nodeType": "YulBlock",
																					"src": "9562:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9564:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9564:16:8"
																								},
																								"nativeSrc": "9564:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9564:18:8"
																							},
																							"nativeSrc": "9564:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9564:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9550:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "9550:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9557:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9557:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9547:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9547:2:8"
																					},
																					"nativeSrc": "9547:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9547:14:8"
																				},
																				"nativeSrc": "9544:40:8",
																				"nodeType": "YulIf",
																				"src": "9544:40:8"
																			},
																			{
																				"nativeSrc": "9597:5:8",
																				"nodeType": "YulLeave",
																				"src": "9597:5:8"
																			}
																		]
																	},
																	"nativeSrc": "9421:191:8",
																	"nodeType": "YulCase",
																	"src": "9421:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9426:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9426:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9342:4:8",
																"nodeType": "YulIdentifier",
																"src": "9342:4:8"
															},
															"nativeSrc": "9335:277:8",
															"nodeType": "YulSwitch",
															"src": "9335:277:8"
														},
														{
															"body": {
																"nativeSrc": "9744:123:8",
																"nodeType": "YulBlock",
																"src": "9744:123:8",
																"statements": [
																	{
																		"nativeSrc": "9758:28:8",
																		"nodeType": "YulAssignment",
																		"src": "9758:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9771:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9771:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9777:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9777:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9767:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9767:3:8"
																			},
																			"nativeSrc": "9767:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9767:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9758:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9758:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9817:22:8",
																			"nodeType": "YulBlock",
																			"src": "9817:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9819:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "9819:16:8"
																						},
																						"nativeSrc": "9819:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9819:18:8"
																					},
																					"nativeSrc": "9819:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "9819:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9805:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "9805:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9812:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9812:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9802:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "9802:2:8"
																			},
																			"nativeSrc": "9802:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9802:14:8"
																		},
																		"nativeSrc": "9799:40:8",
																		"nodeType": "YulIf",
																		"src": "9799:40:8"
																	},
																	{
																		"nativeSrc": "9852:5:8",
																		"nodeType": "YulLeave",
																		"src": "9852:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9647:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9647:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9653:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9653:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9644:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9644:2:8"
																				},
																				"nativeSrc": "9644:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9644:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9661:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9661:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9671:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9671:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9658:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9658:2:8"
																				},
																				"nativeSrc": "9658:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9658:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9640:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9640:3:8"
																		},
																		"nativeSrc": "9640:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9640:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9696:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9696:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9702:3:8",
																						"nodeType": "YulLiteral",
																						"src": "9702:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9693:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9693:2:8"
																				},
																				"nativeSrc": "9693:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9693:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9711:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9711:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9721:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9721:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9708:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9708:2:8"
																				},
																				"nativeSrc": "9708:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9708:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9689:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9689:3:8"
																		},
																		"nativeSrc": "9689:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9689:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9624:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9624:2:8"
																},
																"nativeSrc": "9624:111:8",
																"nodeType": "YulFunctionCall",
																"src": "9624:111:8"
															},
															"nativeSrc": "9621:246:8",
															"nodeType": "YulIf",
															"src": "9621:246:8"
														},
														{
															"nativeSrc": "9877:57:8",
															"nodeType": "YulAssignment",
															"src": "9877:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9911:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9911:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9914:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9914:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9920:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9920:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9930:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9930:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9892:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "9892:18:8"
																},
																"nativeSrc": "9892:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9892:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9877:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9877:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "9884:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9884:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9973:22:8",
																"nodeType": "YulBlock",
																"src": "9973:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9975:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9975:16:8"
																			},
																			"nativeSrc": "9975:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9975:18:8"
																		},
																		"nativeSrc": "9975:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9975:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9950:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9950:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9961:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9961:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9966:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9966:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9957:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9957:3:8"
																		},
																		"nativeSrc": "9957:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9957:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9947:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9947:2:8"
																},
																"nativeSrc": "9947:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9947:25:8"
															},
															"nativeSrc": "9944:51:8",
															"nodeType": "YulIf",
															"src": "9944:51:8"
														},
														{
															"nativeSrc": "10004:25:8",
															"nodeType": "YulAssignment",
															"src": "10004:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10017:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10017:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10024:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10024:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10013:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10013:3:8"
																},
																"nativeSrc": "10013:16:8",
																"nodeType": "YulFunctionCall",
																"src": "10013:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10004:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10004:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8962:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8992:4:8",
														"nodeType": "YulTypedName",
														"src": "8992:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8998:8:8",
														"nodeType": "YulTypedName",
														"src": "8998:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9008:3:8",
														"nodeType": "YulTypedName",
														"src": "9008:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9016:5:8",
														"nodeType": "YulTypedName",
														"src": "9016:5:8",
														"type": ""
													}
												],
												"src": "8962:1073:8"
											},
											{
												"body": {
													"nativeSrc": "10107:219:8",
													"nodeType": "YulBlock",
													"src": "10107:219:8",
													"statements": [
														{
															"nativeSrc": "10117:31:8",
															"nodeType": "YulAssignment",
															"src": "10117:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10143:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10143:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10125:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10125:17:8"
																},
																"nativeSrc": "10125:23:8",
																"nodeType": "YulFunctionCall",
																"src": "10125:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10117:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10117:4:8"
																}
															]
														},
														{
															"nativeSrc": "10157:39:8",
															"nodeType": "YulAssignment",
															"src": "10157:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10187:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10187:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10169:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10169:17:8"
																},
																"nativeSrc": "10169:27:8",
																"nodeType": "YulFunctionCall",
																"src": "10169:27:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10157:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "10157:8:8"
																}
															]
														},
														{
															"nativeSrc": "10206:113:8",
															"nodeType": "YulAssignment",
															"src": "10206:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10236:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10236:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10242:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10242:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10252:66:8",
																		"nodeType": "YulLiteral",
																		"src": "10252:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10215:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "10215:20:8"
																},
																"nativeSrc": "10215:104:8",
																"nodeType": "YulFunctionCall",
																"src": "10215:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10206:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10206:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "10041:285:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10082:4:8",
														"nodeType": "YulTypedName",
														"src": "10082:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10088:8:8",
														"nodeType": "YulTypedName",
														"src": "10088:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10101:5:8",
														"nodeType": "YulTypedName",
														"src": "10101:5:8",
														"type": ""
													}
												],
												"src": "10041:285:8"
											},
											{
												"body": {
													"nativeSrc": "10380:362:8",
													"nodeType": "YulBlock",
													"src": "10380:362:8",
													"statements": [
														{
															"nativeSrc": "10390:25:8",
															"nodeType": "YulAssignment",
															"src": "10390:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10413:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10413:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10395:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10395:17:8"
																},
																"nativeSrc": "10395:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10395:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10390:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10390:1:8"
																}
															]
														},
														{
															"nativeSrc": "10424:25:8",
															"nodeType": "YulAssignment",
															"src": "10424:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10447:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10447:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10429:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10429:17:8"
																},
																"nativeSrc": "10429:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10429:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10424:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10424:1:8"
																}
															]
														},
														{
															"nativeSrc": "10458:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10458:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10481:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10481:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10484:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10484:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10477:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10477:3:8"
																},
																"nativeSrc": "10477:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10477:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10462:11:8",
																	"nodeType": "YulTypedName",
																	"src": "10462:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10495:41:8",
															"nodeType": "YulAssignment",
															"src": "10495:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10524:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "10524:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10506:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10506:17:8"
																},
																"nativeSrc": "10506:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10506:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10495:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10495:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10713:22:8",
																"nodeType": "YulBlock",
																"src": "10713:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10715:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10715:16:8"
																			},
																			"nativeSrc": "10715:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10715:18:8"
																		},
																		"nativeSrc": "10715:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10715:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10646:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10646:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10639:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10639:6:8"
																				},
																				"nativeSrc": "10639:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10639:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10669:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10669:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10676:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "10676:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10685:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "10685:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10672:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10672:3:8"
																						},
																						"nativeSrc": "10672:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10672:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10666:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10666:2:8"
																				},
																				"nativeSrc": "10666:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10666:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10619:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10619:2:8"
																		},
																		"nativeSrc": "10619:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10619:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10599:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10599:6:8"
																},
																"nativeSrc": "10599:113:8",
																"nodeType": "YulFunctionCall",
																"src": "10599:113:8"
															},
															"nativeSrc": "10596:139:8",
															"nodeType": "YulIf",
															"src": "10596:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10332:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10363:1:8",
														"nodeType": "YulTypedName",
														"src": "10363:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10366:1:8",
														"nodeType": "YulTypedName",
														"src": "10366:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10372:7:8",
														"nodeType": "YulTypedName",
														"src": "10372:7:8",
														"type": ""
													}
												],
												"src": "10332:410:8"
											},
											{
												"body": {
													"nativeSrc": "10776:152:8",
													"nodeType": "YulBlock",
													"src": "10776:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10793:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10793:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10796:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10796:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10786:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10786:6:8"
																},
																"nativeSrc": "10786:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10786:88:8"
															},
															"nativeSrc": "10786:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10786:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10890:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10890:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10893:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10893:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10883:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10883:6:8"
																},
																"nativeSrc": "10883:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10883:15:8"
															},
															"nativeSrc": "10883:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10883:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10914:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10914:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10917:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10917:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10907:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10907:6:8"
																},
																"nativeSrc": "10907:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10907:15:8"
															},
															"nativeSrc": "10907:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10907:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10748:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10748:180:8"
											},
											{
												"body": {
													"nativeSrc": "10976:143:8",
													"nodeType": "YulBlock",
													"src": "10976:143:8",
													"statements": [
														{
															"nativeSrc": "10986:25:8",
															"nodeType": "YulAssignment",
															"src": "10986:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11009:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11009:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10991:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10991:17:8"
																},
																"nativeSrc": "10991:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10991:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10986:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10986:1:8"
																}
															]
														},
														{
															"nativeSrc": "11020:25:8",
															"nodeType": "YulAssignment",
															"src": "11020:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11043:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11043:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11025:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11025:17:8"
																},
																"nativeSrc": "11025:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11025:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11020:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11020:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11067:22:8",
																"nodeType": "YulBlock",
																"src": "11067:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11069:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11069:16:8"
																			},
																			"nativeSrc": "11069:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11069:18:8"
																		},
																		"nativeSrc": "11069:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11069:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11064:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11064:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11057:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11057:6:8"
																},
																"nativeSrc": "11057:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11057:9:8"
															},
															"nativeSrc": "11054:35:8",
															"nodeType": "YulIf",
															"src": "11054:35:8"
														},
														{
															"nativeSrc": "11099:14:8",
															"nodeType": "YulAssignment",
															"src": "11099:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11108:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11108:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11111:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11111:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11104:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11104:3:8"
																},
																"nativeSrc": "11104:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11104:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11099:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11099:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10934:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10965:1:8",
														"nodeType": "YulTypedName",
														"src": "10965:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10968:1:8",
														"nodeType": "YulTypedName",
														"src": "10968:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10974:1:8",
														"nodeType": "YulTypedName",
														"src": "10974:1:8",
														"type": ""
													}
												],
												"src": "10934:185:8"
											},
											{
												"body": {
													"nativeSrc": "11169:147:8",
													"nodeType": "YulBlock",
													"src": "11169:147:8",
													"statements": [
														{
															"nativeSrc": "11179:25:8",
															"nodeType": "YulAssignment",
															"src": "11179:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11202:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11202:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11184:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11184:17:8"
																},
																"nativeSrc": "11184:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11184:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11179:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11179:1:8"
																}
															]
														},
														{
															"nativeSrc": "11213:25:8",
															"nodeType": "YulAssignment",
															"src": "11213:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11236:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11236:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11218:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11218:17:8"
																},
																"nativeSrc": "11218:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11218:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11213:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11213:1:8"
																}
															]
														},
														{
															"nativeSrc": "11247:16:8",
															"nodeType": "YulAssignment",
															"src": "11247:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11258:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11258:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11261:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11261:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11254:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11254:3:8"
																},
																"nativeSrc": "11254:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11254:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11247:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11247:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11287:22:8",
																"nodeType": "YulBlock",
																"src": "11287:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11289:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11289:16:8"
																			},
																			"nativeSrc": "11289:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11289:18:8"
																		},
																		"nativeSrc": "11289:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11289:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11279:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11279:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11282:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11282:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11276:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11276:2:8"
																},
																"nativeSrc": "11276:10:8",
																"nodeType": "YulFunctionCall",
																"src": "11276:10:8"
															},
															"nativeSrc": "11273:36:8",
															"nodeType": "YulIf",
															"src": "11273:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11125:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11156:1:8",
														"nodeType": "YulTypedName",
														"src": "11156:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11159:1:8",
														"nodeType": "YulTypedName",
														"src": "11159:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11165:3:8",
														"nodeType": "YulTypedName",
														"src": "11165:3:8",
														"type": ""
													}
												],
												"src": "11125:191:8"
											},
											{
												"body": {
													"nativeSrc": "11428:121:8",
													"nodeType": "YulBlock",
													"src": "11428:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11450:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11450:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11458:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11458:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11446:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11446:3:8"
																		},
																		"nativeSrc": "11446:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11446:14:8"
																	},
																	{
																		"hexValue": "4572726f722d4d4e545f4d554d4241492e736f6c2d457863656564735f4d6178",
																		"kind": "string",
																		"nativeSrc": "11462:34:8",
																		"nodeType": "YulLiteral",
																		"src": "11462:34:8",
																		"type": "",
																		"value": "Error-MNT_MUMBAI.sol-Exceeds_Max"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11439:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11439:6:8"
																},
																"nativeSrc": "11439:58:8",
																"nodeType": "YulFunctionCall",
																"src": "11439:58:8"
															},
															"nativeSrc": "11439:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "11439:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11518:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11518:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11526:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11526:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11514:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11514:3:8"
																		},
																		"nativeSrc": "11514:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11514:15:8"
																	},
																	{
																		"hexValue": "5f42616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11531:10:8",
																		"nodeType": "YulLiteral",
																		"src": "11531:10:8",
																		"type": "",
																		"value": "_Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11507:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11507:6:8"
																},
																"nativeSrc": "11507:35:8",
																"nodeType": "YulFunctionCall",
																"src": "11507:35:8"
															},
															"nativeSrc": "11507:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "11507:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44",
												"nativeSrc": "11322:227:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11420:6:8",
														"nodeType": "YulTypedName",
														"src": "11420:6:8",
														"type": ""
													}
												],
												"src": "11322:227:8"
											},
											{
												"body": {
													"nativeSrc": "11701:220:8",
													"nodeType": "YulBlock",
													"src": "11701:220:8",
													"statements": [
														{
															"nativeSrc": "11711:74:8",
															"nodeType": "YulAssignment",
															"src": "11711:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11777:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11777:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11782:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11782:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11718:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11718:58:8"
																},
																"nativeSrc": "11718:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11718:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11711:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11711:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11883:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11883:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44",
																	"nativeSrc": "11794:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11794:88:8"
																},
																"nativeSrc": "11794:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11794:93:8"
															},
															"nativeSrc": "11794:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11794:93:8"
														},
														{
															"nativeSrc": "11896:19:8",
															"nodeType": "YulAssignment",
															"src": "11896:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11907:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11907:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11912:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11912:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11903:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11903:3:8"
																},
																"nativeSrc": "11903:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11903:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11896:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11896:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11555:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11689:3:8",
														"nodeType": "YulTypedName",
														"src": "11689:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11697:3:8",
														"nodeType": "YulTypedName",
														"src": "11697:3:8",
														"type": ""
													}
												],
												"src": "11555:366:8"
											},
											{
												"body": {
													"nativeSrc": "12098:248:8",
													"nodeType": "YulBlock",
													"src": "12098:248:8",
													"statements": [
														{
															"nativeSrc": "12108:26:8",
															"nodeType": "YulAssignment",
															"src": "12108:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12120:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12120:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12131:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12131:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12116:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12116:3:8"
																},
																"nativeSrc": "12116:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12116:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12108:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12108:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12155:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12155:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12166:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12166:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12151:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12151:3:8"
																		},
																		"nativeSrc": "12151:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12151:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12174:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12174:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12180:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12180:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12170:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12170:3:8"
																		},
																		"nativeSrc": "12170:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12170:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:8"
																},
																"nativeSrc": "12144:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12144:47:8"
															},
															"nativeSrc": "12144:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12144:47:8"
														},
														{
															"nativeSrc": "12200:139:8",
															"nodeType": "YulAssignment",
															"src": "12200:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12334:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12334:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12208:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12208:124:8"
																},
																"nativeSrc": "12208:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12208:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12200:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12200:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11927:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12078:9:8",
														"nodeType": "YulTypedName",
														"src": "12078:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12093:4:8",
														"nodeType": "YulTypedName",
														"src": "12093:4:8",
														"type": ""
													}
												],
												"src": "11927:419:8"
											},
											{
												"body": {
													"nativeSrc": "12534:371:8",
													"nodeType": "YulBlock",
													"src": "12534:371:8",
													"statements": [
														{
															"nativeSrc": "12544:27:8",
															"nodeType": "YulAssignment",
															"src": "12544:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12556:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12556:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12567:3:8",
																		"nodeType": "YulLiteral",
																		"src": "12567:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12552:3:8"
																},
																"nativeSrc": "12552:19:8",
																"nodeType": "YulFunctionCall",
																"src": "12552:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12544:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12544:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12625:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12625:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12638:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12638:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12649:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12649:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12634:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12634:3:8"
																		},
																		"nativeSrc": "12634:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12634:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12581:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12581:43:8"
																},
																"nativeSrc": "12581:71:8",
																"nodeType": "YulFunctionCall",
																"src": "12581:71:8"
															},
															"nativeSrc": "12581:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "12581:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12730:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12730:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12715:3:8"
																		},
																		"nativeSrc": "12715:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12715:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12662:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12662:43:8"
																},
																"nativeSrc": "12662:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12662:72:8"
															},
															"nativeSrc": "12662:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12662:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12788:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12788:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12801:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12801:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12812:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12812:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12797:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12797:3:8"
																		},
																		"nativeSrc": "12797:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12797:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12744:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12744:43:8"
																},
																"nativeSrc": "12744:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12744:72:8"
															},
															"nativeSrc": "12744:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12744:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12870:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12870:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12883:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12883:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12894:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12894:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12879:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12879:3:8"
																		},
																		"nativeSrc": "12879:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12879:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12826:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12826:43:8"
																},
																"nativeSrc": "12826:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12826:72:8"
															},
															"nativeSrc": "12826:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12826:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12352:553:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12482:9:8",
														"nodeType": "YulTypedName",
														"src": "12482:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12494:6:8",
														"nodeType": "YulTypedName",
														"src": "12494:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12502:6:8",
														"nodeType": "YulTypedName",
														"src": "12502:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12510:6:8",
														"nodeType": "YulTypedName",
														"src": "12510:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12518:6:8",
														"nodeType": "YulTypedName",
														"src": "12518:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12529:4:8",
														"nodeType": "YulTypedName",
														"src": "12529:4:8",
														"type": ""
													}
												],
												"src": "12352:553:8"
											},
											{
												"body": {
													"nativeSrc": "12939:152:8",
													"nodeType": "YulBlock",
													"src": "12939:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12956:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12956:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12959:77:8",
																		"nodeType": "YulLiteral",
																		"src": "12959:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12949:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12949:6:8"
																},
																"nativeSrc": "12949:88:8",
																"nodeType": "YulFunctionCall",
																"src": "12949:88:8"
															},
															"nativeSrc": "12949:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "12949:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13053:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13053:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13056:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13056:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13046:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13046:6:8"
																},
																"nativeSrc": "13046:15:8",
																"nodeType": "YulFunctionCall",
																"src": "13046:15:8"
															},
															"nativeSrc": "13046:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "13046:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13077:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13077:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13080:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13080:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13070:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13070:6:8"
																},
																"nativeSrc": "13070:15:8",
																"nodeType": "YulFunctionCall",
																"src": "13070:15:8"
															},
															"nativeSrc": "13070:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "13070:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12911:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12911:180:8"
											},
											{
												"body": {
													"nativeSrc": "13148:269:8",
													"nodeType": "YulBlock",
													"src": "13148:269:8",
													"statements": [
														{
															"nativeSrc": "13158:22:8",
															"nodeType": "YulAssignment",
															"src": "13158:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13172:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13172:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13178:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13178:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13168:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13168:3:8"
																},
																"nativeSrc": "13168:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13168:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13158:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13158:6:8"
																}
															]
														},
														{
															"nativeSrc": "13189:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13189:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13219:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13219:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13225:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13225:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13215:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13215:3:8"
																},
																"nativeSrc": "13215:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13215:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13193:18:8",
																	"nodeType": "YulTypedName",
																	"src": "13193:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13266:51:8",
																"nodeType": "YulBlock",
																"src": "13266:51:8",
																"statements": [
																	{
																		"nativeSrc": "13280:27:8",
																		"nodeType": "YulAssignment",
																		"src": "13280:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13294:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "13294:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13302:4:8",
																					"nodeType": "YulLiteral",
																					"src": "13302:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13290:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "13290:3:8"
																			},
																			"nativeSrc": "13290:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13290:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13280:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13280:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13246:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "13246:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13239:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13239:6:8"
																},
																"nativeSrc": "13239:26:8",
																"nodeType": "YulFunctionCall",
																"src": "13239:26:8"
															},
															"nativeSrc": "13236:81:8",
															"nodeType": "YulIf",
															"src": "13236:81:8"
														},
														{
															"body": {
																"nativeSrc": "13369:42:8",
																"nodeType": "YulBlock",
																"src": "13369:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13383:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "13383:16:8"
																			},
																			"nativeSrc": "13383:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13383:18:8"
																		},
																		"nativeSrc": "13383:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13383:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13333:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "13333:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13356:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13356:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13364:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13364:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13353:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "13353:2:8"
																		},
																		"nativeSrc": "13353:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13353:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13330:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13330:2:8"
																},
																"nativeSrc": "13330:38:8",
																"nodeType": "YulFunctionCall",
																"src": "13330:38:8"
															},
															"nativeSrc": "13327:84:8",
															"nodeType": "YulIf",
															"src": "13327:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13097:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13132:4:8",
														"nodeType": "YulTypedName",
														"src": "13132:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13141:6:8",
														"nodeType": "YulTypedName",
														"src": "13141:6:8",
														"type": ""
													}
												],
												"src": "13097:320:8"
											},
											{
												"body": {
													"nativeSrc": "13529:72:8",
													"nodeType": "YulBlock",
													"src": "13529:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13551:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13551:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13559:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13559:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13547:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13547:3:8"
																		},
																		"nativeSrc": "13547:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13547:14:8"
																	},
																	{
																		"hexValue": "4572726f722d4d4e545f4d554d4241492e736f6c2d4f776e61626c65",
																		"kind": "string",
																		"nativeSrc": "13563:30:8",
																		"nodeType": "YulLiteral",
																		"src": "13563:30:8",
																		"type": "",
																		"value": "Error-MNT_MUMBAI.sol-Ownable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13540:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13540:6:8"
																},
																"nativeSrc": "13540:54:8",
																"nodeType": "YulFunctionCall",
																"src": "13540:54:8"
															},
															"nativeSrc": "13540:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "13540:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6",
												"nativeSrc": "13423:178:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13521:6:8",
														"nodeType": "YulTypedName",
														"src": "13521:6:8",
														"type": ""
													}
												],
												"src": "13423:178:8"
											},
											{
												"body": {
													"nativeSrc": "13753:220:8",
													"nodeType": "YulBlock",
													"src": "13753:220:8",
													"statements": [
														{
															"nativeSrc": "13763:74:8",
															"nodeType": "YulAssignment",
															"src": "13763:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13829:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13829:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13834:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13834:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13770:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13770:58:8"
																},
																"nativeSrc": "13770:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13770:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13763:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13763:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13935:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13935:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6",
																	"nativeSrc": "13846:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13846:88:8"
																},
																"nativeSrc": "13846:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13846:93:8"
															},
															"nativeSrc": "13846:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13846:93:8"
														},
														{
															"nativeSrc": "13948:19:8",
															"nodeType": "YulAssignment",
															"src": "13948:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13959:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13959:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13964:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13955:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13955:3:8"
																},
																"nativeSrc": "13955:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13955:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13948:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13948:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13607:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13741:3:8",
														"nodeType": "YulTypedName",
														"src": "13741:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13749:3:8",
														"nodeType": "YulTypedName",
														"src": "13749:3:8",
														"type": ""
													}
												],
												"src": "13607:366:8"
											},
											{
												"body": {
													"nativeSrc": "14150:248:8",
													"nodeType": "YulBlock",
													"src": "14150:248:8",
													"statements": [
														{
															"nativeSrc": "14160:26:8",
															"nodeType": "YulAssignment",
															"src": "14160:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14172:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14172:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14183:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14183:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14168:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14168:3:8"
																},
																"nativeSrc": "14168:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14168:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14160:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14160:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14207:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14207:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14218:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14218:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14203:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14203:3:8"
																		},
																		"nativeSrc": "14203:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14203:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14226:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14226:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14232:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14232:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14222:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14222:3:8"
																		},
																		"nativeSrc": "14222:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14222:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14196:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14196:6:8"
																},
																"nativeSrc": "14196:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14196:47:8"
															},
															"nativeSrc": "14196:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14196:47:8"
														},
														{
															"nativeSrc": "14252:139:8",
															"nodeType": "YulAssignment",
															"src": "14252:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14386:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14386:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14260:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14260:124:8"
																},
																"nativeSrc": "14260:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14260:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14252:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14252:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13979:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14130:9:8",
														"nodeType": "YulTypedName",
														"src": "14130:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14145:4:8",
														"nodeType": "YulTypedName",
														"src": "14145:4:8",
														"type": ""
													}
												],
												"src": "13979:419:8"
											},
											{
												"body": {
													"nativeSrc": "14530:206:8",
													"nodeType": "YulBlock",
													"src": "14530:206:8",
													"statements": [
														{
															"nativeSrc": "14540:26:8",
															"nodeType": "YulAssignment",
															"src": "14540:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14552:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14552:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14563:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14563:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14548:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14548:3:8"
																},
																"nativeSrc": "14548:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14548:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14540:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14540:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14620:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14620:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14633:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14633:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14644:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14644:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14629:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14629:3:8"
																		},
																		"nativeSrc": "14629:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14629:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14576:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14576:43:8"
																},
																"nativeSrc": "14576:71:8",
																"nodeType": "YulFunctionCall",
																"src": "14576:71:8"
															},
															"nativeSrc": "14576:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "14576:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14701:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14701:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14714:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14714:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14725:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14725:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14710:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14710:3:8"
																		},
																		"nativeSrc": "14710:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14710:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14657:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14657:43:8"
																},
																"nativeSrc": "14657:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14657:72:8"
															},
															"nativeSrc": "14657:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14657:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14404:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14494:9:8",
														"nodeType": "YulTypedName",
														"src": "14494:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14506:6:8",
														"nodeType": "YulTypedName",
														"src": "14506:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14514:6:8",
														"nodeType": "YulTypedName",
														"src": "14514:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14525:4:8",
														"nodeType": "YulTypedName",
														"src": "14525:4:8",
														"type": ""
													}
												],
												"src": "14404:332:8"
											},
											{
												"body": {
													"nativeSrc": "14896:288:8",
													"nodeType": "YulBlock",
													"src": "14896:288:8",
													"statements": [
														{
															"nativeSrc": "14906:26:8",
															"nodeType": "YulAssignment",
															"src": "14906:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14918:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14918:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14929:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14929:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14914:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14914:3:8"
																},
																"nativeSrc": "14914:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14914:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14906:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14906:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14986:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14986:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14999:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14999:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15010:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15010:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14995:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14995:3:8"
																		},
																		"nativeSrc": "14995:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14995:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14942:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14942:43:8"
																},
																"nativeSrc": "14942:71:8",
																"nodeType": "YulFunctionCall",
																"src": "14942:71:8"
															},
															"nativeSrc": "14942:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "14942:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15067:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15067:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15080:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15080:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15091:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15091:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15076:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15076:3:8"
																		},
																		"nativeSrc": "15076:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15076:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15023:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15023:43:8"
																},
																"nativeSrc": "15023:72:8",
																"nodeType": "YulFunctionCall",
																"src": "15023:72:8"
															},
															"nativeSrc": "15023:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "15023:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15149:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15149:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15162:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15162:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15173:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15173:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15158:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15158:3:8"
																		},
																		"nativeSrc": "15158:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15158:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15105:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15105:43:8"
																},
																"nativeSrc": "15105:72:8",
																"nodeType": "YulFunctionCall",
																"src": "15105:72:8"
															},
															"nativeSrc": "15105:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "15105:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14742:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14852:9:8",
														"nodeType": "YulTypedName",
														"src": "14852:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14864:6:8",
														"nodeType": "YulTypedName",
														"src": "14864:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14872:6:8",
														"nodeType": "YulTypedName",
														"src": "14872:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14880:6:8",
														"nodeType": "YulTypedName",
														"src": "14880:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14891:4:8",
														"nodeType": "YulTypedName",
														"src": "14891:4:8",
														"type": ""
													}
												],
												"src": "14742:442:8"
											},
											{
												"body": {
													"nativeSrc": "15234:61:8",
													"nodeType": "YulBlock",
													"src": "15234:61:8",
													"statements": [
														{
															"nativeSrc": "15244:45:8",
															"nodeType": "YulAssignment",
															"src": "15244:45:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15259:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15259:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15266:22:8",
																		"nodeType": "YulLiteral",
																		"src": "15266:22:8",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15255:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15255:3:8"
																},
																"nativeSrc": "15255:34:8",
																"nodeType": "YulFunctionCall",
																"src": "15255:34:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15244:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "15244:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "15190:105:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15216:5:8",
														"nodeType": "YulTypedName",
														"src": "15216:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15226:7:8",
														"nodeType": "YulTypedName",
														"src": "15226:7:8",
														"type": ""
													}
												],
												"src": "15190:105:8"
											},
											{
												"body": {
													"nativeSrc": "15343:78:8",
													"nodeType": "YulBlock",
													"src": "15343:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "15399:16:8",
																"nodeType": "YulBlock",
																"src": "15399:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15408:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15408:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15411:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15411:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15401:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15401:6:8"
																			},
																			"nativeSrc": "15401:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15401:12:8"
																		},
																		"nativeSrc": "15401:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15401:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15366:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "15366:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15390:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "15390:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "15373:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "15373:16:8"
																				},
																				"nativeSrc": "15373:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15373:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15363:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "15363:2:8"
																		},
																		"nativeSrc": "15363:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15363:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15356:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15356:6:8"
																},
																"nativeSrc": "15356:42:8",
																"nodeType": "YulFunctionCall",
																"src": "15356:42:8"
															},
															"nativeSrc": "15353:62:8",
															"nodeType": "YulIf",
															"src": "15353:62:8"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "15301:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15336:5:8",
														"nodeType": "YulTypedName",
														"src": "15336:5:8",
														"type": ""
													}
												],
												"src": "15301:120:8"
											},
											{
												"body": {
													"nativeSrc": "15489:79:8",
													"nodeType": "YulBlock",
													"src": "15489:79:8",
													"statements": [
														{
															"nativeSrc": "15499:22:8",
															"nodeType": "YulAssignment",
															"src": "15499:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15514:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15514:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15508:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15508:5:8"
																},
																"nativeSrc": "15508:13:8",
																"nodeType": "YulFunctionCall",
																"src": "15508:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15499:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15499:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15556:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15556:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "15530:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "15530:25:8"
																},
																"nativeSrc": "15530:32:8",
																"nodeType": "YulFunctionCall",
																"src": "15530:32:8"
															},
															"nativeSrc": "15530:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "15530:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "15427:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15467:6:8",
														"nodeType": "YulTypedName",
														"src": "15467:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15475:3:8",
														"nodeType": "YulTypedName",
														"src": "15475:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15483:5:8",
														"nodeType": "YulTypedName",
														"src": "15483:5:8",
														"type": ""
													}
												],
												"src": "15427:141:8"
											},
											{
												"body": {
													"nativeSrc": "15616:78:8",
													"nodeType": "YulBlock",
													"src": "15616:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "15672:16:8",
																"nodeType": "YulBlock",
																"src": "15672:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15681:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15681:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15684:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15684:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15674:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15674:6:8"
																			},
																			"nativeSrc": "15674:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15674:12:8"
																		},
																		"nativeSrc": "15674:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15674:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15639:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "15639:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15663:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "15663:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "15646:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "15646:16:8"
																				},
																				"nativeSrc": "15646:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15646:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15636:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "15636:2:8"
																		},
																		"nativeSrc": "15636:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15636:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15629:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15629:6:8"
																},
																"nativeSrc": "15629:42:8",
																"nodeType": "YulFunctionCall",
																"src": "15629:42:8"
															},
															"nativeSrc": "15626:62:8",
															"nodeType": "YulIf",
															"src": "15626:62:8"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "15574:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15609:5:8",
														"nodeType": "YulTypedName",
														"src": "15609:5:8",
														"type": ""
													}
												],
												"src": "15574:120:8"
											},
											{
												"body": {
													"nativeSrc": "15762:79:8",
													"nodeType": "YulBlock",
													"src": "15762:79:8",
													"statements": [
														{
															"nativeSrc": "15772:22:8",
															"nodeType": "YulAssignment",
															"src": "15772:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15787:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15787:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15781:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15781:5:8"
																},
																"nativeSrc": "15781:13:8",
																"nodeType": "YulFunctionCall",
																"src": "15781:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15772:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15772:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15829:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15829:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "15803:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "15803:25:8"
																},
																"nativeSrc": "15803:32:8",
																"nodeType": "YulFunctionCall",
																"src": "15803:32:8"
															},
															"nativeSrc": "15803:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "15803:32:8"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "15700:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15740:6:8",
														"nodeType": "YulTypedName",
														"src": "15740:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15748:3:8",
														"nodeType": "YulTypedName",
														"src": "15748:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15756:5:8",
														"nodeType": "YulTypedName",
														"src": "15756:5:8",
														"type": ""
													}
												],
												"src": "15700:141:8"
											},
											{
												"body": {
													"nativeSrc": "15910:80:8",
													"nodeType": "YulBlock",
													"src": "15910:80:8",
													"statements": [
														{
															"nativeSrc": "15920:22:8",
															"nodeType": "YulAssignment",
															"src": "15920:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15935:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15935:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15929:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15929:5:8"
																},
																"nativeSrc": "15929:13:8",
																"nodeType": "YulFunctionCall",
																"src": "15929:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15920:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15920:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15978:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15978:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "15951:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "15951:26:8"
																},
																"nativeSrc": "15951:33:8",
																"nodeType": "YulFunctionCall",
																"src": "15951:33:8"
															},
															"nativeSrc": "15951:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "15951:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "15847:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15888:6:8",
														"nodeType": "YulTypedName",
														"src": "15888:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15896:3:8",
														"nodeType": "YulTypedName",
														"src": "15896:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15904:5:8",
														"nodeType": "YulTypedName",
														"src": "15904:5:8",
														"type": ""
													}
												],
												"src": "15847:143:8"
											},
											{
												"body": {
													"nativeSrc": "16138:829:8",
													"nodeType": "YulBlock",
													"src": "16138:829:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "16185:83:8",
																"nodeType": "YulBlock",
																"src": "16185:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16187:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "16187:77:8"
																			},
																			"nativeSrc": "16187:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16187:79:8"
																		},
																		"nativeSrc": "16187:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16187:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16159:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16159:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16168:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16168:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16155:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16155:3:8"
																		},
																		"nativeSrc": "16155:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16155:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16180:3:8",
																		"nodeType": "YulLiteral",
																		"src": "16180:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16151:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16151:3:8"
																},
																"nativeSrc": "16151:33:8",
																"nodeType": "YulFunctionCall",
																"src": "16151:33:8"
															},
															"nativeSrc": "16148:120:8",
															"nodeType": "YulIf",
															"src": "16148:120:8"
														},
														{
															"nativeSrc": "16278:127:8",
															"nodeType": "YulBlock",
															"src": "16278:127:8",
															"statements": [
																{
																	"nativeSrc": "16293:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16293:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16307:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16307:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16297:6:8",
																			"nodeType": "YulTypedName",
																			"src": "16297:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16322:73:8",
																	"nodeType": "YulAssignment",
																	"src": "16322:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16367:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "16367:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16378:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16378:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16363:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16363:3:8"
																				},
																				"nativeSrc": "16363:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16363:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16387:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16387:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "16332:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "16332:30:8"
																		},
																		"nativeSrc": "16332:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16332:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16322:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "16322:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16415:128:8",
															"nodeType": "YulBlock",
															"src": "16415:128:8",
															"statements": [
																{
																	"nativeSrc": "16430:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16430:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16444:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16444:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16434:6:8",
																			"nodeType": "YulTypedName",
																			"src": "16434:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16460:73:8",
																	"nodeType": "YulAssignment",
																	"src": "16460:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16505:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "16505:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16516:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16516:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16501:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16501:3:8"
																				},
																				"nativeSrc": "16501:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16501:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16525:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16525:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "16470:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "16470:30:8"
																		},
																		"nativeSrc": "16470:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16470:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16460:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "16460:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16553:129:8",
															"nodeType": "YulBlock",
															"src": "16553:129:8",
															"statements": [
																{
																	"nativeSrc": "16568:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16568:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16582:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16582:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16572:6:8",
																			"nodeType": "YulTypedName",
																			"src": "16572:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16598:74:8",
																	"nodeType": "YulAssignment",
																	"src": "16598:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16644:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "16644:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16655:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16655:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16640:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16640:3:8"
																				},
																				"nativeSrc": "16640:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16640:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16664:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16664:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16608:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "16608:31:8"
																		},
																		"nativeSrc": "16608:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16608:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16598:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "16598:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16692:129:8",
															"nodeType": "YulBlock",
															"src": "16692:129:8",
															"statements": [
																{
																	"nativeSrc": "16707:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16707:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16721:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16721:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16711:6:8",
																			"nodeType": "YulTypedName",
																			"src": "16711:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16737:74:8",
																	"nodeType": "YulAssignment",
																	"src": "16737:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16783:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "16783:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16794:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16794:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16779:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16779:3:8"
																				},
																				"nativeSrc": "16779:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16779:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16803:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16803:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16747:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "16747:31:8"
																		},
																		"nativeSrc": "16747:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16747:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16737:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "16737:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16831:129:8",
															"nodeType": "YulBlock",
															"src": "16831:129:8",
															"statements": [
																{
																	"nativeSrc": "16846:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16846:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16860:3:8",
																		"nodeType": "YulLiteral",
																		"src": "16860:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16850:6:8",
																			"nodeType": "YulTypedName",
																			"src": "16850:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16877:73:8",
																	"nodeType": "YulAssignment",
																	"src": "16877:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16922:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "16922:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16933:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16933:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16918:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16918:3:8"
																				},
																				"nativeSrc": "16918:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16918:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16942:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16942:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "16887:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "16887:30:8"
																		},
																		"nativeSrc": "16887:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16887:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "16877:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "16877:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "15996:971:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16076:9:8",
														"nodeType": "YulTypedName",
														"src": "16076:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16087:7:8",
														"nodeType": "YulTypedName",
														"src": "16087:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16099:6:8",
														"nodeType": "YulTypedName",
														"src": "16099:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16107:6:8",
														"nodeType": "YulTypedName",
														"src": "16107:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16115:6:8",
														"nodeType": "YulTypedName",
														"src": "16115:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16123:6:8",
														"nodeType": "YulTypedName",
														"src": "16123:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16131:6:8",
														"nodeType": "YulTypedName",
														"src": "16131:6:8",
														"type": ""
													}
												],
												"src": "15996:971:8"
											},
											{
												"body": {
													"nativeSrc": "17014:344:8",
													"nodeType": "YulBlock",
													"src": "17014:344:8",
													"statements": [
														{
															"nativeSrc": "17024:24:8",
															"nodeType": "YulAssignment",
															"src": "17024:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17046:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "17046:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "17029:16:8",
																	"nodeType": "YulIdentifier",
																	"src": "17029:16:8"
																},
																"nativeSrc": "17029:19:8",
																"nodeType": "YulFunctionCall",
																"src": "17029:19:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17024:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "17024:1:8"
																}
															]
														},
														{
															"nativeSrc": "17057:24:8",
															"nodeType": "YulAssignment",
															"src": "17057:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17079:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "17079:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "17062:16:8",
																	"nodeType": "YulIdentifier",
																	"src": "17062:16:8"
																},
																"nativeSrc": "17062:19:8",
																"nodeType": "YulFunctionCall",
																"src": "17062:19:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17057:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "17057:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17103:22:8",
																"nodeType": "YulBlock",
																"src": "17103:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17105:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "17105:16:8"
																			},
																			"nativeSrc": "17105:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17105:18:8"
																		},
																		"nativeSrc": "17105:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17105:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17100:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "17100:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17093:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17093:6:8"
																},
																"nativeSrc": "17093:9:8",
																"nodeType": "YulFunctionCall",
																"src": "17093:9:8"
															},
															"nativeSrc": "17090:35:8",
															"nodeType": "YulIf",
															"src": "17090:35:8"
														},
														{
															"body": {
																"nativeSrc": "17305:22:8",
																"nodeType": "YulBlock",
																"src": "17305:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17307:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "17307:16:8"
																			},
																			"nativeSrc": "17307:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17307:18:8"
																		},
																		"nativeSrc": "17307:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17307:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "17194:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "17194:1:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17197:66:8",
																				"nodeType": "YulLiteral",
																				"src": "17197:66:8",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17191:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "17191:2:8"
																		},
																		"nativeSrc": "17191:73:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17191:73:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "17281:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "17281:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17288:1:8",
																						"nodeType": "YulLiteral",
																						"src": "17288:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17291:1:8",
																						"nodeType": "YulLiteral",
																						"src": "17291:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "17284:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "17284:3:8"
																				},
																				"nativeSrc": "17284:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17284:9:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17278:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "17278:2:8"
																		},
																		"nativeSrc": "17278:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17278:16:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17174:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17174:3:8"
																},
																"nativeSrc": "17174:130:8",
																"nodeType": "YulFunctionCall",
																"src": "17174:130:8"
															},
															"nativeSrc": "17171:156:8",
															"nodeType": "YulIf",
															"src": "17171:156:8"
														},
														{
															"nativeSrc": "17337:15:8",
															"nodeType": "YulAssignment",
															"src": "17337:15:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17347:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "17347:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17350:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "17350:1:8"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "17342:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17342:4:8"
																},
																"nativeSrc": "17342:10:8",
																"nodeType": "YulFunctionCall",
																"src": "17342:10:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17337:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "17337:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nativeSrc": "16973:385:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17003:1:8",
														"nodeType": "YulTypedName",
														"src": "17003:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17006:1:8",
														"nodeType": "YulTypedName",
														"src": "17006:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17012:1:8",
														"nodeType": "YulTypedName",
														"src": "17012:1:8",
														"type": ""
													}
												],
												"src": "16973:385:8"
											},
											{
												"body": {
													"nativeSrc": "17518:288:8",
													"nodeType": "YulBlock",
													"src": "17518:288:8",
													"statements": [
														{
															"nativeSrc": "17528:26:8",
															"nodeType": "YulAssignment",
															"src": "17528:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17540:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17540:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17551:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17551:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17536:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17536:3:8"
																},
																"nativeSrc": "17536:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17536:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17528:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17528:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17608:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17608:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17621:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17621:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17632:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17632:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17617:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17617:3:8"
																		},
																		"nativeSrc": "17617:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17617:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17564:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17564:43:8"
																},
																"nativeSrc": "17564:71:8",
																"nodeType": "YulFunctionCall",
																"src": "17564:71:8"
															},
															"nativeSrc": "17564:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "17564:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17689:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17689:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17702:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17702:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17713:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17713:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17698:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17698:3:8"
																		},
																		"nativeSrc": "17698:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17698:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17645:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17645:43:8"
																},
																"nativeSrc": "17645:72:8",
																"nodeType": "YulFunctionCall",
																"src": "17645:72:8"
															},
															"nativeSrc": "17645:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "17645:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17771:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17771:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17784:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17784:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17795:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17795:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17780:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17780:3:8"
																		},
																		"nativeSrc": "17780:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17780:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17727:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17727:43:8"
																},
																"nativeSrc": "17727:72:8",
																"nodeType": "YulFunctionCall",
																"src": "17727:72:8"
															},
															"nativeSrc": "17727:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "17727:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17364:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17474:9:8",
														"nodeType": "YulTypedName",
														"src": "17474:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17486:6:8",
														"nodeType": "YulTypedName",
														"src": "17486:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17494:6:8",
														"nodeType": "YulTypedName",
														"src": "17494:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17502:6:8",
														"nodeType": "YulTypedName",
														"src": "17502:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17513:4:8",
														"nodeType": "YulTypedName",
														"src": "17513:4:8",
														"type": ""
													}
												],
												"src": "17364:442:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error-MNT_MUMBAI.sol-Valueless_T\")\n\n        mstore(add(memPtr, 32), \"ransaction\")\n\n    }\n\n    function abi_encode_t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error-MNT_MUMBAI.sol-Exceeds_Max\")\n\n        mstore(add(memPtr, 32), \"_Balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error-MNT_MUMBAI.sol-Ownable\")\n\n    }\n\n    function abi_encode_t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"784": [
									{
										"length": 32,
										"start": 1604
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100fd575f3560e01c8063655ab92711610094578063a9059cbb11610063578063a9059cbb146102f9578063c0e3daf514610335578063ce606ee01461035f578063dd62ed3e14610389578063ea6ecb08146103c5576100fd565b8063655ab927146102555780636a73bf531461026b57806370a082311461029357806395d89b41146102cf576100fd565b806323b872dd116100d057806323b872dd1461019b5780632bc67da0146101d7578063313ce56714610201578063355274ea1461022b576100fd565b806306ed69081461010157806306fdde031461010b578063095ea7b31461013557806318160ddd14610171575b5f80fd5b6101096103ef565b005b348015610116575f80fd5b5061011f61054a565b60405161012c9190611210565b60405180910390f35b348015610140575f80fd5b5061015b600480360381019061015691906112c1565b6105da565b6040516101689190611319565b60405180910390f35b34801561017c575f80fd5b506101856105fc565b6040516101929190611341565b60405180910390f35b3480156101a6575f80fd5b506101c160048036038101906101bc919061135a565b610605565b6040516101ce9190611319565b60405180910390f35b3480156101e2575f80fd5b506101eb610633565b6040516101f89190611341565b60405180910390f35b34801561020c575f80fd5b50610215610639565b60405161022291906113c5565b60405180910390f35b348015610236575f80fd5b5061023f610641565b60405161024c9190611341565b60405180910390f35b348015610260575f80fd5b50610269610668565b005b348015610276575f80fd5b50610291600480360381019061028c91906113de565b61079c565b005b34801561029e575f80fd5b506102b960048036038101906102b49190611409565b610877565b6040516102c69190611341565b60405180910390f35b3480156102da575f80fd5b506102e36108bc565b6040516102f09190611210565b60405180910390f35b348015610304575f80fd5b5061031f600480360381019061031a91906112c1565b61094c565b60405161032c9190611319565b60405180910390f35b348015610340575f80fd5b5061034961096e565b6040516103569190611341565b60405180910390f35b34801561036a575f80fd5b5061037361098f565b6040516103809190611443565b60405180910390f35b348015610394575f80fd5b506103af60048036038101906103aa919061145c565b6109b4565b6040516103bc9190611341565b60405180910390f35b3480156103d0575f80fd5b506103d9610a36565b6040516103e691906114b2565b60405180910390f35b5f3403610431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104289061153b565b60405180910390fd5b5f61043a61096e565b610442610639565b60ff16600a61045191906116b5565b3461045c91906116ff565b610466919061176d565b9050610470610639565b60ff16600a61047f91906116b5565b60085461048c91906116ff565b8161049633610877565b6104a0919061179d565b11156104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611840565b60405180910390fd5b6104eb3382610ae1565b3373ffffffffffffffffffffffffffffffffffffffff167f34987d73948b60cfba9beeb35760c345a3be430f3540605113911ead78a0830e82344261052f33610877565b60405161053f949392919061185e565b60405180910390a250565b606060038054610559906118ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610585906118ce565b80156105d05780601f106105a7576101008083540402835291602001916105d0565b820191905f5260205f20905b8154815290600101906020018083116105b357829003601f168201915b5050505050905090565b5f806105e4610b60565b90506105f1818585610b67565b600191505092915050565b5f600254905090565b5f8061060f610b60565b905061061c858285610b79565b610627858585610c0b565b60019150509392505050565b60085481565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee90611948565b60405180910390fd5b5f47905060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561075f573d5f803e3d5ffd5b507ff39edbeb800007582021719f876f29eb42aa5171248e3df79a3bf120a4e914168142604051610791929190611966565b60405180910390a150565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290611948565b60405180910390fd5b5f6008549050816008819055507f4c2d858a88357e20c1b14c12b9674497934a744bb8118d4d3f2dce8ded4989be81834260405161086b9392919061198d565b60405180910390a15050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546108cb906118ce565b80601f01602080910402602001604051908101604052809291908181526020018280546108f7906118ce565b80156109425780601f1061091957610100808354040283529160200191610942565b820191905f5260205f20905b81548152906001019060200180831161092557829003601f168201915b5050505050905090565b5f80610956610b60565b9050610963818585610c0b565b600191505092915050565b5f610977610a36565b671bc16d674ec8000061098a919061176d565b905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f8060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610aa2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ac69190611a3f565b505050915050620f424081610adb9190611ab6565b91505090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b51575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b489190611443565b60405180910390fd5b610b5c5f8383610cfb565b5050565b5f33905090565b610b748383836001610d9e565b505050565b5f610b8484846109b4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c055781811015610bf6578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610bed93929190611b1e565b60405180910390fd5b610c0484848484035f610d9e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c7b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c729190611443565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ceb575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ce29190611443565b60405180910390fd5b610cf6838383610cfb565b505050565b610d06838383610f6d565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d99575f610d42610641565b90505f610d4d6105fc565b905081811115610d965780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610d8d929190611966565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e0e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e059190611443565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e7e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e759190611443565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f67578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f5e9190611341565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fbd578060025f828254610fb1919061179d565b9250508190555061108b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611046578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161103d93929190611b1e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110d2578060025f828254039250508190555061111c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111799190611341565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156111bd5780820151818401526020810190506111a2565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111e282611186565b6111ec8185611190565b93506111fc8185602086016111a0565b611205816111c8565b840191505092915050565b5f6020820190508181035f83015261122881846111d8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61125d82611234565b9050919050565b61126d81611253565b8114611277575f80fd5b50565b5f8135905061128881611264565b92915050565b5f819050919050565b6112a08161128e565b81146112aa575f80fd5b50565b5f813590506112bb81611297565b92915050565b5f80604083850312156112d7576112d6611230565b5b5f6112e48582860161127a565b92505060206112f5858286016112ad565b9150509250929050565b5f8115159050919050565b611313816112ff565b82525050565b5f60208201905061132c5f83018461130a565b92915050565b61133b8161128e565b82525050565b5f6020820190506113545f830184611332565b92915050565b5f805f6060848603121561137157611370611230565b5b5f61137e8682870161127a565b935050602061138f8682870161127a565b92505060406113a0868287016112ad565b9150509250925092565b5f60ff82169050919050565b6113bf816113aa565b82525050565b5f6020820190506113d85f8301846113b6565b92915050565b5f602082840312156113f3576113f2611230565b5b5f611400848285016112ad565b91505092915050565b5f6020828403121561141e5761141d611230565b5b5f61142b8482850161127a565b91505092915050565b61143d81611253565b82525050565b5f6020820190506114565f830184611434565b92915050565b5f806040838503121561147257611471611230565b5b5f61147f8582860161127a565b92505060206114908582860161127a565b9150509250929050565b5f819050919050565b6114ac8161149a565b82525050565b5f6020820190506114c55f8301846114a3565b92915050565b7f4572726f722d4d4e545f4d554d4241492e736f6c2d56616c75656c6573735f545f8201527f72616e73616374696f6e00000000000000000000000000000000000000000000602082015250565b5f611525602a83611190565b9150611530826114cb565b604082019050919050565b5f6020820190508181035f83015261155281611519565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156115db578086048111156115b7576115b6611559565b5b60018516156115c65780820291505b80810290506115d485611586565b945061159b565b94509492505050565b5f826115f357600190506116ae565b81611600575f90506116ae565b816001811461161657600281146116205761164f565b60019150506116ae565b60ff84111561163257611631611559565b5b8360020a91508482111561164957611648611559565b5b506116ae565b5060208310610133831016604e8410600b84101617156116845782820a90508381111561167f5761167e611559565b5b6116ae565b6116918484846001611592565b925090508184048111156116a8576116a7611559565b5b81810290505b9392505050565b5f6116bf8261128e565b91506116ca8361128e565b92506116f77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846115e4565b905092915050565b5f6117098261128e565b91506117148361128e565b92508282026117228161128e565b9150828204841483151761173957611738611559565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6117778261128e565b91506117828361128e565b92508261179257611791611740565b5b828204905092915050565b5f6117a78261128e565b91506117b28361128e565b92508282019050808211156117ca576117c9611559565b5b92915050565b7f4572726f722d4d4e545f4d554d4241492e736f6c2d457863656564735f4d61785f8201527f5f42616c616e6365000000000000000000000000000000000000000000000000602082015250565b5f61182a602883611190565b9150611835826117d0565b604082019050919050565b5f6020820190508181035f8301526118578161181e565b9050919050565b5f6080820190506118715f830187611332565b61187e6020830186611332565b61188b6040830185611332565b6118986060830184611332565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806118e557607f821691505b6020821081036118f8576118f76118a1565b5b50919050565b7f4572726f722d4d4e545f4d554d4241492e736f6c2d4f776e61626c65000000005f82015250565b5f611932601c83611190565b915061193d826118fe565b602082019050919050565b5f6020820190508181035f83015261195f81611926565b9050919050565b5f6040820190506119795f830185611332565b6119866020830184611332565b9392505050565b5f6060820190506119a05f830186611332565b6119ad6020830185611332565b6119ba6040830184611332565b949350505050565b5f69ffffffffffffffffffff82169050919050565b6119e0816119c2565b81146119ea575f80fd5b50565b5f815190506119fb816119d7565b92915050565b611a0a8161149a565b8114611a14575f80fd5b50565b5f81519050611a2581611a01565b92915050565b5f81519050611a3981611297565b92915050565b5f805f805f60a08688031215611a5857611a57611230565b5b5f611a65888289016119ed565b9550506020611a7688828901611a17565b9450506040611a8788828901611a2b565b9350506060611a9888828901611a2b565b9250506080611aa9888289016119ed565b9150509295509295909350565b5f611ac08261149a565b9150611acb8361149a565b925082611adb57611ada611740565b5b60015f0383147f800000000000000000000000000000000000000000000000000000000000000083141615611b1357611b12611559565b5b828205905092915050565b5f606082019050611b315f830186611434565b611b3e6020830185611332565b611b4b6040830184611332565b94935050505056fea2646970667358221220d4e246ff0dcb3815227a5fd5e1a70e28369513cedeed3cc6591597fa56c702a364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x655AB927 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xC0E3DAF5 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xEA6ECB08 EQ PUSH2 0x3C5 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x655AB927 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x6A73BF53 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CF JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x2BC67DA0 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x22B JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x6ED6908 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x373 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x43A PUSH2 0x96E JUMP JUMPDEST PUSH2 0x442 PUSH2 0x639 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST CALLVALUE PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x176D JUMP JUMPDEST SWAP1 POP PUSH2 0x470 PUSH2 0x639 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP2 PUSH2 0x496 CALLER PUSH2 0x877 JUMP JUMPDEST PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST GT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D8 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EB CALLER DUP3 PUSH2 0xAE1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x34987D73948B60CFBA9BEEB35760C345A3BE430F3540605113911EAD78A0830E DUP3 CALLVALUE TIMESTAMP PUSH2 0x52F CALLER PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x559 SWAP1 PUSH2 0x18CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x585 SWAP1 PUSH2 0x18CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F1 DUP2 DUP6 DUP6 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x60F PUSH2 0xB60 JUMP JUMPDEST SWAP1 POP PUSH2 0x61C DUP6 DUP3 DUP6 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x627 DUP6 DUP6 DUP6 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x75F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0xF39EDBEB800007582021719F876F29EB42AA5171248E3DF79A3BF120A4E91416 DUP2 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x791 SWAP3 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x4C2D858A88357E20C1B14C12B9674497934A744BB8118D4D3F2DCE8DED4989BE DUP2 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x86B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8CB SWAP1 PUSH2 0x18CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F7 SWAP1 PUSH2 0x18CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x942 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x919 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x942 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x925 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x956 PUSH2 0xB60 JUMP JUMPDEST SWAP1 POP PUSH2 0x963 DUP2 DUP6 DUP6 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x977 PUSH2 0xA36 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 PUSH2 0x98A SWAP2 SWAP1 PUSH2 0x176D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAA2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC6 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH3 0xF4240 DUP2 PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB51 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5C PUSH0 DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB74 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD9E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB84 DUP5 DUP5 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC05 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBF6 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC04 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD9E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF6 DUP4 DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD06 DUP4 DUP4 DUP4 PUSH2 0xF6D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD99 JUMPI PUSH0 PUSH2 0xD42 PUSH2 0x641 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD4D PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD96 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8D SWAP3 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE7E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF67 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFB1 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x108B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1046 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x111C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1179 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11BD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11A2 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11E2 DUP3 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x11EC DUP2 DUP6 PUSH2 0x1190 JUMP JUMPDEST SWAP4 POP PUSH2 0x11FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x1205 DUP2 PUSH2 0x11C8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1228 DUP2 DUP5 PUSH2 0x11D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x125D DUP3 PUSH2 0x1234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x1253 JUMP JUMPDEST DUP2 EQ PUSH2 0x1277 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1288 DUP2 PUSH2 0x1264 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A0 DUP2 PUSH2 0x128E JUMP JUMPDEST DUP2 EQ PUSH2 0x12AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12BB DUP2 PUSH2 0x1297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D7 JUMPI PUSH2 0x12D6 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E4 DUP6 DUP3 DUP7 ADD PUSH2 0x127A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F5 DUP6 DUP3 DUP7 ADD PUSH2 0x12AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1313 DUP2 PUSH2 0x12FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132C PUSH0 DUP4 ADD DUP5 PUSH2 0x130A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133B DUP2 PUSH2 0x128E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1354 PUSH0 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1371 JUMPI PUSH2 0x1370 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x137E DUP7 DUP3 DUP8 ADD PUSH2 0x127A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x138F DUP7 DUP3 DUP8 ADD PUSH2 0x127A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13A0 DUP7 DUP3 DUP8 ADD PUSH2 0x12AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x13AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1400 DUP5 DUP3 DUP6 ADD PUSH2 0x12AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141E JUMPI PUSH2 0x141D PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142B DUP5 DUP3 DUP6 ADD PUSH2 0x127A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x143D DUP2 PUSH2 0x1253 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1456 PUSH0 DUP4 ADD DUP5 PUSH2 0x1434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1472 JUMPI PUSH2 0x1471 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147F DUP6 DUP3 DUP7 ADD PUSH2 0x127A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1490 DUP6 DUP3 DUP7 ADD PUSH2 0x127A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14AC DUP2 PUSH2 0x149A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x14A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722D4D4E545F4D554D4241492E736F6C2D56616C75656C6573735F54 PUSH0 DUP3 ADD MSTORE PUSH32 0x72616E73616374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1525 PUSH1 0x2A DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP2 POP PUSH2 0x1530 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1552 DUP2 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x15DB JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x15B7 JUMPI PUSH2 0x15B6 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x15C6 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x15D4 DUP6 PUSH2 0x1586 JUMP JUMPDEST SWAP5 POP PUSH2 0x159B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15F3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x16AE JUMP JUMPDEST DUP2 PUSH2 0x1600 JUMPI PUSH0 SWAP1 POP PUSH2 0x16AE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1616 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1620 JUMPI PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x16AE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST POP PUSH2 0x16AE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1684 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x1559 JUMP JUMPDEST JUMPDEST PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x1691 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1592 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x16A8 JUMPI PUSH2 0x16A7 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16BF DUP3 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x16CA DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP PUSH2 0x16F7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x15E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1709 DUP3 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x1714 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1722 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1777 DUP3 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x1782 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x1740 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A7 DUP3 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x17B2 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17CA JUMPI PUSH2 0x17C9 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722D4D4E545F4D554D4241492E736F6C2D457863656564735F4D6178 PUSH0 DUP3 ADD MSTORE PUSH32 0x5F42616C616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x182A PUSH1 0x28 DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP2 POP PUSH2 0x1835 DUP3 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1857 DUP2 PUSH2 0x181E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1871 PUSH0 DUP4 ADD DUP8 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x187E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x188B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x1898 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18F8 JUMPI PUSH2 0x18F7 PUSH2 0x18A1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F722D4D4E545F4D554D4241492E736F6C2D4F776E61626C6500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1932 PUSH1 0x1C DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP2 POP PUSH2 0x193D DUP3 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x195F DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1979 PUSH0 DUP4 ADD DUP6 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x1986 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19A0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x19AD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x19BA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x19C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x19EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FB DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x149A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A25 DUP2 PUSH2 0x1A01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A39 DUP2 PUSH2 0x1297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A58 JUMPI PUSH2 0x1A57 PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A65 DUP9 DUP3 DUP10 ADD PUSH2 0x19ED JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A76 DUP9 DUP3 DUP10 ADD PUSH2 0x1A17 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1A87 DUP9 DUP3 DUP10 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1A98 DUP9 DUP3 DUP10 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1AA9 DUP9 DUP3 DUP10 ADD PUSH2 0x19ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC0 DUP3 PUSH2 0x149A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ACB DUP4 PUSH2 0x149A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x1740 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x1B13 JUMPI PUSH2 0x1B12 PUSH2 0x1559 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B31 PUSH0 DUP4 ADD DUP7 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x1B3E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x1B4B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xE2 CHAINID SELFDESTRUCT 0xD 0xCB CODESIZE ISZERO 0x22 PUSH27 0x5FD5E1A70E28369513CEDEED3CC6591597FA56C702A364736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "380:3909:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1638:755;;;:::i;:::-;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;554:33:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:81:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4022:264:7;;;;;;;;;;;;;:::i;:::-;;2401:223;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3704:310:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:1064:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:755;1902:1;1889:9;:14;1881:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2011:20;2068:18;:16;:18::i;:::-;2055:10;:8;:10::i;:::-;2047:19;;2043:2;:23;;;;:::i;:::-;2032:9;:35;;;;:::i;:::-;:54;;;;:::i;:::-;2011:75;;2177:10;:8;:10::i;:::-;2169:19;;2165:2;:23;;;;:::i;:::-;2148:13;;:41;;;;:::i;:::-;2132:12;2108:21;2118:10;2108:9;:21::i;:::-;:36;;;;:::i;:::-;:81;;2100:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;2247:30;2253:10;2264:12;2247:5;:30::i;:::-;2309:10;2293:92;;;2321:12;2335:9;2346:15;2363:21;2373:10;2363:9;:21::i;:::-;2293:92;;;;;;;;;:::i;:::-;;;;;;;;1693:700;1638:755::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;554:33:7:-;;;;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;923:81:4:-;967:7;993:4;986:11;;923:81;:::o;4022:264:7:-;1564:13;;;;;;;;;;;1550:27;;:10;:27;;;1542:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4088:12:::1;4103:21;4088:36;;4190:13;;;;;;;;;;;4182:31;;:37;4214:4;4182:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;4235:43;4256:4;4262:15;4235:43;;;;;;;:::i;:::-;;;;;;;;4077:209;4022:264::o:0;2401:223::-;1564:13;;;;;;;;;;;1550:27;;:10;:27;;;1542:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2476:19:::1;2498:13;;2476:35;;2536:6;2522:13;:20;;;;2558:58;2579:11;2592:6;2600:15;2558:58;;;;;;;;:::i;:::-;;;;;;;;2465:159;2401:223:::0;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3704:310:7:-;3753:7;3988:17;:15;:17::i;:::-;3968:10;3960:46;;;;:::i;:::-;3953:53;;3704:310;:::o;464:28::-;;;;;;;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2632:1064:7:-;2680:3;2703:10;2720:8;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2701:45;;;;;;3499:7;3492:6;:14;;;;:::i;:::-;3485:21;;;2632:1064;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1059:371:4:-;1153:30;1167:4;1173:2;1177:5;1153:13;:30::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;:5::i;:::-;1232:25;;1271:14;1288:13;:11;:13::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:76::-;6391:7;6420:5;6409:16;;6355:76;;;:::o;6437:115::-;6522:23;6539:5;6522:23;:::i;:::-;6517:3;6510:36;6437:115;;:::o;6558:218::-;6649:4;6687:2;6676:9;6672:18;6664:26;;6700:69;6766:1;6755:9;6751:17;6742:6;6700:69;:::i;:::-;6558:218;;;;:::o;6782:229::-;6922:34;6918:1;6910:6;6906:14;6899:58;6991:12;6986:2;6978:6;6974:15;6967:37;6782:229;:::o;7017:366::-;7159:3;7180:67;7244:2;7239:3;7180:67;:::i;:::-;7173:74;;7256:93;7345:3;7256:93;:::i;:::-;7374:2;7369:3;7365:12;7358:19;;7017:366;;;:::o;7389:419::-;7555:4;7593:2;7582:9;7578:18;7570:26;;7642:9;7636:4;7632:20;7628:1;7617:9;7613:17;7606:47;7670:131;7796:4;7670:131;:::i;:::-;7662:139;;7389:419;;;:::o;7814:180::-;7862:77;7859:1;7852:88;7959:4;7956:1;7949:15;7983:4;7980:1;7973:15;8000:102;8042:8;8089:5;8086:1;8082:13;8061:34;;8000:102;;;:::o;8108:848::-;8169:5;8176:4;8200:6;8191:15;;8224:5;8215:14;;8238:712;8259:1;8249:8;8246:15;8238:712;;;8354:4;8349:3;8345:14;8339:4;8336:24;8333:50;;;8363:18;;:::i;:::-;8333:50;8413:1;8403:8;8399:16;8396:451;;;8828:4;8821:5;8817:16;8808:25;;8396:451;8878:4;8872;8868:15;8860:23;;8908:32;8931:8;8908:32;:::i;:::-;8896:44;;8238:712;;;8108:848;;;;;;;:::o;8962:1073::-;9016:5;9207:8;9197:40;;9228:1;9219:10;;9230:5;;9197:40;9256:4;9246:36;;9273:1;9264:10;;9275:5;;9246:36;9342:4;9390:1;9385:27;;;;9426:1;9421:191;;;;9335:277;;9385:27;9403:1;9394:10;;9405:5;;;9421:191;9466:3;9456:8;9453:17;9450:43;;;9473:18;;:::i;:::-;9450:43;9522:8;9519:1;9515:16;9506:25;;9557:3;9550:5;9547:14;9544:40;;;9564:18;;:::i;:::-;9544:40;9597:5;;;9335:277;;9721:2;9711:8;9708:16;9702:3;9696:4;9693:13;9689:36;9671:2;9661:8;9658:16;9653:2;9647:4;9644:12;9640:35;9624:111;9621:246;;;9777:8;9771:4;9767:19;9758:28;;9812:3;9805:5;9802:14;9799:40;;;9819:18;;:::i;:::-;9799:40;9852:5;;9621:246;9892:42;9930:3;9920:8;9914:4;9911:1;9892:42;:::i;:::-;9877:57;;;;9966:4;9961:3;9957:14;9950:5;9947:25;9944:51;;;9975:18;;:::i;:::-;9944:51;10024:4;10017:5;10013:16;10004:25;;8962:1073;;;;;;:::o;10041:285::-;10101:5;10125:23;10143:4;10125:23;:::i;:::-;10117:31;;10169:27;10187:8;10169:27;:::i;:::-;10157:39;;10215:104;10252:66;10242:8;10236:4;10215:104;:::i;:::-;10206:113;;10041:285;;;;:::o;10332:410::-;10372:7;10395:20;10413:1;10395:20;:::i;:::-;10390:25;;10429:20;10447:1;10429:20;:::i;:::-;10424:25;;10484:1;10481;10477:9;10506:30;10524:11;10506:30;:::i;:::-;10495:41;;10685:1;10676:7;10672:15;10669:1;10666:22;10646:1;10639:9;10619:83;10596:139;;10715:18;;:::i;:::-;10596:139;10380:362;10332:410;;;;:::o;10748:180::-;10796:77;10793:1;10786:88;10893:4;10890:1;10883:15;10917:4;10914:1;10907:15;10934:185;10974:1;10991:20;11009:1;10991:20;:::i;:::-;10986:25;;11025:20;11043:1;11025:20;:::i;:::-;11020:25;;11064:1;11054:35;;11069:18;;:::i;:::-;11054:35;11111:1;11108;11104:9;11099:14;;10934:185;;;;:::o;11125:191::-;11165:3;11184:20;11202:1;11184:20;:::i;:::-;11179:25;;11218:20;11236:1;11218:20;:::i;:::-;11213:25;;11261:1;11258;11254:9;11247:16;;11282:3;11279:1;11276:10;11273:36;;;11289:18;;:::i;:::-;11273:36;11125:191;;;;:::o;11322:227::-;11462:34;11458:1;11450:6;11446:14;11439:58;11531:10;11526:2;11518:6;11514:15;11507:35;11322:227;:::o;11555:366::-;11697:3;11718:67;11782:2;11777:3;11718:67;:::i;:::-;11711:74;;11794:93;11883:3;11794:93;:::i;:::-;11912:2;11907:3;11903:12;11896:19;;11555:366;;;:::o;11927:419::-;12093:4;12131:2;12120:9;12116:18;12108:26;;12180:9;12174:4;12170:20;12166:1;12155:9;12151:17;12144:47;12208:131;12334:4;12208:131;:::i;:::-;12200:139;;11927:419;;;:::o;12352:553::-;12529:4;12567:3;12556:9;12552:19;12544:27;;12581:71;12649:1;12638:9;12634:17;12625:6;12581:71;:::i;:::-;12662:72;12730:2;12719:9;12715:18;12706:6;12662:72;:::i;:::-;12744;12812:2;12801:9;12797:18;12788:6;12744:72;:::i;:::-;12826;12894:2;12883:9;12879:18;12870:6;12826:72;:::i;:::-;12352:553;;;;;;;:::o;12911:180::-;12959:77;12956:1;12949:88;13056:4;13053:1;13046:15;13080:4;13077:1;13070:15;13097:320;13141:6;13178:1;13172:4;13168:12;13158:22;;13225:1;13219:4;13215:12;13246:18;13236:81;;13302:4;13294:6;13290:17;13280:27;;13236:81;13364:2;13356:6;13353:14;13333:18;13330:38;13327:84;;13383:18;;:::i;:::-;13327:84;13148:269;13097:320;;;:::o;13423:178::-;13563:30;13559:1;13551:6;13547:14;13540:54;13423:178;:::o;13607:366::-;13749:3;13770:67;13834:2;13829:3;13770:67;:::i;:::-;13763:74;;13846:93;13935:3;13846:93;:::i;:::-;13964:2;13959:3;13955:12;13948:19;;13607:366;;;:::o;13979:419::-;14145:4;14183:2;14172:9;14168:18;14160:26;;14232:9;14226:4;14222:20;14218:1;14207:9;14203:17;14196:47;14260:131;14386:4;14260:131;:::i;:::-;14252:139;;13979:419;;;:::o;14404:332::-;14525:4;14563:2;14552:9;14548:18;14540:26;;14576:71;14644:1;14633:9;14629:17;14620:6;14576:71;:::i;:::-;14657:72;14725:2;14714:9;14710:18;14701:6;14657:72;:::i;:::-;14404:332;;;;;:::o;14742:442::-;14891:4;14929:2;14918:9;14914:18;14906:26;;14942:71;15010:1;14999:9;14995:17;14986:6;14942:71;:::i;:::-;15023:72;15091:2;15080:9;15076:18;15067:6;15023:72;:::i;:::-;15105;15173:2;15162:9;15158:18;15149:6;15105:72;:::i;:::-;14742:442;;;;;;:::o;15190:105::-;15226:7;15266:22;15259:5;15255:34;15244:45;;15190:105;;;:::o;15301:120::-;15373:23;15390:5;15373:23;:::i;:::-;15366:5;15363:34;15353:62;;15411:1;15408;15401:12;15353:62;15301:120;:::o;15427:141::-;15483:5;15514:6;15508:13;15499:22;;15530:32;15556:5;15530:32;:::i;:::-;15427:141;;;;:::o;15574:120::-;15646:23;15663:5;15646:23;:::i;:::-;15639:5;15636:34;15626:62;;15684:1;15681;15674:12;15626:62;15574:120;:::o;15700:141::-;15756:5;15787:6;15781:13;15772:22;;15803:32;15829:5;15803:32;:::i;:::-;15700:141;;;;:::o;15847:143::-;15904:5;15935:6;15929:13;15920:22;;15951:33;15978:5;15951:33;:::i;:::-;15847:143;;;;:::o;15996:971::-;16099:6;16107;16115;16123;16131;16180:3;16168:9;16159:7;16155:23;16151:33;16148:120;;;16187:79;;:::i;:::-;16148:120;16307:1;16332:63;16387:7;16378:6;16367:9;16363:22;16332:63;:::i;:::-;16322:73;;16278:127;16444:2;16470:63;16525:7;16516:6;16505:9;16501:22;16470:63;:::i;:::-;16460:73;;16415:128;16582:2;16608:64;16664:7;16655:6;16644:9;16640:22;16608:64;:::i;:::-;16598:74;;16553:129;16721:2;16747:64;16803:7;16794:6;16783:9;16779:22;16747:64;:::i;:::-;16737:74;;16692:129;16860:3;16887:63;16942:7;16933:6;16922:9;16918:22;16887:63;:::i;:::-;16877:73;;16831:129;15996:971;;;;;;;;:::o;16973:385::-;17012:1;17029:19;17046:1;17029:19;:::i;:::-;17024:24;;17062:19;17079:1;17062:19;:::i;:::-;17057:24;;17100:1;17090:35;;17105:18;;:::i;:::-;17090:35;17291:1;17288;17284:9;17281:1;17278:16;17197:66;17194:1;17191:73;17174:130;17171:156;;;17307:18;;:::i;:::-;17171:156;17350:1;17347;17342:10;17337:15;;16973:385;;;;:::o;17364:442::-;17513:4;17551:2;17540:9;17536:18;17528:26;;17564:71;17632:1;17621:9;17617:17;17608:6;17564:71;:::i;:::-;17645:72;17713:2;17702:9;17698:18;17689:6;17645:72;:::i;:::-;17727;17795:2;17784:9;17780:18;17771:6;17727:72;:::i;:::-;17364:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1409800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"OneMATICInCents()": "infinite",
								"WithdrawMintingFees()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"buyTokensFromContract()": "infinite",
								"cap()": "infinite",
								"capPerAccount()": "2470",
								"contractOwner()": "2574",
								"decimals()": "405",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"updateCapPerAccount(uint256)": "infinite",
								"zTokenPriceInWei()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 514,
									"end": 524,
									"name": "PUSH",
									"source": 7,
									"value": "12A05F200"
								},
								{
									"begin": 499,
									"end": 524,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 499,
									"end": 524,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 583,
									"end": 587,
									"name": "PUSH",
									"source": 7,
									"value": "1388"
								},
								{
									"begin": 554,
									"end": 587,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 554,
									"end": 587,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1208,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1208,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1208,
									"end": 1216,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1208,
									"end": 1216,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1208,
									"end": 1218,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1208,
									"end": 1218,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1208,
									"end": 1218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1208,
									"end": 1218,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1208,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1219,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1200,
									"end": 1219,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1196,
									"end": 1219,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1196,
									"end": 1219,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1219,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1219,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1196,
									"end": 1219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1219,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1196,
									"end": 1219,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1194,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1188,
									"end": 1194,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1220,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1188,
									"end": 1220,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1220,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1220,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1188,
									"end": 1220,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1220,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1188,
									"end": 1220,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4D6F6E6574000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4D4E540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 756,
									"end": 760,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 756,
									"end": 765,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 752,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "392E1E2700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 788,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 752,
									"end": 817,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 833,
									"end": 837,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 716,
									"end": 844,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1262,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1251,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1238,
									"end": 1251,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1262,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1306,
									"end": 1348,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "D0D5E3DB44DE05E9F294BB0A3BEEAF030DE24ADA"
								},
								{
									"begin": 1273,
									"end": 1281,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1273,
									"end": 1281,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1349,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1438,
									"end": 1451,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1476,
									"end": 1486,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1476,
									"end": 1484,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1476,
									"end": 1484,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1476,
									"end": 1484,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1476,
									"end": 1486,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1476,
									"end": 1486,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1476,
									"end": 1486,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1476,
									"end": 1486,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1476,
									"end": 1486,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1468,
									"end": 1487,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1464,
									"end": 1466,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1464,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1464,
									"end": 1487,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1464,
									"end": 1487,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1464,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1464,
									"end": 1487,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1464,
									"end": 1487,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1464,
									"end": 1487,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1462,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "9502F900"
								},
								{
									"begin": 1452,
									"end": 1488,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1452,
									"end": 1488,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1488,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1488,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1452,
									"end": 1488,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1488,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1452,
									"end": 1488,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1432,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1432,
									"end": 1437,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1432,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1489,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1489,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1432,
									"end": 1489,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1167,
									"end": 1171,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1173,
									"end": 1175,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1177,
									"end": 1182,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1153,
									"end": 1166,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1153,
									"end": 1166,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1198,
									"end": 1202,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1232,
									"end": 1249,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1252,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1252,
									"end": 1255,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1252,
									"end": 1255,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1232,
									"end": 1257,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1232,
									"end": 1257,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1285,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1288,
									"end": 1301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1301,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1301,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1328,
									"end": 1337,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1387,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1398,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 4,
									"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1364,
									"end": 1399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1218,
									"end": 1424,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1218,
									"end": 1424,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1059,
									"end": 1430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 967,
									"end": 974,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 993,
									"end": 997,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 993,
									"end": 997,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 986,
									"end": 997,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 986,
									"end": 997,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3196,
									"end": 3203,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3234,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3222,
									"end": 3234,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3215,
									"end": 3234,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3215,
									"end": 3234,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3144,
									"end": 3241,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 193,
									"end": 295,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 235,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 287,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 279,
									"end": 280,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 288,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 254,
									"end": 288,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 254,
									"end": 288,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 373,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 384,
									"end": 399,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 384,
									"end": 399,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 422,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 408,
									"end": 422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 408,
									"end": 422,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 450,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 439,
									"end": 454,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 547,
									"end": 551,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 542,
									"end": 545,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 538,
									"end": 552,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 532,
									"end": 536,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 529,
									"end": 553,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 526,
									"end": 576,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 526,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 556,
									"end": 574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 556,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 526,
									"end": 576,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 606,
									"end": 607,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 604,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 592,
									"end": 608,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1021,
									"end": 1025,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1010,
									"end": 1026,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1076,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1101,
									"end": 1133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1214,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1408,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1449,
									"end": 1453,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1620,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1659,
									"end": 1662,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1649,
									"end": 1657,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1663,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1666,
									"end": 1684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1708,
									"end": 1724,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1743,
									"end": 1748,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1757,
									"end": 1775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1904,
									"end": 1912,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1901,
									"end": 1917,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1898,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1899,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 1854,
									"end": 1862,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1851,
									"end": 1867,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1846,
									"end": 1848,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1833,
									"end": 1868,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1817,
									"end": 1928,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1970,
									"end": 1978,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1964,
									"end": 1968,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2008,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1998,
									"end": 2003,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1995,
									"end": 2009,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2012,
									"end": 2030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2121,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2104,
									"end": 2105,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2085,
									"end": 2127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2159,
									"end": 2163,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2150,
									"end": 2164,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2140,
									"end": 2165,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2168,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2217,
									"end": 2221,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2210,
									"end": 2215,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2222,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2271,
									"end": 2278,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2305,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2382,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2419,
									"end": 2423,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2401,
									"end": 2424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2393,
									"end": 2424,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2393,
									"end": 2424,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2463,
									"end": 2471,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2445,
									"end": 2472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2472,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2472,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2528,
									"end": 2594,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2526,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2512,
									"end": 2516,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2491,
									"end": 2595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2482,
									"end": 2595,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2482,
									"end": 2595,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2602,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2648,
									"end": 2655,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2671,
									"end": 2691,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 2689,
									"end": 2690,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2671,
									"end": 2691,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2671,
									"end": 2691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2671,
									"end": 2691,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 2671,
									"end": 2691,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2666,
									"end": 2691,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2666,
									"end": 2691,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2725,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 2723,
									"end": 2724,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2725,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2705,
									"end": 2725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2725,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 2705,
									"end": 2725,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2700,
									"end": 2725,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2700,
									"end": 2725,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2760,
									"end": 2761,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2757,
									"end": 2758,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2782,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 2800,
									"end": 2811,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2782,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2782,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2782,
									"end": 2812,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 2782,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2771,
									"end": 2812,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2771,
									"end": 2812,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2952,
									"end": 2959,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2948,
									"end": 2963,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2945,
									"end": 2946,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2942,
									"end": 2964,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2915,
									"end": 2924,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2895,
									"end": 2978,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2872,
									"end": 3011,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 2872,
									"end": 3011,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2991,
									"end": 3009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2872,
									"end": 3011,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 2872,
									"end": 3011,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2656,
									"end": 3018,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2608,
									"end": 3018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3123,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3024,
									"end": 3123,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3076,
									"end": 3082,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3110,
									"end": 3115,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3104,
									"end": 3116,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3094,
									"end": 3116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3094,
									"end": 3116,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3123,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3123,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3123,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3129,
									"end": 3309,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3129,
									"end": 3309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3177,
									"end": 3254,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3174,
									"end": 3175,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3167,
									"end": 3255,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3274,
									"end": 3278,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3271,
									"end": 3272,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3264,
									"end": 3279,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3298,
									"end": 3302,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3295,
									"end": 3296,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3288,
									"end": 3303,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3495,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3315,
									"end": 3495,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3363,
									"end": 3440,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3360,
									"end": 3361,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3353,
									"end": 3441,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3460,
									"end": 3464,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3457,
									"end": 3458,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3450,
									"end": 3465,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3484,
									"end": 3488,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3481,
									"end": 3482,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3474,
									"end": 3489,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3821,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3501,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3545,
									"end": 3551,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3582,
									"end": 3583,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3576,
									"end": 3580,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3584,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3562,
									"end": 3584,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3562,
									"end": 3584,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3623,
									"end": 3627,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3619,
									"end": 3631,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3668,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3640,
									"end": 3721,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3640,
									"end": 3721,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3706,
									"end": 3710,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 3698,
									"end": 3704,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3694,
									"end": 3711,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3711,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3711,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3640,
									"end": 3721,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3640,
									"end": 3721,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3768,
									"end": 3770,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3760,
									"end": 3766,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3737,
									"end": 3755,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3734,
									"end": 3772,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3731,
									"end": 3815,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3731,
									"end": 3815,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3787,
									"end": 3805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3787,
									"end": 3805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3787,
									"end": 3805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3787,
									"end": 3805,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3787,
									"end": 3805,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3731,
									"end": 3815,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3731,
									"end": 3815,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3552,
									"end": 3821,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3821,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3821,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3821,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 3968,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3827,
									"end": 3968,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3876,
									"end": 3880,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3899,
									"end": 3902,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3891,
									"end": 3902,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3891,
									"end": 3902,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3922,
									"end": 3925,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3919,
									"end": 3920,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3912,
									"end": 3926,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3956,
									"end": 3960,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3953,
									"end": 3954,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3943,
									"end": 3961,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3935,
									"end": 3961,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3935,
									"end": 3961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 3968,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 3968,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 3968,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 3968,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3974,
									"end": 4067,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3974,
									"end": 4067,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4011,
									"end": 4017,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4058,
									"end": 4060,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4053,
									"end": 4055,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4046,
									"end": 4051,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4042,
									"end": 4056,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4061,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4028,
									"end": 4061,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4028,
									"end": 4061,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3974,
									"end": 4067,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3974,
									"end": 4067,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3974,
									"end": 4067,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3974,
									"end": 4067,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4073,
									"end": 4180,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4073,
									"end": 4180,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4117,
									"end": 4125,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4167,
									"end": 4172,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4165,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4157,
									"end": 4173,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4073,
									"end": 4180,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4073,
									"end": 4180,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4073,
									"end": 4180,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4073,
									"end": 4180,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4073,
									"end": 4180,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4186,
									"end": 4579,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 4186,
									"end": 4579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4305,
									"end": 4306,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4293,
									"end": 4303,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4289,
									"end": 4307,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4425,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4358,
									"end": 4424,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4347,
									"end": 4356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4425,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4328,
									"end": 4425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4425,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4328,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4446,
									"end": 4485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4476,
									"end": 4484,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4465,
									"end": 4474,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4446,
									"end": 4485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4446,
									"end": 4485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4446,
									"end": 4485,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4446,
									"end": 4485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4434,
									"end": 4485,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4434,
									"end": 4485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4518,
									"end": 4522,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4523,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4507,
									"end": 4512,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4503,
									"end": 4524,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4494,
									"end": 4524,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4494,
									"end": 4524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4567,
									"end": 4571,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4557,
									"end": 4565,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4553,
									"end": 4572,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4546,
									"end": 4551,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4543,
									"end": 4573,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4533,
									"end": 4573,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4533,
									"end": 4573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4262,
									"end": 4579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4262,
									"end": 4579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4186,
									"end": 4579,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4186,
									"end": 4579,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4186,
									"end": 4579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4186,
									"end": 4579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4186,
									"end": 4579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4186,
									"end": 4579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4585,
									"end": 4645,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4585,
									"end": 4645,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4613,
									"end": 4616,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4634,
									"end": 4639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4639,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4639,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4585,
									"end": 4645,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4585,
									"end": 4645,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4585,
									"end": 4645,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4585,
									"end": 4645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4651,
									"end": 4793,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 4651,
									"end": 4793,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4701,
									"end": 4710,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4734,
									"end": 4787,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4752,
									"end": 4786,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4761,
									"end": 4785,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 4779,
									"end": 4784,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4785,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4761,
									"end": 4785,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4785,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 4761,
									"end": 4785,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4752,
									"end": 4786,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4752,
									"end": 4786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4752,
									"end": 4786,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4752,
									"end": 4786,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4734,
									"end": 4787,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4734,
									"end": 4787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4734,
									"end": 4787,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4734,
									"end": 4787,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4721,
									"end": 4787,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4721,
									"end": 4787,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4651,
									"end": 4793,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4651,
									"end": 4793,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4651,
									"end": 4793,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4651,
									"end": 4793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4799,
									"end": 4874,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 4799,
									"end": 4874,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4842,
									"end": 4845,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4863,
									"end": 4868,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4856,
									"end": 4868,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4856,
									"end": 4868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4799,
									"end": 4874,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4799,
									"end": 4874,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4799,
									"end": 4874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4799,
									"end": 4874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 5149,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 4880,
									"end": 5149,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4990,
									"end": 5029,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5021,
									"end": 5028,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4990,
									"end": 5029,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 4990,
									"end": 5029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4990,
									"end": 5029,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 4990,
									"end": 5029,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5051,
									"end": 5142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5100,
									"end": 5141,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5124,
									"end": 5140,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5141,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5100,
									"end": 5141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5141,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5100,
									"end": 5141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5092,
									"end": 5098,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5085,
									"end": 5089,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5079,
									"end": 5090,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5051,
									"end": 5142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 5051,
									"end": 5142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5051,
									"end": 5142,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5051,
									"end": 5142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5038,
									"end": 5143,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4956,
									"end": 5149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 5149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 5149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 5149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 5149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5155,
									"end": 5228,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 5155,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5200,
									"end": 5203,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5155,
									"end": 5228,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5155,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5423,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 5234,
									"end": 5423,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5311,
									"end": 5343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5311,
									"end": 5343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 5311,
									"end": 5343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5311,
									"end": 5343,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5311,
									"end": 5343,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5352,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5410,
									"end": 5416,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5402,
									"end": 5408,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5396,
									"end": 5400,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5352,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 5352,
									"end": 5417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5352,
									"end": 5417,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5352,
									"end": 5417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5287,
									"end": 5423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5429,
									"end": 5615,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 5429,
									"end": 5615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5489,
									"end": 5609,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 5489,
									"end": 5609,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5506,
									"end": 5509,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5499,
									"end": 5504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5496,
									"end": 5510,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5489,
									"end": 5609,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5489,
									"end": 5609,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 5489,
									"end": 5609,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5597,
									"end": 5598,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5590,
									"end": 5595,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 5560,
									"end": 5599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 5599,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5560,
									"end": 5599,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5533,
									"end": 5534,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5526,
									"end": 5531,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5522,
									"end": 5535,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5513,
									"end": 5535,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5513,
									"end": 5535,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5489,
									"end": 5609,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 5489,
									"end": 5609,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5489,
									"end": 5609,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 5489,
									"end": 5609,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5429,
									"end": 5615,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5429,
									"end": 5615,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5429,
									"end": 5615,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5621,
									"end": 6164,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 5621,
									"end": 6164,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5722,
									"end": 5724,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5717,
									"end": 5720,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5714,
									"end": 5725,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5711,
									"end": 6157,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5711,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5711,
									"end": 6157,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5756,
									"end": 5794,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 5788,
									"end": 5793,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5756,
									"end": 5794,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5756,
									"end": 5794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5756,
									"end": 5794,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 5756,
									"end": 5794,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5840,
									"end": 5869,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5858,
									"end": 5868,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5840,
									"end": 5869,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 5840,
									"end": 5869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5840,
									"end": 5869,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5840,
									"end": 5869,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5830,
									"end": 5838,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5826,
									"end": 5870,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6023,
									"end": 6025,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6011,
									"end": 6021,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6008,
									"end": 6026,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6005,
									"end": 6054,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6005,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6005,
									"end": 6054,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6044,
									"end": 6052,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6052,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6052,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6005,
									"end": 6054,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6005,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6067,
									"end": 6147,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6123,
									"end": 6145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6141,
									"end": 6144,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 6123,
									"end": 6145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6145,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6123,
									"end": 6145,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6113,
									"end": 6121,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6109,
									"end": 6146,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6096,
									"end": 6107,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6067,
									"end": 6147,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 6067,
									"end": 6147,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6067,
									"end": 6147,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6067,
									"end": 6147,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5726,
									"end": 6157,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5726,
									"end": 6157,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5711,
									"end": 6157,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5711,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5621,
									"end": 6164,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5621,
									"end": 6164,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5621,
									"end": 6164,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5621,
									"end": 6164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6287,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 6170,
									"end": 6287,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6224,
									"end": 6232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6274,
									"end": 6279,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6268,
									"end": 6272,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6264,
									"end": 6280,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 6243,
									"end": 6280,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6243,
									"end": 6280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6287,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6287,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6287,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6287,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6287,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6293,
									"end": 6462,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6293,
									"end": 6462,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6343,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6370,
									"end": 6421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6418,
									"end": 6419,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6414,
									"end": 6420,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6406,
									"end": 6411,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6403,
									"end": 6404,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6399,
									"end": 6412,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6370,
									"end": 6421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 6370,
									"end": 6421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6370,
									"end": 6421,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6370,
									"end": 6421,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6366,
									"end": 6422,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6451,
									"end": 6455,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6445,
									"end": 6449,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6441,
									"end": 6456,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6456,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6344,
									"end": 6462,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6293,
									"end": 6462,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6293,
									"end": 6462,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6293,
									"end": 6462,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6293,
									"end": 6462,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6293,
									"end": 6462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6762,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 6467,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6543,
									"end": 6547,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6689,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6714,
									"end": 6717,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6708,
									"end": 6712,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6689,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6689,
									"end": 6718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6689,
									"end": 6718,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6689,
									"end": 6718,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6681,
									"end": 6718,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6681,
									"end": 6718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6751,
									"end": 6754,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6748,
									"end": 6749,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6744,
									"end": 6755,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6738,
									"end": 6742,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6735,
									"end": 6756,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 6727,
									"end": 6756,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6727,
									"end": 6756,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6762,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6762,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6767,
									"end": 8162,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 6767,
									"end": 8162,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6884,
									"end": 6921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6917,
									"end": 6920,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6884,
									"end": 6921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 6884,
									"end": 6921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6884,
									"end": 6921,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6884,
									"end": 6921,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7004,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6978,
									"end": 6984,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6975,
									"end": 7005,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6972,
									"end": 7028,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6972,
									"end": 7028,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6972,
									"end": 7028,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7008,
									"end": 7026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7008,
									"end": 7026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 7008,
									"end": 7026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7008,
									"end": 7026,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7008,
									"end": 7026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6972,
									"end": 7028,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6972,
									"end": 7028,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7052,
									"end": 7090,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7084,
									"end": 7088,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7089,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 7052,
									"end": 7090,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 7052,
									"end": 7090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7052,
									"end": 7090,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7052,
									"end": 7090,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7137,
									"end": 7204,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 7197,
									"end": 7203,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7189,
									"end": 7195,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7183,
									"end": 7187,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7137,
									"end": 7204,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 7137,
									"end": 7204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7137,
									"end": 7204,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 7137,
									"end": 7204,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 7232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7255,
									"end": 7259,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7242,
									"end": 7259,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7242,
									"end": 7259,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7287,
									"end": 7289,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7279,
									"end": 7285,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7276,
									"end": 7290,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7304,
									"end": 7305,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7299,
									"end": 7917,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7299,
									"end": 7917,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 7299,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7299,
									"end": 7917,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7961,
									"end": 7962,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7978,
									"end": 7984,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7975,
									"end": 8052,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7975,
									"end": 8052,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 7975,
									"end": 8052,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8027,
									"end": 8036,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8022,
									"end": 8025,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 8018,
									"end": 8037,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8012,
									"end": 8038,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8003,
									"end": 8038,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8003,
									"end": 8038,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7975,
									"end": 8052,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 7975,
									"end": 8052,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8078,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8138,
									"end": 8144,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8131,
									"end": 8136,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8078,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 8078,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8078,
									"end": 8145,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8078,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8072,
									"end": 8076,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8065,
									"end": 8146,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7934,
									"end": 8156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7269,
									"end": 8156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7269,
									"end": 8156,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7299,
									"end": 7917,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7299,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7351,
									"end": 7355,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7347,
									"end": 7356,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7339,
									"end": 7345,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7335,
									"end": 7357,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7385,
									"end": 7422,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7417,
									"end": 7421,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7385,
									"end": 7422,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7385,
									"end": 7422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7385,
									"end": 7422,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7385,
									"end": 7422,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7444,
									"end": 7445,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7472,
									"end": 7479,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7469,
									"end": 7470,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7466,
									"end": 7480,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7551,
									"end": 7560,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7546,
									"end": 7549,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 7542,
									"end": 7561,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7536,
									"end": 7562,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 7528,
									"end": 7534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7521,
									"end": 7563,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7602,
									"end": 7603,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7594,
									"end": 7600,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7590,
									"end": 7604,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7580,
									"end": 7604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7580,
									"end": 7604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7649,
									"end": 7651,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7638,
									"end": 7647,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7634,
									"end": 7652,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7621,
									"end": 7652,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7621,
									"end": 7652,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7495,
									"end": 7499,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7492,
									"end": 7493,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7483,
									"end": 7500,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7483,
									"end": 7500,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7694,
									"end": 7700,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7685,
									"end": 7692,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7682,
									"end": 7701,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7858,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7858,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 7679,
									"end": 7858,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7752,
									"end": 7761,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7747,
									"end": 7750,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 7743,
									"end": 7762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7737,
									"end": 7763,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 7795,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7837,
									"end": 7841,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7829,
									"end": 7835,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 7825,
									"end": 7842,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7814,
									"end": 7823,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7795,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7795,
									"end": 7843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7795,
									"end": 7843,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7795,
									"end": 7843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7787,
									"end": 7793,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7780,
									"end": 7844,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7702,
									"end": 7858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7858,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 7679,
									"end": 7858,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 7892,
									"end": 7898,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 7888,
									"end": 7902,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7884,
									"end": 7906,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7878,
									"end": 7882,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 7871,
									"end": 7907,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7306,
									"end": 7917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7306,
									"end": 7917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7306,
									"end": 7917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7269,
									"end": 8156,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7269,
									"end": 8156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7269,
									"end": 8156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6859,
									"end": 8162,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6859,
									"end": 8162,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6859,
									"end": 8162,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6767,
									"end": 8162,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6767,
									"end": 8162,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6767,
									"end": 8162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8168,
									"end": 8253,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 8168,
									"end": 8253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8213,
									"end": 8220,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8231,
									"end": 8247,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8231,
									"end": 8247,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8168,
									"end": 8253,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8168,
									"end": 8253,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8168,
									"end": 8253,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8168,
									"end": 8253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8259,
									"end": 8417,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 8259,
									"end": 8417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8317,
									"end": 8326,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8350,
									"end": 8411,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8368,
									"end": 8410,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8377,
									"end": 8409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8403,
									"end": 8408,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8377,
									"end": 8409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 8377,
									"end": 8409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8377,
									"end": 8409,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8377,
									"end": 8409,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8368,
									"end": 8410,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 8368,
									"end": 8410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8368,
									"end": 8410,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8368,
									"end": 8410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8350,
									"end": 8411,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 8350,
									"end": 8411,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8350,
									"end": 8411,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8350,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8337,
									"end": 8411,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8337,
									"end": 8411,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8259,
									"end": 8417,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8259,
									"end": 8417,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8259,
									"end": 8417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8259,
									"end": 8417,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8423,
									"end": 8570,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 8423,
									"end": 8570,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 8557,
									"end": 8562,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 8518,
									"end": 8563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 8563,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 8518,
									"end": 8563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8513,
									"end": 8516,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8506,
									"end": 8564,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8423,
									"end": 8570,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8423,
									"end": 8570,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8423,
									"end": 8570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8576,
									"end": 8814,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 8576,
									"end": 8814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8677,
									"end": 8681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8715,
									"end": 8717,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8704,
									"end": 8713,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8700,
									"end": 8718,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8692,
									"end": 8718,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8692,
									"end": 8718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8728,
									"end": 8807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 8804,
									"end": 8805,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8793,
									"end": 8802,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8789,
									"end": 8806,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8780,
									"end": 8786,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8728,
									"end": 8807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 8728,
									"end": 8807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8728,
									"end": 8807,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 8728,
									"end": 8807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8576,
									"end": 8814,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8576,
									"end": 8814,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8576,
									"end": 8814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8576,
									"end": 8814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8576,
									"end": 8814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8820,
									"end": 8946,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 8820,
									"end": 8946,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8857,
									"end": 8864,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8897,
									"end": 8939,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8890,
									"end": 8895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8886,
									"end": 8940,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8875,
									"end": 8940,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8875,
									"end": 8940,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8820,
									"end": 8946,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8820,
									"end": 8946,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8820,
									"end": 8946,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8820,
									"end": 8946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8952,
									"end": 9048,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 8952,
									"end": 9048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8989,
									"end": 8996,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9018,
									"end": 9042,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9036,
									"end": 9041,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9018,
									"end": 9042,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 9018,
									"end": 9042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9018,
									"end": 9042,
									"name": "tag",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9018,
									"end": 9042,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9007,
									"end": 9042,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9007,
									"end": 9042,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8952,
									"end": 9048,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8952,
									"end": 9048,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8952,
									"end": 9048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8952,
									"end": 9048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9054,
									"end": 9172,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 9054,
									"end": 9172,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9141,
									"end": 9165,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 9159,
									"end": 9164,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9141,
									"end": 9165,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 9141,
									"end": 9165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9141,
									"end": 9165,
									"name": "tag",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 9141,
									"end": 9165,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9136,
									"end": 9139,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9129,
									"end": 9166,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9054,
									"end": 9172,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9054,
									"end": 9172,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9054,
									"end": 9172,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9178,
									"end": 9400,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 9178,
									"end": 9400,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9271,
									"end": 9275,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9309,
									"end": 9311,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9298,
									"end": 9307,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9294,
									"end": 9312,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9286,
									"end": 9312,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9286,
									"end": 9312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9322,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 9390,
									"end": 9391,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9379,
									"end": 9388,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9375,
									"end": 9392,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9366,
									"end": 9372,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9322,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 9322,
									"end": 9393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9322,
									"end": 9393,
									"name": "tag",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 9322,
									"end": 9393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9178,
									"end": 9400,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9178,
									"end": 9400,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9178,
									"end": 9400,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9178,
									"end": 9400,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9178,
									"end": 9400,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9406,
									"end": 9524,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 9406,
									"end": 9524,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9493,
									"end": 9517,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 9511,
									"end": 9516,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9493,
									"end": 9517,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 9493,
									"end": 9517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9493,
									"end": 9517,
									"name": "tag",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 9493,
									"end": 9517,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9488,
									"end": 9491,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9481,
									"end": 9518,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9406,
									"end": 9524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9406,
									"end": 9524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9406,
									"end": 9524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9530,
									"end": 9862,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 9530,
									"end": 9862,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9651,
									"end": 9655,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9689,
									"end": 9691,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 9678,
									"end": 9687,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9674,
									"end": 9692,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9666,
									"end": 9692,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9666,
									"end": 9692,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9702,
									"end": 9773,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 9770,
									"end": 9771,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9759,
									"end": 9768,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9755,
									"end": 9772,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9746,
									"end": 9752,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9702,
									"end": 9773,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 9702,
									"end": 9773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9702,
									"end": 9773,
									"name": "tag",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 9702,
									"end": 9773,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9783,
									"end": 9855,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 9851,
									"end": 9853,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9840,
									"end": 9849,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9836,
									"end": 9854,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9827,
									"end": 9833,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9783,
									"end": 9855,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 9783,
									"end": 9855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9783,
									"end": 9855,
									"name": "tag",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 9783,
									"end": 9855,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9530,
									"end": 9862,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 9530,
									"end": 9862,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9530,
									"end": 9862,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9530,
									"end": 9862,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9530,
									"end": 9862,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9530,
									"end": 9862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9868,
									"end": 10059,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 9868,
									"end": 10059,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9908,
									"end": 9911,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9927,
									"end": 9947,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 9945,
									"end": 9946,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9927,
									"end": 9947,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 9927,
									"end": 9947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9927,
									"end": 9947,
									"name": "tag",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 9927,
									"end": 9947,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9922,
									"end": 9947,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9922,
									"end": 9947,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9961,
									"end": 9981,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 9979,
									"end": 9980,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9961,
									"end": 9981,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 9961,
									"end": 9981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9961,
									"end": 9981,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 9961,
									"end": 9981,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9956,
									"end": 9981,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9956,
									"end": 9981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10004,
									"end": 10005,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10001,
									"end": 10002,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9997,
									"end": 10006,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9990,
									"end": 10006,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9990,
									"end": 10006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10025,
									"end": 10028,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 10022,
									"end": 10023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10019,
									"end": 10029,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 10016,
									"end": 10052,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10016,
									"end": 10052,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10016,
									"end": 10052,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10032,
									"end": 10050,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 10032,
									"end": 10050,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 10032,
									"end": 10050,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10032,
									"end": 10050,
									"name": "tag",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 10032,
									"end": 10050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10016,
									"end": 10052,
									"name": "tag",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10016,
									"end": 10052,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9868,
									"end": 10059,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9868,
									"end": 10059,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9868,
									"end": 10059,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9868,
									"end": 10059,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9868,
									"end": 10059,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10065,
									"end": 10507,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 10065,
									"end": 10507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10214,
									"end": 10218,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10252,
									"end": 10254,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 10241,
									"end": 10250,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10237,
									"end": 10255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10229,
									"end": 10255,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10229,
									"end": 10255,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10265,
									"end": 10336,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 10333,
									"end": 10334,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10322,
									"end": 10331,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10318,
									"end": 10335,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10309,
									"end": 10315,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 10265,
									"end": 10336,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 10265,
									"end": 10336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10265,
									"end": 10336,
									"name": "tag",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 10265,
									"end": 10336,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10346,
									"end": 10418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 10414,
									"end": 10416,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10403,
									"end": 10412,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10399,
									"end": 10417,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10390,
									"end": 10396,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 10346,
									"end": 10418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 10346,
									"end": 10418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10346,
									"end": 10418,
									"name": "tag",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 10346,
									"end": 10418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10428,
									"end": 10500,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 10496,
									"end": 10498,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 10485,
									"end": 10494,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10481,
									"end": 10499,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10472,
									"end": 10478,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10428,
									"end": 10500,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 10428,
									"end": 10500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10428,
									"end": 10500,
									"name": "tag",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 10428,
									"end": 10500,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10065,
									"end": 10507,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 10065,
									"end": 10507,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 10065,
									"end": 10507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10065,
									"end": 10507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10065,
									"end": 10507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10065,
									"end": 10507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10065,
									"end": 10507,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10513,
									"end": 10735,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 10513,
									"end": 10735,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10606,
									"end": 10610,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10644,
									"end": 10646,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10633,
									"end": 10642,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10629,
									"end": 10647,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10621,
									"end": 10647,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10621,
									"end": 10647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10657,
									"end": 10728,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "218"
								},
								{
									"begin": 10725,
									"end": 10726,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10714,
									"end": 10723,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10710,
									"end": 10727,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10701,
									"end": 10707,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10657,
									"end": 10728,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 10657,
									"end": 10728,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10657,
									"end": 10728,
									"name": "tag",
									"source": 8,
									"value": "218"
								},
								{
									"begin": 10657,
									"end": 10728,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10513,
									"end": 10735,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10513,
									"end": 10735,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10513,
									"end": 10735,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10513,
									"end": 10735,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10513,
									"end": 10735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "784"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 4289,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d4e246ff0dcb3815227a5fd5e1a70e28369513cedeed3cc6591597fa56c702a364736f6c63430008180033",
									".code": [
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "655AB927"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "C0E3DAF5"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "CE606EE0"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "EA6ECB08"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "655AB927"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "6A73BF53"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "2BC67DA0"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "355274EA"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "6ED6908"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 380,
											"end": 4289,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 2393,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1638,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 2393,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 2393,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 554,
											"end": 587,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 554,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4022,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2401,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2401,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3704,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 464,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 464,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2632,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2632,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 2393,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1898,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 1903,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1881,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1881,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2068,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2055,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2055,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2065,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2055,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2043,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2043,
											"end": 2066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2043,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2066,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2043,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2032,
											"end": 2067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2032,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2067,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2032,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2032,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2177,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2177,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2165,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2161,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2148,
											"end": 2161,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2148,
											"end": 2189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2148,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2189,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2148,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2144,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2118,
											"end": 2128,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2108,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2108,
											"end": 2144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2108,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2144,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2108,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2189,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2189,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2100,
											"end": 2234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2100,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2253,
											"end": 2263,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2247,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2277,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2247,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2319,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "34987D73948B60CFBA9BEEB35760C345A3BE430F3540605113911EAD78A0830E"
										},
										{
											"begin": 2321,
											"end": 2333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2361,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2363,
											"end": 2384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2384,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2363,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2293,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2385,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 2393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 2393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 587,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 554,
											"end": 587,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 554,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 997,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "784"
										},
										{
											"begin": 986,
											"end": 997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 986,
											"end": 997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4022,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1560,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1542,
											"end": 1610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4124,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4190,
											"end": 4203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4182,
											"end": 4213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 4214,
											"end": 4218,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4219,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4219,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F39EDBEB800007582021719F876F29EB42AA5171248E3DF79A3BF120A4E91416"
										},
										{
											"begin": 4256,
											"end": 4260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4277,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4235,
											"end": 4278,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4278,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4286,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1560,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1542,
											"end": 1610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1542,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2498,
											"end": 2511,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2522,
											"end": 2542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4C2D858A88357E20C1B14C12B9674497934A744BB8118D4D3F2DCE8DED4989BE"
										},
										{
											"begin": 2579,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2592,
											"end": 2598,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2558,
											"end": 2616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2616,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3988,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3988,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3988,
											"end": 4005,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3988,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3968,
											"end": 3978,
											"name": "PUSH",
											"source": 7,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 3960,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3960,
											"end": 4006,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 4006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3960,
											"end": 4006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 4006,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3960,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 4006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 4006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 4014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2683,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2713,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2744,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2720,
											"end": 2744,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2744,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2720,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "PUSH",
											"source": 7,
											"value": "F4240"
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3492,
											"end": 3506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3492,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3506,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3492,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 3696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1167,
											"end": 1171,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1175,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1153,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1252,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1288,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 4,
											"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1364,
											"end": 1399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6431,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6355,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6425,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6409,
											"end": 6425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6409,
											"end": 6425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6431,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6552,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6437,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6539,
											"end": 6544,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6522,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6545,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6522,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6517,
											"end": 6520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6510,
											"end": 6546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6776,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 6558,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6689,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6685,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6766,
											"end": 6767,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6764,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6751,
											"end": 6768,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6748,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6700,
											"end": 6769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6769,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6700,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6776,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 7011,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 6782,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 6956,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F722D4D4E545F4D554D4241492E736F6C2D56616C75656C6573735F54"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6906,
											"end": 6920,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6899,
											"end": 6957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6991,
											"end": 7003,
											"name": "PUSH",
											"source": 8,
											"value": "72616E73616374696F6E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 6986,
											"end": 6988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6978,
											"end": 6984,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6967,
											"end": 7004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 7011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 7011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7017,
											"end": 7383,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 7017,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7162,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 7244,
											"end": 7246,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 7239,
											"end": 7242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 7180,
											"end": 7247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7247,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 7180,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7173,
											"end": 7247,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7173,
											"end": 7247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 7345,
											"end": 7348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7256,
											"end": 7349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7349,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 7256,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7374,
											"end": 7376,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7369,
											"end": 7372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7017,
											"end": 7383,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7017,
											"end": 7383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7017,
											"end": 7383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7017,
											"end": 7383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7389,
											"end": 7808,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 7389,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7555,
											"end": 7559,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7595,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7570,
											"end": 7596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7570,
											"end": 7596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7636,
											"end": 7640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 7629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7626,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7606,
											"end": 7653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7670,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 7796,
											"end": 7800,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7670,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 7670,
											"end": 7801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7670,
											"end": 7801,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 7670,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7662,
											"end": 7801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7662,
											"end": 7801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7389,
											"end": 7808,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7389,
											"end": 7808,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7389,
											"end": 7808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7389,
											"end": 7808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7814,
											"end": 7994,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 7814,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7939,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7859,
											"end": 7860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7949,
											"end": 7964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7983,
											"end": 7987,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7980,
											"end": 7981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7988,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8000,
											"end": 8102,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8000,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8042,
											"end": 8050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8089,
											"end": 8094,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8087,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8082,
											"end": 8095,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8000,
											"end": 8102,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8000,
											"end": 8102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8000,
											"end": 8102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8000,
											"end": 8102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8956,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 8108,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8169,
											"end": 8174,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8180,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8200,
											"end": 8206,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8191,
											"end": 8206,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8191,
											"end": 8206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8224,
											"end": 8229,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8215,
											"end": 8229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8215,
											"end": 8229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8950,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 8238,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8259,
											"end": 8260,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8249,
											"end": 8257,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8261,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8950,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 8238,
											"end": 8950,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8352,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8345,
											"end": 8359,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8336,
											"end": 8360,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 8333,
											"end": 8383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 8363,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 8363,
											"end": 8381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8381,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 8363,
											"end": 8381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8383,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 8333,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8413,
											"end": 8414,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8403,
											"end": 8411,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8847,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 8396,
											"end": 8847,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8828,
											"end": 8832,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8821,
											"end": 8826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8817,
											"end": 8833,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8847,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 8396,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8878,
											"end": 8882,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8872,
											"end": 8876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8868,
											"end": 8883,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 8931,
											"end": 8939,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8908,
											"end": 8940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8940,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 8908,
											"end": 8940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8940,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 8238,
											"end": 8950,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8950,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 8238,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8956,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8956,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8956,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 10035,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 8962,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9207,
											"end": 9215,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9230,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 9230,
											"end": 9235,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9246,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 9246,
											"end": 9282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9273,
											"end": 9274,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9264,
											"end": 9274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9264,
											"end": 9274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9275,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 9275,
											"end": 9280,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9246,
											"end": 9282,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 9246,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9342,
											"end": 9346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9390,
											"end": 9391,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9385,
											"end": 9412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9385,
											"end": 9412,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9385,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 9385,
											"end": 9412,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9421,
											"end": 9612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9421,
											"end": 9612,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9421,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 9421,
											"end": 9612,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 9335,
											"end": 9612,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9385,
											"end": 9412,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 9385,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9403,
											"end": 9404,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9394,
											"end": 9404,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9394,
											"end": 9404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9405,
											"end": 9410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9405,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 9405,
											"end": 9410,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9421,
											"end": 9612,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 9421,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9469,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 9456,
											"end": 9464,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9453,
											"end": 9470,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9450,
											"end": 9493,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9450,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 9450,
											"end": 9493,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9473,
											"end": 9491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9450,
											"end": 9493,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 9450,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9530,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9520,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9515,
											"end": 9531,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9557,
											"end": 9560,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9547,
											"end": 9561,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9584,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 9544,
											"end": 9584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9564,
											"end": 9582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9584,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 9544,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9597,
											"end": 9602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9597,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 9597,
											"end": 9602,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9612,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 9335,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9721,
											"end": 9723,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9711,
											"end": 9719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9708,
											"end": 9724,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9702,
											"end": 9705,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 9696,
											"end": 9700,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9706,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9689,
											"end": 9725,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9671,
											"end": 9673,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 9661,
											"end": 9669,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9658,
											"end": 9674,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9653,
											"end": 9655,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 9647,
											"end": 9651,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9644,
											"end": 9656,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9640,
											"end": 9675,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9624,
											"end": 9735,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9867,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 9621,
											"end": 9867,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9777,
											"end": 9785,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9767,
											"end": 9786,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9758,
											"end": 9786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9758,
											"end": 9786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9812,
											"end": 9815,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9805,
											"end": 9810,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9802,
											"end": 9816,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9839,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 9799,
											"end": 9839,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9819,
											"end": 9837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9839,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 9799,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 9852,
											"end": 9857,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9867,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 9621,
											"end": 9867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9892,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 9930,
											"end": 9933,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9920,
											"end": 9928,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 9918,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9892,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 9892,
											"end": 9934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9892,
											"end": 9934,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 9892,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9877,
											"end": 9934,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9877,
											"end": 9934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9877,
											"end": 9934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9877,
											"end": 9934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 9970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 9971,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9950,
											"end": 9955,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9947,
											"end": 9972,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 9995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 9944,
											"end": 9995,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9975,
											"end": 9993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 9995,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 9944,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10028,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10013,
											"end": 10029,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10004,
											"end": 10029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10004,
											"end": 10029,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 10035,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 8962,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 10035,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 10035,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 10035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 10035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 10035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 10035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10041,
											"end": 10326,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 10041,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10101,
											"end": 10106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 10143,
											"end": 10147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10125,
											"end": 10148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 10125,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10117,
											"end": 10148,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10117,
											"end": 10148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10169,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 10187,
											"end": 10195,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10169,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10169,
											"end": 10196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10169,
											"end": 10196,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 10169,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10196,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 10252,
											"end": 10318,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10242,
											"end": 10250,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10236,
											"end": 10240,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10215,
											"end": 10319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10319,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 10215,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10206,
											"end": 10319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10206,
											"end": 10319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10041,
											"end": 10326,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10041,
											"end": 10326,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10041,
											"end": 10326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10041,
											"end": 10326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10041,
											"end": 10326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10742,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 10332,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10372,
											"end": 10379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10395,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 10413,
											"end": 10414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10395,
											"end": 10415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10415,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 10395,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 10447,
											"end": 10448,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10429,
											"end": 10449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10449,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 10429,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10484,
											"end": 10485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10481,
											"end": 10482,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10477,
											"end": 10486,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10506,
											"end": 10536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 10524,
											"end": 10535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10506,
											"end": 10536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10506,
											"end": 10536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10506,
											"end": 10536,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 10506,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10495,
											"end": 10536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10495,
											"end": 10536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10685,
											"end": 10686,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10676,
											"end": 10683,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10672,
											"end": 10687,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10669,
											"end": 10670,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10688,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10646,
											"end": 10647,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10639,
											"end": 10648,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10619,
											"end": 10702,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10596,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 10596,
											"end": 10735,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 10715,
											"end": 10733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10596,
											"end": 10735,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 10596,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10380,
											"end": 10742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10742,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10748,
											"end": 10928,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10748,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10796,
											"end": 10873,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10793,
											"end": 10794,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10786,
											"end": 10874,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10893,
											"end": 10897,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10890,
											"end": 10891,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10883,
											"end": 10898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 10921,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10914,
											"end": 10915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10907,
											"end": 10922,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11119,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 10934,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 11009,
											"end": 11010,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10991,
											"end": 11011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10986,
											"end": 11011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10986,
											"end": 11011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11025,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 11043,
											"end": 11044,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11025,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 11025,
											"end": 11045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11025,
											"end": 11045,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 11025,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11064,
											"end": 11065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11054,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 11054,
											"end": 11089,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11069,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 11069,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 11069,
											"end": 11087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11069,
											"end": 11087,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 11069,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11054,
											"end": 11089,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 11054,
											"end": 11089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11111,
											"end": 11112,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11104,
											"end": 11113,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11099,
											"end": 11113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11099,
											"end": 11113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11119,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11119,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11316,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 11125,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 11202,
											"end": 11203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 11184,
											"end": 11204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11179,
											"end": 11204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11179,
											"end": 11204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 11236,
											"end": 11237,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 11218,
											"end": 11238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11213,
											"end": 11238,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11213,
											"end": 11238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11261,
											"end": 11262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11254,
											"end": 11263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11247,
											"end": 11263,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11247,
											"end": 11263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11282,
											"end": 11285,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11279,
											"end": 11280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11276,
											"end": 11286,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11309,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 11273,
											"end": 11309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 11289,
											"end": 11307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11309,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 11273,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11316,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11549,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 11322,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11462,
											"end": 11496,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F722D4D4E545F4D554D4241492E736F6C2D457863656564735F4D6178"
										},
										{
											"begin": 11458,
											"end": 11459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11450,
											"end": 11456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11446,
											"end": 11460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11439,
											"end": 11497,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11531,
											"end": 11541,
											"name": "PUSH",
											"source": 8,
											"value": "5F42616C616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11526,
											"end": 11528,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11518,
											"end": 11524,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11514,
											"end": 11529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11507,
											"end": 11542,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11697,
											"end": 11700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11718,
											"end": 11785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 11782,
											"end": 11784,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 11777,
											"end": 11780,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 11785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 11718,
											"end": 11785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 11785,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 11718,
											"end": 11785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11711,
											"end": 11785,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11711,
											"end": 11785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11794,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 11883,
											"end": 11886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11794,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 11794,
											"end": 11887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11794,
											"end": 11887,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 11794,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11914,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11907,
											"end": 11910,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11903,
											"end": 11915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 11915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 11915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11555,
											"end": 11921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12093,
											"end": 12097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12131,
											"end": 12133,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12120,
											"end": 12129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12116,
											"end": 12134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12108,
											"end": 12134,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12108,
											"end": 12134,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12180,
											"end": 12189,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12174,
											"end": 12178,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12166,
											"end": 12167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12155,
											"end": 12164,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12151,
											"end": 12168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12144,
											"end": 12191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12208,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 12334,
											"end": 12338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12208,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 12208,
											"end": 12339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12208,
											"end": 12339,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 12208,
											"end": 12339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12200,
											"end": 12339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12200,
											"end": 12339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11927,
											"end": 12346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12905,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 12352,
											"end": 12905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12529,
											"end": 12533,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12567,
											"end": 12570,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 12556,
											"end": 12565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12552,
											"end": 12571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12544,
											"end": 12571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12544,
											"end": 12571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 12649,
											"end": 12650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12638,
											"end": 12647,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12634,
											"end": 12651,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12625,
											"end": 12631,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12581,
											"end": 12652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12662,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 12730,
											"end": 12732,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12719,
											"end": 12728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12706,
											"end": 12712,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12662,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12662,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12662,
											"end": 12734,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 12662,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12744,
											"end": 12816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 12812,
											"end": 12814,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12801,
											"end": 12810,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12797,
											"end": 12815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 12794,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12744,
											"end": 12816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12744,
											"end": 12816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12744,
											"end": 12816,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 12744,
											"end": 12816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12826,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 12894,
											"end": 12896,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 12883,
											"end": 12892,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12870,
											"end": 12876,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12826,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12826,
											"end": 12898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12826,
											"end": 12898,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 12826,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12905,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12905,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12911,
											"end": 13091,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 12911,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 13036,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12956,
											"end": 12957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 13037,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13056,
											"end": 13060,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 13053,
											"end": 13054,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13046,
											"end": 13061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13080,
											"end": 13084,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13077,
											"end": 13078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13070,
											"end": 13085,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13097,
											"end": 13417,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 13097,
											"end": 13417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13141,
											"end": 13147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13178,
											"end": 13179,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 13172,
											"end": 13176,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13168,
											"end": 13180,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13158,
											"end": 13180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13158,
											"end": 13180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13225,
											"end": 13226,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13219,
											"end": 13223,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13215,
											"end": 13227,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13246,
											"end": 13264,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13236,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 13236,
											"end": 13317,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13306,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 13294,
											"end": 13300,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13290,
											"end": 13307,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13280,
											"end": 13307,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13280,
											"end": 13307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13236,
											"end": 13317,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 13236,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13364,
											"end": 13366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13356,
											"end": 13362,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13353,
											"end": 13367,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13333,
											"end": 13351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13330,
											"end": 13368,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13327,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 13327,
											"end": 13411,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 13383,
											"end": 13401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 13383,
											"end": 13401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13401,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 13383,
											"end": 13401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13327,
											"end": 13411,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 13327,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13148,
											"end": 13417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13097,
											"end": 13417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13097,
											"end": 13417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13097,
											"end": 13417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13097,
											"end": 13417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13423,
											"end": 13601,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 13423,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13563,
											"end": 13593,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F722D4D4E545F4D554D4241492E736F6C2D4F776E61626C6500000000"
										},
										{
											"begin": 13559,
											"end": 13560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13551,
											"end": 13557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 13561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13540,
											"end": 13594,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13423,
											"end": 13601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13423,
											"end": 13601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13607,
											"end": 13973,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 13607,
											"end": 13973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13770,
											"end": 13837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 13834,
											"end": 13836,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 13829,
											"end": 13832,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13770,
											"end": 13837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 13770,
											"end": 13837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13770,
											"end": 13837,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 13770,
											"end": 13837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13763,
											"end": 13837,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13763,
											"end": 13837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13846,
											"end": 13939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 13935,
											"end": 13938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13846,
											"end": 13939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 13846,
											"end": 13939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13846,
											"end": 13939,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 13846,
											"end": 13939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13964,
											"end": 13966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13959,
											"end": 13962,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13955,
											"end": 13967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13948,
											"end": 13967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13948,
											"end": 13967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13607,
											"end": 13973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13607,
											"end": 13973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13607,
											"end": 13973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13607,
											"end": 13973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13979,
											"end": 14398,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 13979,
											"end": 14398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14145,
											"end": 14149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14183,
											"end": 14185,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14172,
											"end": 14181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14168,
											"end": 14186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14160,
											"end": 14186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14160,
											"end": 14186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14232,
											"end": 14241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14226,
											"end": 14230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14222,
											"end": 14242,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14218,
											"end": 14219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14216,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14203,
											"end": 14220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14196,
											"end": 14243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14260,
											"end": 14391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 14386,
											"end": 14390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14260,
											"end": 14391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 14260,
											"end": 14391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14260,
											"end": 14391,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 14260,
											"end": 14391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13979,
											"end": 14398,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13979,
											"end": 14398,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13979,
											"end": 14398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13979,
											"end": 14398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 14736,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 14404,
											"end": 14736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14525,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14563,
											"end": 14565,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14552,
											"end": 14561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14540,
											"end": 14566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14540,
											"end": 14566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14576,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 14644,
											"end": 14645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14633,
											"end": 14642,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14629,
											"end": 14646,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14620,
											"end": 14626,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14576,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 14576,
											"end": 14647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14576,
											"end": 14647,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 14576,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 14725,
											"end": 14727,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14714,
											"end": 14723,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14701,
											"end": 14707,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 14657,
											"end": 14729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 14729,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 14657,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 14736,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 14736,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 14736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 14736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 14736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 14736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 15184,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 14742,
											"end": 15184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14891,
											"end": 14895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14929,
											"end": 14931,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14918,
											"end": 14927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14914,
											"end": 14932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14906,
											"end": 14932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14906,
											"end": 14932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14942,
											"end": 15013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 15010,
											"end": 15011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14999,
											"end": 15008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14995,
											"end": 15012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14986,
											"end": 14992,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14942,
											"end": 15013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 14942,
											"end": 15013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14942,
											"end": 15013,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 14942,
											"end": 15013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15023,
											"end": 15095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 15091,
											"end": 15093,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15080,
											"end": 15089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15076,
											"end": 15094,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15067,
											"end": 15073,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15023,
											"end": 15095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 15023,
											"end": 15095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15023,
											"end": 15095,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 15023,
											"end": 15095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15105,
											"end": 15177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 15173,
											"end": 15175,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15162,
											"end": 15171,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15158,
											"end": 15176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15149,
											"end": 15155,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15105,
											"end": 15177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 15105,
											"end": 15177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15105,
											"end": 15177,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 15105,
											"end": 15177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 15184,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 15184,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 15184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 15184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 15184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 15184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 15184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15190,
											"end": 15295,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 15190,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15226,
											"end": 15233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15266,
											"end": 15288,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15259,
											"end": 15264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15255,
											"end": 15289,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15190,
											"end": 15295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15190,
											"end": 15295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15190,
											"end": 15295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15190,
											"end": 15295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15301,
											"end": 15421,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 15301,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15373,
											"end": 15396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 15390,
											"end": 15395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15373,
											"end": 15396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 15373,
											"end": 15396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15373,
											"end": 15396,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 15373,
											"end": 15396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15366,
											"end": 15371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15363,
											"end": 15397,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 15353,
											"end": 15415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 15353,
											"end": 15415,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15411,
											"end": 15412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15408,
											"end": 15409,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15401,
											"end": 15413,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15353,
											"end": 15415,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 15353,
											"end": 15415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15301,
											"end": 15421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15301,
											"end": 15421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15568,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 15427,
											"end": 15568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15514,
											"end": 15520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 15521,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15499,
											"end": 15521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15499,
											"end": 15521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15530,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 15556,
											"end": 15561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15530,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 15530,
											"end": 15562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15530,
											"end": 15562,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 15530,
											"end": 15562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15568,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15574,
											"end": 15694,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 15574,
											"end": 15694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15646,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 15663,
											"end": 15668,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15646,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 15646,
											"end": 15669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15646,
											"end": 15669,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 15646,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15639,
											"end": 15644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 15670,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 15626,
											"end": 15688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 15626,
											"end": 15688,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 15685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15681,
											"end": 15682,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15674,
											"end": 15686,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15626,
											"end": 15688,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 15626,
											"end": 15688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15574,
											"end": 15694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15574,
											"end": 15694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15700,
											"end": 15841,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 15700,
											"end": 15841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15756,
											"end": 15761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15787,
											"end": 15793,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15781,
											"end": 15794,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15772,
											"end": 15794,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15772,
											"end": 15794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15803,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 15829,
											"end": 15834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15803,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 15803,
											"end": 15835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15803,
											"end": 15835,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 15803,
											"end": 15835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15700,
											"end": 15841,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15700,
											"end": 15841,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15700,
											"end": 15841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15700,
											"end": 15841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15700,
											"end": 15841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15904,
											"end": 15909,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15935,
											"end": 15941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15929,
											"end": 15942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15920,
											"end": 15942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15920,
											"end": 15942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15951,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 15978,
											"end": 15983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15951,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 15951,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15951,
											"end": 15984,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 15951,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15847,
											"end": 15990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16099,
											"end": 16105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16107,
											"end": 16113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16115,
											"end": 16121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16123,
											"end": 16129,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16131,
											"end": 16137,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16180,
											"end": 16183,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 16168,
											"end": 16177,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16159,
											"end": 16166,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16155,
											"end": 16178,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16151,
											"end": 16184,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 16148,
											"end": 16268,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16148,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 16148,
											"end": 16268,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16187,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 16187,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 16187,
											"end": 16266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16187,
											"end": 16266,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 16187,
											"end": 16266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16148,
											"end": 16268,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 16148,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16308,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16332,
											"end": 16395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 16387,
											"end": 16394,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16378,
											"end": 16384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16367,
											"end": 16376,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16363,
											"end": 16385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16332,
											"end": 16395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 16332,
											"end": 16395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16332,
											"end": 16395,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 16332,
											"end": 16395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16322,
											"end": 16395,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 16322,
											"end": 16395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16278,
											"end": 16405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16446,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16470,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 16525,
											"end": 16532,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16516,
											"end": 16522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16505,
											"end": 16514,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16501,
											"end": 16523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16470,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 16470,
											"end": 16533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16470,
											"end": 16533,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 16470,
											"end": 16533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16460,
											"end": 16533,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16460,
											"end": 16533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16415,
											"end": 16543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 16584,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 16664,
											"end": 16671,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16655,
											"end": 16661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16644,
											"end": 16653,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16640,
											"end": 16662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 16608,
											"end": 16672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16598,
											"end": 16672,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16598,
											"end": 16672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16553,
											"end": 16682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16721,
											"end": 16723,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16747,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 16803,
											"end": 16810,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16794,
											"end": 16800,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16783,
											"end": 16792,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 16747,
											"end": 16811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16811,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 16747,
											"end": 16811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16737,
											"end": 16811,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16737,
											"end": 16811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16692,
											"end": 16821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16860,
											"end": 16863,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 16887,
											"end": 16950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 16942,
											"end": 16949,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16933,
											"end": 16939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16922,
											"end": 16931,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16918,
											"end": 16940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16887,
											"end": 16950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 16887,
											"end": 16950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16887,
											"end": 16950,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 16887,
											"end": 16950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16877,
											"end": 16950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16877,
											"end": 16950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16831,
											"end": 16960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 16967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16973,
											"end": 17358,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 16973,
											"end": 17358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17012,
											"end": 17013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17029,
											"end": 17048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 17046,
											"end": 17047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17029,
											"end": 17048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 17029,
											"end": 17048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17029,
											"end": 17048,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 17029,
											"end": 17048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17024,
											"end": 17048,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17024,
											"end": 17048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17062,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 17079,
											"end": 17080,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17062,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 17062,
											"end": 17081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17062,
											"end": 17081,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 17062,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17100,
											"end": 17101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17090,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 17090,
											"end": 17125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17105,
											"end": 17123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 17105,
											"end": 17123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 17105,
											"end": 17123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17105,
											"end": 17123,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 17105,
											"end": 17123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17090,
											"end": 17125,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 17090,
											"end": 17125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17291,
											"end": 17292,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17288,
											"end": 17289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17284,
											"end": 17293,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17281,
											"end": 17282,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17278,
											"end": 17294,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17197,
											"end": 17263,
											"name": "PUSH",
											"source": 8,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17194,
											"end": 17195,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17191,
											"end": 17264,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17174,
											"end": 17304,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17171,
											"end": 17327,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17171,
											"end": 17327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 17171,
											"end": 17327,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17307,
											"end": 17325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 17307,
											"end": 17325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 17307,
											"end": 17325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17307,
											"end": 17325,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 17307,
											"end": 17325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17171,
											"end": 17327,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 17171,
											"end": 17327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17350,
											"end": 17351,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17347,
											"end": 17348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17342,
											"end": 17352,
											"name": "SDIV",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16973,
											"end": 17358,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16973,
											"end": 17358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16973,
											"end": 17358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16973,
											"end": 17358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16973,
											"end": 17358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17806,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 17364,
											"end": 17806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17513,
											"end": 17517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17551,
											"end": 17553,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 17540,
											"end": 17549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17536,
											"end": 17554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17528,
											"end": 17554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17528,
											"end": 17554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17564,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 17632,
											"end": 17633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17630,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17617,
											"end": 17634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17614,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17564,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 17564,
											"end": 17635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17564,
											"end": 17635,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 17564,
											"end": 17635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17645,
											"end": 17717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 17713,
											"end": 17715,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17702,
											"end": 17711,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17698,
											"end": 17716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17689,
											"end": 17695,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17645,
											"end": 17717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 17645,
											"end": 17717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17645,
											"end": 17717,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 17645,
											"end": 17717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17727,
											"end": 17799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 17795,
											"end": 17797,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17784,
											"end": 17793,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17780,
											"end": 17798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17771,
											"end": 17777,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17727,
											"end": 17799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 17727,
											"end": 17799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17727,
											"end": 17799,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 17727,
											"end": 17799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17806,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17806,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/MNT_Mumbai.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"OneMATICInCents()": "ea6ecb08",
							"WithdrawMintingFees()": "655ab927",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokensFromContract()": "06ed6908",
							"cap()": "355274ea",
							"capPerAccount()": "2bc67da0",
							"contractOwner()": "ce606ee0",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateCapPerAccount(uint256)": "6a73bf53",
							"zTokenPriceInWei()": "c0e3daf5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CapPerAccountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MintingFeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OneMATICInCents\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithdrawMintingFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokensFromContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"capPerAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"updateCapPerAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zTokenPriceInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MNT_Mumbai.sol\":\"MNT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084698c9feace630ff29919baad9df0721944eb2ecaf942ef807935bbbe41b5a\",\"dweb:/ipfs/Qmet4EQYqPLSKo7UPBNGaVw5NPATNkiLsqSCnCgg5kAPg4\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MNT_Mumbai.sol\":{\"keccak256\":\"0x6014ac50262a9b47971221351b2761f106f0d2cdc8eba2c2288f41fb5f94c959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7769f39f89e4a19513cf2e0460ec4300d769179e7755054db6c3fd09a8940d6b\",\"dweb:/ipfs/QmajSaRcFsjLjUHNUutGDjN8khe8a3AbSf6s3z758ec5hL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "contracts/MNT_Mumbai.sol:MNT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "contracts/MNT_Mumbai.sol:MNT",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 213,
								"contract": "contracts/MNT_Mumbai.sol:MNT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "contracts/MNT_Mumbai.sol:MNT",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 217,
								"contract": "contracts/MNT_Mumbai.sol:MNT",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 940,
								"contract": "contracts/MNT_Mumbai.sol:MNT",
								"label": "dataFeed",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 942,
								"contract": "contracts/MNT_Mumbai.sol:MNT",
								"label": "contractOwner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 945,
								"contract": "contracts/MNT_Mumbai.sol:MNT",
								"label": "ourCap",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 948,
								"contract": "contracts/MNT_Mumbai.sol:MNT",
								"label": "capPerAccount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							182
						],
						"IERC20Errors": [
							87
						],
						"IERC721Errors": [
							135
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 57,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 62,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 67,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 76,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 81,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 86,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 183,
							"src": "278:1764:1",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 88,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 135,
							"linearizedBaseContracts": [
								135
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 93,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 98,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 107,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 112,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 117,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 124,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 129,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 134,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 183,
							"src": "2186:2092:1",
							"usedErrors": [
								93,
								98,
								107,
								112,
								117,
								124,
								129,
								134
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 136,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 147,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 152,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 157,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 164,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 169,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 174,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 181,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 183,
							"src": "4424:2107:1",
							"usedErrors": [
								147,
								152,
								157,
								164,
								169,
								174,
								181
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							930
						],
						"ERC20": [
							697
						],
						"IERC20": [
							775
						],
						"IERC20Errors": [
							87
						],
						"IERC20Metadata": [
							900
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 776,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 185,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 775,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 901,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 187,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 900,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 931,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 189,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 930,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 183,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 191,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 87,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 194,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 930,
										"src": "1428:7:2"
									},
									"id": 195,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 196,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "1437:6:2"
									},
									"id": 197,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 198,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 900,
										"src": "1445:14:2"
									},
									"id": 199,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 200,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 87,
										"src": "1461:12:2"
									},
									"id": 201,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697,
								87,
								900,
								775,
								930
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 204,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 202,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 203,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 210,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 206,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 209,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 207,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 208,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 213,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 214,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 217,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 216,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 225,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 234,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 697,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										887
									],
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 240,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 239,
												"id": 241,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 237,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 697,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										893
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 217,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 697,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 257,
												"id": 259,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 697,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										724
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 267,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 268,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 697,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										732
									],
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 278,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 280,
													"indexExpression": {
														"id": 279,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 697,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 293,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 297,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 295,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 298,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 292,
												"id": 305,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 697,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 317,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 319,
														"indexExpression": {
															"id": 318,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 321,
													"indexExpression": {
														"id": 320,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 322,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 697,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										762
									],
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 336,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															588,
															648
														],
														"referencedDeclaration": 588,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 333,
												"id": 346,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 697,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										774
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 360,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 362,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 372,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 359,
												"id": 378,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 697,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 390,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 391,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 404,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 397,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 396,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 402,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 405,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 406,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 419,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 418,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 412,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 411,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 417,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 697,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 438,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																449
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 449,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 474,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 448,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 453,
															"initialValue": {
																"baseExpression": {
																	"id": 450,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 452,
																"indexExpression": {
																	"id": 451,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 454,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 455,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 464,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 463,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 458,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 459,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 449,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 460,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 457,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 57,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 462,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 473,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 465,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 467,
																			"indexExpression": {
																				"id": 466,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 430,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 468,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 449,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 469,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 472,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 447,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 443,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 444,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 446,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 476,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 477,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 494,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 488,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 490,
																			"indexExpression": {
																				"id": 489,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 493,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 487,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 486,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 482,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 483,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 485,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 498,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 500,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 697,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 512,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 513,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 519,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 518,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 524,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 528,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 697,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 545,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 546,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 559,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 558,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 552,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 551,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 557,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 697,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 580,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															588,
															648
														],
														"referencedDeclaration": 648,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 697,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 630,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 633,
															"indexExpression": {
																"id": 631,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 634,
														"indexExpression": {
															"id": 632,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 635,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 638,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 597,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 646,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 640,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 641,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 642,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 639,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 697,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 660,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 667,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 666,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 672,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 673,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 682,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 681,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 676,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 653,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 677,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 678,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 655,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 675,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 76,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 680,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 692,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 684,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 651,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 685,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 653,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 686,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 687,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 655,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 683,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				588,
																				648
																			],
																			"referencedDeclaration": 648,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 697,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 698,
							"src": "1401:9741:2",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86
							],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 700,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 709,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 718,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 775,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 775,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 775,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 775,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 775,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 775,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 776,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
					"exportedSymbols": {
						"ERC20": [
							697
						],
						"ERC20Capped": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 875,
							"sourceUnit": 698,
							"src": "148:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 778,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 697,
										"src": "156:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "ERC20",
										"nameLocations": [
											"296:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 697,
										"src": "296:5:4"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "296:5:4"
								}
							],
							"canonicalName": "ERC20Capped",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 780,
								"nodeType": "StructuredDocumentation",
								"src": "185:77:4",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874,
								697,
								87,
								900,
								775,
								930
							],
							"name": "ERC20Capped",
							"nameLocation": "281:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 784,
									"mutability": "immutable",
									"name": "_cap",
									"nameLocation": "334:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 874,
									"src": "308:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "308:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "345:59:4",
										"text": " @dev Total supply cap has been exceeded."
									},
									"errorSelector": "9e79f854",
									"id": 791,
									"name": "ERC20ExceededCap",
									"nameLocation": "415:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "increasedSupply",
												"nameLocation": "440:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "432:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "465:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "457:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:38:4"
									},
									"src": "409:61:4"
								},
								{
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "476:60:4",
										"text": " @dev The supplied cap is not a valid cap."
									},
									"errorSelector": "392e1e27",
									"id": 796,
									"name": "ERC20InvalidCap",
									"nameLocation": "547:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "571:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "563:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:13:4"
									},
									"src": "541:35:4"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "742:102:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 802,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "756:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "764:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "756:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"nodeType": "IfStatement",
												"src": "752:65:4",
												"trueBody": {
													"id": 809,
													"nodeType": "Block",
													"src": "767:50:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 805,
																	"name": "ERC20InvalidCap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "788:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "788:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 808,
															"nodeType": "RevertStatement",
															"src": "781:25:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 811,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "826:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 812,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "833:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "826:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "826:11:4"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "582:129:4",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 816,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "736:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:14:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:0:4"
									},
									"scope": 874,
									"src": "716:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "976:28:4",
										"statements": [
											{
												"expression": {
													"id": 822,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 784,
													"src": "993:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 821,
												"id": 823,
												"nodeType": "Return",
												"src": "986:11:4"
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "850:68:4",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "932:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:4"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "967:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:9:4"
									},
									"scope": 874,
									"src": "923:81:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										504
									],
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "1143:287:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "1167:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "1173:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "1177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 836,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1153:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Capped_$874_$",
																"typeString": "type(contract super ERC20Capped)"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1159:7:4",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 504,
														"src": "1153:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "1153:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 844,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1198:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1206:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 845,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1206:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1206:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1198:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "1194:230:4",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "1218:206:4",
													"statements": [
														{
															"assignments": [
																851
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 851,
																	"mutability": "mutable",
																	"name": "maxSupply",
																	"nameLocation": "1240:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 870,
																	"src": "1232:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 850,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1232:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 854,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 852,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "1252:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:5:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1232:25:4"
														},
														{
															"assignments": [
																856
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 856,
																	"mutability": "mutable",
																	"name": "supply",
																	"nameLocation": "1279:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 870,
																	"src": "1271:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 855,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1271:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 859,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 857,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "1288:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1288:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1271:30:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 860,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "1319:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 861,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "1328:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1319:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 869,
															"nodeType": "IfStatement",
															"src": "1315:99:4",
															"trueBody": {
																"id": 868,
																"nodeType": "Block",
																"src": "1339:75:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 864,
																					"name": "supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 856,
																					"src": "1381:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 865,
																					"name": "maxSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "1389:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 863,
																				"name": "ERC20ExceededCap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "1364:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1364:35:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 867,
																		"nodeType": "RevertStatement",
																		"src": "1357:42:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "1010:44:4",
										"text": " @dev See {ERC20-_update}."
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1068:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 834,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1134:8:4"
									},
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1084:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "1076:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1098:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "1090:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1110:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "1102:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:41:4"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:4"
									},
									"scope": 874,
									"src": "1059:371:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "263:1169:4",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86,
								791,
								796
							],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "122:1311:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							775
						],
						"IERC20Metadata": [
							900
						]
					},
					"id": 901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 901,
							"sourceUnit": 776,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 877,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 775,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 880,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "305:6:5"
									},
									"id": 881,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 879,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 900,
							"linearizedBaseContracts": [
								900,
								775
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 884,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 900,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 890,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 900,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 896,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 900,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 901,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							930
						]
					},
					"id": 931,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 902,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 903,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 930,
							"linearizedBaseContracts": [
								930
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 908,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 907,
												"id": 910,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 930,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 917,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 916,
												"id": 919,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 930,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 925,
												"id": 927,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 930,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 931,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/MNT_Mumbai.sol": {
				"ast": {
					"absolutePath": "contracts/MNT_Mumbai.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							930
						],
						"ERC20": [
							697
						],
						"ERC20Capped": [
							874
						],
						"IERC20": [
							775
						],
						"IERC20Errors": [
							87
						],
						"IERC20Metadata": [
							900
						],
						"MNT": [
							1191
						]
					},
					"id": 1192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 932,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 933,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 698,
							"src": "70:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"id": 934,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 875,
							"src": "156:72:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 46,
							"src": "266:76:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 936,
										"name": "ERC20Capped",
										"nameLocations": [
											"396:11:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "396:11:7"
									},
									"id": 937,
									"nodeType": "InheritanceSpecifier",
									"src": "396:11:7"
								}
							],
							"canonicalName": "MNT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1191,
							"linearizedBaseContracts": [
								1191,
								874,
								697,
								87,
								900,
								775,
								930
							],
							"name": "MNT",
							"nameLocation": "389:3:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 940,
									"mutability": "mutable",
									"name": "dataFeed",
									"nameLocation": "447:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "416:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 939,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 938,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"416:21:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "416:21:7"
										},
										"referencedDeclaration": 45,
										"src": "416:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ce606ee0",
									"id": 942,
									"mutability": "mutable",
									"name": "contractOwner",
									"nameLocation": "479:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "464:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 941,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 945,
									"mutability": "mutable",
									"name": "ourCap",
									"nameLocation": "507:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "499:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "499:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030303030303030",
										"id": 944,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "514:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000_by_1",
											"typeString": "int_const 5000000000"
										},
										"value": "5000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "2bc67da0",
									"id": 948,
									"mutability": "mutable",
									"name": "capPerAccount",
									"nameLocation": "569:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "554:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "554:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 947,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "583:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "34987d73948b60cfba9beeb35760c345a3be430f3540605113911ead78a0830e",
									"id": 960,
									"name": "TokensPurchased",
									"nameLocation": "693:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "725:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "709:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensMinted",
												"nameLocation": "740:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "732:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "weiPaid",
												"nameLocation": "762:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "754:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "779:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "771:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "798:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "790:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:98:7"
									},
									"src": "687:120:7"
								},
								{
									"anonymous": false,
									"eventSelector": "f39edbeb800007582021719f876f29eb42aa5171248e3df79a3bf120a4e91416",
									"id": 966,
									"name": "MintingFeesWithdrawn",
									"nameLocation": "881:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "910:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "902:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "926:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "918:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:35:7"
									},
									"src": "875:62:7"
								},
								{
									"anonymous": false,
									"eventSelector": "4c2d858a88357e20c1b14c12b9674497934a744bb8118d4d3f2dce8ded4989be",
									"id": 974,
									"name": "CapPerAccountUpdated",
									"nameLocation": "1053:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousCap",
												"nameLocation": "1082:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1074:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCap",
												"nameLocation": "1103:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1095:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1119:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1111:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:56:7"
									},
									"src": "1047:83:7"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "1227:270:7",
										"statements": [
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 993,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "1238:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 994,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1252:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1256:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1252:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1238:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "1238:24:7"
											},
											{
												"expression": {
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 998,
														"name": "dataFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "1273:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307864304435653344423434444530354539463239344242306133624545614630333044453234416461",
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1306:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 999,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1284:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1284:65:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1273:76:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "1273:76:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1005,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1438:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32353030303030303030",
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1452:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500000000_by_1",
																	"typeString": "int_const 2500000000"
																},
																"value": "2500000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1464:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1010,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 261,
																						"src": "1476:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 1011,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1476:10:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 1009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1468:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1008,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1468:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1468:19:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1464:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1014,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1463:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1452:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1004,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "1432:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1432:57:7"
											}
										]
									},
									"id": 1019,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d6f6e6574",
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1160:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_833380855b16b7a065ce84a5c18623936f24c3ab022bc7149e7bb79fdd4b18ab",
														"typeString": "literal_string \"Monet\""
													},
													"value": "Monet"
												},
												{
													"hexValue": "4d4e54",
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1168:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cd021b8e001a22311e1ccbd0526db1cac113eab46048373ce0baf2c8da1f63fe",
														"typeString": "literal_string \"MNT\""
													},
													"value": "MNT"
												}
											],
											"id": 979,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 976,
												"name": "ERC20",
												"nameLocations": [
													"1154:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 697,
												"src": "1154:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1154:20:7"
										},
										{
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 981,
														"name": "ourCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "1188:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1196:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 985,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "1208:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1208:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1200:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 983,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1200:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1200:19:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1196:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 989,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1195:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1188:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 991,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 980,
												"name": "ERC20Capped",
												"nameLocations": [
													"1176:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 874,
												"src": "1176:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1176:45:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:2:7"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:0:7"
									},
									"scope": 1191,
									"src": "1140:357:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "1531:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1022,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1550:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1554:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1550:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1024,
																"name": "contractOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "1564:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1550:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722d4d4e545f4d554d4241492e736f6c2d4f776e61626c65",
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1579:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6",
																"typeString": "literal_string \"Error-MNT_MUMBAI.sol-Ownable\""
															},
															"value": "Error-MNT_MUMBAI.sol-Ownable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7682ed758db24491d35cd3ffb7aed0db00f67403bb6ed02516621af1b6bf72d6",
																"typeString": "literal_string \"Error-MNT_MUMBAI.sol-Ownable\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "1542:68:7"
											},
											{
												"id": 1029,
												"nodeType": "PlaceholderStatement",
												"src": "1621:1:7"
											}
										]
									},
									"id": 1031,
									"name": "onlyOwner",
									"nameLocation": "1514:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:2:7"
									},
									"src": "1505:125:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "1693:700:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1035,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1889:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1893:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1889:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1902:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1889:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722d4d4e545f4d554d4241492e736f6c2d56616c75656c6573735f5472616e73616374696f6e",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1904:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd",
																"typeString": "literal_string \"Error-MNT_MUMBAI.sol-Valueless_Transaction\""
															},
															"value": "Error-MNT_MUMBAI.sol-Valueless_Transaction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_593f71fd6883c3fde2f12f27e7be5bd97daf622278d7b052d089fd35a5d644fd",
																"typeString": "literal_string \"Error-MNT_MUMBAI.sol-Valueless_Transaction\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1881:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1881:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "1881:68:7"
											},
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "tokensToMint",
														"nameLocation": "2019:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "2011:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1042,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2011:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1058,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1044,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2032:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2036:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2032:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2043:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1049,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 261,
																					"src": "2055:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																						"typeString": "function () view returns (uint8)"
																					}
																				},
																				"id": 1050,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2055:10:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2047:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1047,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2047:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2047:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2043:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1053,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2042:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2032:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1055,
															"name": "zTokenPriceInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "2068:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2068:18:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2032:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2011:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1061,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2118:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2122:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2118:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1060,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "2108:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2108:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1064,
																	"name": "tokensToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "2132:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2108:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1066,
																	"name": "capPerAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "2148:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2165:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1070,
																							"name": "decimals",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 261,
																							"src": "2177:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																								"typeString": "function () view returns (uint8)"
																							}
																						},
																						"id": 1071,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2177:10:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"id": 1069,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2169:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1068,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "2169:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2169:19:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2165:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1074,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2164:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2148:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:81:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722d4d4e545f4d554d4241492e736f6c2d457863656564735f4d61785f42616c616e6365",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2191:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44",
																"typeString": "literal_string \"Error-MNT_MUMBAI.sol-Exceeds_Max_Balance\""
															},
															"value": "Error-MNT_MUMBAI.sol-Exceeds_Max_Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a7bcb5cb4aed2a674336435893aeccf6c8389c2d6f1230f7bdfc74f52bb4f44",
																"typeString": "literal_string \"Error-MNT_MUMBAI.sol-Exceeds_Max_Balance\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2100:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2100:134:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "2100:134:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1081,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2253:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2257:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2253:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "tokensToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "2264:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1080,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "2247:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2247:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "2247:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1087,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2309:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2313:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2309:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "tokensToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "2321:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1090,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2335:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2339:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2335:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1092,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2346:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2352:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2346:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1095,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2373:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2377:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2373:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1094,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "2363:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2363:21:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1086,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2293:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:92:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "EmitStatement",
												"src": "2288:97:7"
											}
										]
									},
									"functionSelector": "06ed6908",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokensFromContract",
									"nameLocation": "1647:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1668:2:7"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1693:0:7"
									},
									"scope": 1191,
									"src": "1638:755:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "2465:159:7",
										"statements": [
											{
												"assignments": [
													1109
												],
												"declarations": [
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "previousCap",
														"nameLocation": "2484:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "2476:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2476:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"id": 1110,
													"name": "capPerAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 948,
													"src": "2498:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2476:35:7"
											},
											{
												"expression": {
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1112,
														"name": "capPerAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "2522:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1113,
														"name": "newCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "2536:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2522:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "2522:20:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1117,
															"name": "previousCap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "2579:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1118,
															"name": "newCap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "2592:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1119,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2600:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2600:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "CapPerAccountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "2558:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2558:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "EmitStatement",
												"src": "2553:63:7"
											}
										]
									},
									"functionSelector": "6a73bf53",
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyOwner",
												"nameLocations": [
													"2450:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1031,
												"src": "2450:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2450:9:7"
										}
									],
									"name": "updateCapPerAccount",
									"nameLocation": "2410:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "newCap",
												"nameLocation": "2435:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2430:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2430:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:13:7"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:0:7"
									},
									"scope": 1191,
									"src": "2401:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "2690:1006:7",
										"statements": [
											{
												"assignments": [
													null,
													1130,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1130,
														"mutability": "mutable",
														"name": "answer",
														"nameLocation": "2707:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1139,
														"src": "2703:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1129,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "2703:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1134,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1131,
															"name": "dataFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "2720:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2729:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "2720:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2720:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2701:45:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1135,
														"name": "answer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "3492:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030303030",
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3499:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1000000"
													},
													"src": "3492:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1138,
												"nodeType": "Return",
												"src": "3485:21:7"
											}
										]
									},
									"functionSelector": "ea6ecb08",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "OneMATICInCents",
									"nameLocation": "2641:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:7"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2680:3:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1126,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2680:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2679:5:7"
									},
									"scope": 1191,
									"src": "2632:1064:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "3767:247:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_2000000000000000000_by_1",
																	"typeString": "int_const 2000000000000000000"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3968:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3971:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3138",
																				"id": 1149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3975:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18_by_1",
																					"typeString": "int_const 18"
																				},
																				"value": "18"
																			},
																			"src": "3971:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		}
																	],
																	"id": 1151,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3970:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "3968:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2000000000000000000_by_1",
																	"typeString": "int_const 2000000000000000000"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2000000000000000000_by_1",
																	"typeString": "int_const 2000000000000000000"
																}
															],
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3960:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1145,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3960:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3960:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1156,
																	"name": "OneMATICInCents",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "3988:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
																		"typeString": "function () view returns (int256)"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3988:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3980:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1154,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3980:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3980:26:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3960:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1144,
												"id": 1160,
												"nodeType": "Return",
												"src": "3953:53:7"
											}
										]
									},
									"functionSelector": "c0e3daf5",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "zTokenPriceInWei",
									"nameLocation": "3713:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3729:2:7"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "3753:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:9:7"
									},
									"scope": 1191,
									"src": "3704:310:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "4077:209:7",
										"statements": [
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "fees",
														"nameLocation": "4096:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "4088:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4088:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1171,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4111:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MNT_$1191",
																	"typeString": "contract MNT"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MNT_$1191",
																	"typeString": "contract MNT"
																}
															],
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4103:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1169,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4103:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4103:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4117:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4103:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4088:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1180,
															"name": "fees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "4214:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1177,
																	"name": "contractOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "4190:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4182:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4182:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4182:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4205:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4182:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4182:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "4182:37:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1184,
															"name": "fees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "4256:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1185,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4262:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4268:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4262:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1183,
														"name": "MintingFeesWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "4235:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4235:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "EmitStatement",
												"src": "4230:48:7"
											}
										]
									},
									"functionSelector": "655ab927",
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1165,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1164,
												"name": "onlyOwner",
												"nameLocations": [
													"4062:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1031,
												"src": "4062:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4062:9:7"
										}
									],
									"name": "WithdrawMintingFees",
									"nameLocation": "4031:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4050:2:7"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4077:0:7"
									},
									"scope": 1191,
									"src": "4022:264:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1192,
							"src": "380:3909:7",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86,
								791,
								796
							],
							"usedEvents": [
								709,
								718,
								960,
								966,
								974
							]
						}
					],
					"src": "35:4354:7"
				},
				"id": 7
			}
		}
	}
}